package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationSN {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,3.92900E-03,3.92910E-03,4.00000E-03,4.15600E-03,4.15610E-03,
			4.30800E-03,4.46500E-03,4.46510E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,2.92000E-02,
			2.92001E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {8.0000E+00,7.5690E+00,7.1020E+00,6.2040E+00,5.4640E+00,5.4640E+00,5.4080E+00,5.2960E+00,5.2960E+00,5.1890E+00,5.0780E+00,5.0780E+00,4.7220E+00,4.1420E+00,3.2560E+00,2.6470E+00,1.7440E+00,1.2270E+00,7.1930E-01,7.1930E-01,6.9140E-01,4.5130E-01,3.1990E-01,2.3780E-01,1.4560E-01,9.8620E-02,4.7900E-02,2.8270E-02,1.3150E-02,7.5640E-03,4.9060E-03,3.4350E-03,1.9510E-03,1.2550E-03,1.2020E-03,8.0610E-04,5.6060E-04,3.1610E-04,3.0270E-04,1.4070E-04,7.9190E-05,5.0690E-05,3.5210E-05,2.5870E-05,1.9800E-05,1.5650E-05,1.2680E-05,1.0480E-05,8.8020E-06,7.5030E-06,6.4680E-06,5.6360E-06,4.9520E-06,3.9130E-06,3.1690E-06,2.6190E-06,2.2010E-06,1.8750E-06,1.6170E-06,1.4090E-06,7.9240E-07,5.0710E-07,3.5220E-07,1.9810E-07,1.2680E-07,5.6360E-08,3.1690E-08,1.4090E-08,7.9240E-09,5.0710E-09,3.5210E-09,1.9810E-09,1.2680E-09,5.6360E-10,3.1690E-10,1.4090E-10,7.9240E-11,5.0710E-11,3.5210E-11,1.9810E-11,1.2680E-11,5.6360E-12,3.1690E-12,1.4090E-12,7.9240E-13,5.0710E-13,3.5210E-13,1.9810E-13,1.2680E-13};
	final static double[] Incoh= {5.2710E-03,9.6840E-03,1.4050E-02,2.2020E-02,2.8580E-02,2.8580E-02,2.9060E-02,3.0090E-02,3.0090E-02,3.1080E-02,3.2080E-02,3.2080E-02,3.5400E-02,4.1220E-02,5.1640E-02,6.0670E-02,7.7310E-02,8.8070E-02,1.0010E-01,1.0010E-01,1.0090E-01,1.0770E-01,1.1130E-01,1.1290E-01,1.1320E-01,1.1150E-01,1.0490E-01,9.8210E-02,8.7200E-02,7.8880E-02,7.2440E-02,6.7220E-02,5.9250E-02,5.3370E-02,5.2810E-02,4.7790E-02,4.3470E-02,3.7120E-02,3.6670E-02,2.9230E-02,2.4390E-02,2.1060E-02,1.8620E-02,1.6740E-02,1.5230E-02,1.4000E-02,1.2970E-02,1.2100E-02,1.1350E-02,1.0690E-02,1.0120E-02,9.6030E-03,9.1470E-03,8.3600E-03,7.7060E-03,7.1580E-03,6.6910E-03,6.2800E-03,5.9250E-03,5.6110E-03,4.4590E-03,3.7220E-03,3.2070E-03,2.5290E-03,2.0990E-03,1.4950E-03,1.1720E-03,8.3100E-04,6.5090E-04,5.3880E-04,4.6120E-04,3.6020E-04,2.9630E-04,2.0690E-04,1.6020E-04,1.1140E-04,8.5990E-05,7.0260E-05,5.9610E-05,4.5920E-05,3.7490E-05,2.5910E-05,1.9920E-05,1.3740E-05,1.0550E-05,8.5890E-06,7.2590E-06,5.5650E-06,4.5290E-06};
	final static double[] PE= {8.1470E+03,3.2880E+03,1.6580E+03,6.0770E+02,3.0600E+02,9.2020E+02,9.3390E+02,8.4160E+02,1.1390E+03,1.0490E+03,9.6590E+02,1.1120E+03,8.4210E+02,5.2510E+02,2.4670E+02,1.3570E+02,4.4820E+01,2.0140E+01,6.9400E+00,4.2770E+01,4.0420E+01,1.8870E+01,1.0270E+01,6.2140E+00,2.7700E+00,1.4670E+00,4.5640E-01,1.9950E-01,6.3510E-02,2.9150E-02,1.6390E-02,1.0480E-02,5.4180E-03,3.3810E-03,3.2170E-03,2.1700E-03,1.5540E-03,9.4660E-04,9.1360E-04,5.0310E-04,3.3370E-04,2.4710E-04,1.9510E-04,1.6080E-04,1.3650E-04,1.1850E-04,1.0460E-04,9.3500E-05,8.4570E-05,7.7160E-05,7.0920E-05,6.5640E-05,6.1080E-05,5.3570E-05,4.7720E-05,4.3010E-05,3.9140E-05,3.5910E-05,3.3170E-05,3.0810E-05,2.2740E-05,1.8010E-05,1.4910E-05,1.1090E-05,8.8270E-06,5.8440E-06,4.3700E-06,2.9030E-06,2.1740E-06,1.7370E-06,1.4470E-06,1.0840E-06,8.6700E-07,5.7730E-07,4.3300E-07,2.8860E-07,2.1640E-07,1.7310E-07,1.4420E-07,1.0820E-07,8.6550E-08,5.7680E-08,4.3260E-08,2.8840E-08,2.1630E-08,1.7300E-08,1.4420E-08,1.0820E-08,8.6490E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.7210E-04,7.9950E-04,2.7340E-03,2.9230E-03,6.9850E-03,1.0770E-02,1.4040E-02,1.6860E-02,1.9370E-02,2.1630E-02,2.3690E-02,2.5570E-02,2.7300E-02,2.8900E-02,3.0390E-02,3.1760E-02,3.3020E-02,3.4200E-02,3.6350E-02,3.8280E-02,4.0020E-02,4.1610E-02,4.3060E-02,4.4380E-02,4.5610E-02,5.0570E-02,5.4230E-02,5.7120E-02,6.1330E-02,6.4380E-02,6.9140E-02,7.1990E-02,7.5330E-02,7.7210E-02,7.8480E-02,7.9390E-02,8.0610E-02,8.1370E-02,8.2490E-02,8.3100E-02,8.3750E-02,8.4110E-02,8.4310E-02,8.4520E-02,8.4720E-02,8.4820E-02,8.5020E-02,8.5120E-02,8.5230E-02,8.5280E-02,8.5280E-02,8.5330E-02,8.5330E-02,8.5380E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0220E-05,4.1700E-05,8.2990E-05,1.2730E-04,1.7150E-04,2.1430E-04,2.5520E-04,2.9400E-04,3.3070E-04,3.6540E-04,3.9800E-04,4.2900E-04,4.5840E-04,4.8630E-04,5.3770E-04,5.8490E-04,6.2800E-04,6.6760E-04,7.0360E-04,7.3760E-04,7.6910E-04,8.9890E-04,9.9790E-04,1.0760E-03,1.1940E-03,1.2790E-03,1.4210E-03,1.5100E-03,1.6180E-03,1.6830E-03,1.7280E-03,1.7600E-03,1.8050E-03,1.8350E-03,1.8800E-03,1.9050E-03,1.9330E-03,1.9490E-03,1.9590E-03,1.9660E-03,1.9750E-03,1.9810E-03,1.9890E-03,1.9940E-03,1.9980E-03,2.0010E-03,2.0030E-03,2.0040E-03,2.0050E-03,2.0060E-03};
	final static double[] TotAttn= {8.1550E+03,3.2960E+03,1.6650E+03,6.1400E+02,3.1140E+02,9.2570E+02,9.3940E+02,8.4690E+02,1.1450E+03,1.0550E+03,9.7100E+02,1.1170E+03,8.4690E+02,5.2920E+02,2.5010E+02,1.3840E+02,4.6640E+01,2.1460E+01,7.7590E+00,4.3580E+01,4.1210E+01,1.9430E+01,1.0700E+01,6.5650E+00,3.0290E+00,1.6770E+00,6.0910E-01,3.2600E-01,1.6390E-01,1.1560E-01,9.3740E-02,8.1130E-02,6.6620E-02,5.8000E-02,5.7230E-02,5.0940E-02,4.6380E-02,4.1120E-02,4.0810E-02,3.6860E-02,3.5610E-02,3.5480E-02,3.5830E-02,3.6470E-02,3.7240E-02,3.8080E-02,3.8950E-02,3.9840E-02,4.0710E-02,4.1560E-02,4.2380E-02,4.3150E-02,4.3900E-02,4.5300E-02,4.6620E-02,4.7850E-02,4.9010E-02,5.0080E-02,5.1080E-02,5.2020E-02,5.5950E-02,5.8970E-02,6.1420E-02,6.5070E-02,6.7760E-02,7.2070E-02,7.4670E-02,7.7790E-02,7.9550E-02,8.0750E-02,8.1620E-02,8.2780E-02,8.3500E-02,8.4570E-02,8.5160E-02,8.5800E-02,8.6150E-02,8.6340E-02,8.6540E-02,8.6740E-02,8.6840E-02,8.7040E-02,8.7140E-02,8.7240E-02,8.7290E-02,8.7290E-02,8.7340E-02,8.7340E-02,8.7390E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
