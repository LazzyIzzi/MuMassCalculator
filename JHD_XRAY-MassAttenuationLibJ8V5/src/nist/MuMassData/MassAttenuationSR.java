package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationSR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.94000E-03,1.94001E-03,2.00000E-03,2.00700E-03,2.00701E-03,2.10900E-03,2.21600E-03,
			2.21601E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,1.61000E-02,1.61001E-02,
			2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {6.1200E+00,5.7310E+00,5.4020E+00,5.4020E+00,5.3560E+00,5.3510E+00,5.3510E+00,5.2770E+00,5.1970E+00,5.1970E+00,4.6680E+00,4.0630E+00,3.5550E+00,3.1360E+00,2.4920E+00,2.0140E+00,1.2490E+00,1.1400E+00,1.1400E+00,8.4950E-01,4.8100E-01,3.1050E-01,2.1550E-01,1.5840E-01,9.6570E-02,6.5390E-02,3.1480E-02,1.8400E-02,8.4810E-03,4.8580E-03,3.1410E-03,2.1950E-03,1.2430E-03,7.9800E-04,7.6430E-04,5.1180E-04,3.5580E-04,2.0040E-04,1.9190E-04,8.9140E-05,5.0160E-05,3.2110E-05,2.2300E-05,1.6390E-05,1.2540E-05,9.9110E-06,8.0280E-06,6.6350E-06,5.5750E-06,4.7510E-06,4.0960E-06,3.5680E-06,3.1360E-06,2.4780E-06,2.0070E-06,1.6590E-06,1.3940E-06,1.1880E-06,1.0240E-06,8.9210E-07,5.0180E-07,3.2120E-07,2.2300E-07,1.2540E-07,8.0280E-08,3.5680E-08,2.0070E-08,8.9210E-09,5.0180E-09,3.2110E-09,2.2300E-09,1.2540E-09,8.0280E-10,3.5680E-10,2.0070E-10,8.9210E-11,5.0180E-11,3.2110E-11,2.2300E-11,1.2540E-11,8.0280E-12,3.5680E-12,2.0070E-12,8.9210E-13,5.0180E-13,3.2110E-13,2.2300E-13,1.2540E-13,8.0280E-14};
	final static double[] Incoh= {8.4060E-03,1.3340E-02,1.7350E-02,1.7350E-02,1.7900E-02,1.7960E-02,1.7960E-02,1.8880E-02,1.9830E-02,1.9830E-02,2.6580E-02,3.4550E-02,4.1820E-02,4.8290E-02,5.9110E-02,6.7950E-02,8.4810E-02,8.7770E-02,8.7770E-02,9.6430E-02,1.1000E-01,1.1660E-01,1.1970E-01,1.2080E-01,1.2000E-01,1.1750E-01,1.0980E-01,1.0240E-01,9.0450E-02,8.1650E-02,7.4850E-02,6.9420E-02,6.1140E-02,5.5030E-02,5.4450E-02,4.9250E-02,4.4790E-02,3.8240E-02,3.7770E-02,3.0100E-02,2.5110E-02,2.1690E-02,1.9180E-02,1.7230E-02,1.5680E-02,1.4420E-02,1.3360E-02,1.2460E-02,1.1680E-02,1.1010E-02,1.0410E-02,9.8900E-03,9.4160E-03,8.6050E-03,7.9380E-03,7.3750E-03,6.8870E-03,6.4680E-03,6.1020E-03,5.7780E-03,4.5910E-03,3.8320E-03,3.3020E-03,2.6040E-03,2.1620E-03,1.5400E-03,1.2070E-03,8.5570E-04,6.7000E-04,5.5460E-04,4.7490E-04,3.7090E-04,3.0510E-04,2.1310E-04,1.6490E-04,1.1460E-04,8.8520E-05,7.2370E-05,6.1370E-05,4.7280E-05,3.8610E-05,2.6680E-05,2.0510E-05,1.4140E-05,1.0860E-05,8.8460E-06,7.4780E-06,5.7320E-06,4.6630E-06};
	final static double[] PE= {3.4870E+03,1.3410E+03,7.1550E+02,2.8580E+03,2.5840E+03,2.5660E+03,3.5730E+03,3.1840E+03,2.8370E+03,3.2360E+03,1.5210E+03,7.2580E+02,4.0220E+02,2.4640E+02,1.1240E+02,6.0650E+01,1.9460E+01,1.5910E+01,1.0960E+02,6.2920E+01,2.0970E+01,9.3890E+00,4.9700E+00,2.9350E+00,1.2650E+00,6.5360E-01,1.9570E-01,8.3440E-02,2.5760E-02,1.1600E-02,6.4450E-03,4.0870E-03,2.0970E-03,1.3070E-03,1.2420E-03,8.3850E-04,6.0260E-04,3.6890E-04,3.5610E-04,1.9790E-04,1.3210E-04,9.8280E-05,7.7940E-05,6.4400E-05,5.4810E-05,4.7660E-05,4.2130E-05,3.7740E-05,3.4170E-05,3.1210E-05,2.8720E-05,2.6590E-05,2.4760E-05,2.1750E-05,1.9390E-05,1.7490E-05,1.5930E-05,1.4620E-05,1.3510E-05,1.2560E-05,9.2850E-06,7.3610E-06,6.0980E-06,4.5390E-06,3.6150E-06,2.3950E-06,1.7910E-06,1.1900E-06,8.9140E-07,7.1270E-07,5.9340E-07,4.4470E-07,3.5560E-07,2.3690E-07,1.7770E-07,1.1840E-07,8.8800E-08,7.1000E-08,5.9180E-08,4.4380E-08,3.5500E-08,2.3660E-08,1.7750E-08,1.1840E-08,8.8730E-09,7.1000E-09,5.9160E-09,4.4370E-09,3.5500E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1330E-04,5.4780E-04,1.9780E-03,2.1200E-03,5.2890E-03,8.3090E-03,1.0960E-02,1.3270E-02,1.5340E-02,1.7200E-02,1.8890E-02,2.0430E-02,2.1840E-02,2.3130E-02,2.4320E-02,2.5420E-02,2.6440E-02,2.7400E-02,2.9140E-02,3.0710E-02,3.2140E-02,3.3430E-02,3.4610E-02,3.5700E-02,3.6700E-02,4.0760E-02,4.3780E-02,4.6130E-02,4.9610E-02,5.2080E-02,5.6010E-02,5.8350E-02,6.1090E-02,6.2660E-02,6.3690E-02,6.4430E-02,6.5420E-02,6.6060E-02,6.6990E-02,6.7490E-02,6.8040E-02,6.8330E-02,6.8520E-02,6.8650E-02,6.8800E-02,6.8940E-02,6.9070E-02,6.9140E-02,6.9210E-02,6.9280E-02,6.9280E-02,6.9350E-02,6.9350E-02,6.9350E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0540E-05,4.2980E-05,8.5570E-05,1.3130E-04,1.7700E-04,2.2120E-04,2.6340E-04,3.0360E-04,3.4170E-04,3.7760E-04,4.1150E-04,4.4370E-04,4.7420E-04,5.0330E-04,5.5710E-04,6.0610E-04,6.5100E-04,6.9210E-04,7.3060E-04,7.6570E-04,7.9860E-04,9.3540E-04,1.0400E-03,1.1220E-03,1.2470E-03,1.3380E-03,1.4900E-03,1.5860E-03,1.7040E-03,1.7750E-03,1.8240E-03,1.8600E-03,1.9100E-03,1.9440E-03,1.9950E-03,2.0230E-03,2.0550E-03,2.0740E-03,2.0850E-03,2.0940E-03,2.1050E-03,2.1110E-03,2.1210E-03,2.1270E-03,2.1320E-03,2.1350E-03,2.1380E-03,2.1390E-03,2.1400E-03,2.1410E-03};
	final static double[] TotAttn= {3.4930E+03,1.3470E+03,7.2090E+02,2.8630E+03,2.5900E+03,2.5720E+03,3.5780E+03,3.1890E+03,2.8420E+03,3.2410E+03,1.5260E+03,7.2990E+02,4.0580E+02,2.4960E+02,1.1500E+02,6.2740E+01,2.0790E+01,1.7140E+01,1.1090E+02,6.3860E+01,2.1560E+01,9.8160E+00,5.3050E+00,3.2140E+00,1.4810E+00,8.3650E-01,3.3690E-01,2.0420E-01,1.2470E-01,9.8110E-02,8.4430E-02,7.5700E-02,6.4480E-02,5.7140E-02,5.6460E-02,5.0720E-02,4.6300E-02,4.0790E-02,4.0440E-02,3.5690E-02,3.3650E-02,3.2860E-02,3.2680E-02,3.2830E-02,3.3170E-02,3.3630E-02,3.4140E-02,3.4680E-02,3.5230E-02,3.5780E-02,3.6310E-02,3.6840E-02,3.7340E-02,3.8330E-02,3.9270E-02,4.0180E-02,4.1030E-02,4.1830E-02,4.2580E-02,4.3290E-02,4.6300E-02,4.8660E-02,5.0560E-02,5.3470E-02,5.5580E-02,5.9040E-02,6.1150E-02,6.3650E-02,6.5110E-02,6.6070E-02,6.6770E-02,6.7710E-02,6.8310E-02,6.9200E-02,6.9680E-02,7.0210E-02,7.0490E-02,7.0670E-02,7.0800E-02,7.0950E-02,7.1090E-02,7.1220E-02,7.1290E-02,7.1360E-02,7.1430E-02,7.1430E-02,7.1500E-02,7.1490E-02,7.1490E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
