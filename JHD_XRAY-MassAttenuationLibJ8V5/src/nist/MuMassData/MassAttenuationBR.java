package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationBR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.55000E-03,1.55001E-03,1.57300E-03,1.59600E-03,1.59601E-03,1.68600E-03,1.78200E-03,
			1.78201E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.34700E-02,1.34701E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {5.8330E+00,5.5120E+00,5.4750E+00,5.4750E+00,5.4590E+00,5.4420E+00,5.4420E+00,5.3770E+00,5.3100E+00,5.3100E+00,5.1480E+00,4.4390E+00,3.8440E+00,3.3610E+00,2.9600E+00,2.3230E+00,1.8460E+00,1.2870E+00,1.2870E+00,1.1220E+00,7.6500E-01,4.3260E-01,2.7660E-01,1.9120E-01,1.4050E-01,8.5690E-02,5.7970E-02,2.7790E-02,1.6200E-02,7.4560E-03,4.2650E-03,2.7550E-03,1.9230E-03,1.0880E-03,6.9870E-04,6.6910E-04,4.4810E-04,3.1150E-04,1.7540E-04,1.6790E-04,7.8000E-05,4.3890E-05,2.8100E-05,1.9510E-05,1.4330E-05,1.0970E-05,8.6750E-06,7.0250E-06,5.8060E-06,4.8790E-06,4.1570E-06,3.5840E-06,3.1220E-06,2.7440E-06,2.1680E-06,1.7560E-06,1.4520E-06,1.2190E-06,1.0390E-06,8.9610E-07,7.8080E-07,4.3910E-07,2.8100E-07,1.9510E-07,1.0970E-07,7.0250E-08,3.1220E-08,1.7560E-08,7.8080E-09,4.3910E-09,2.8100E-09,1.9510E-09,1.0970E-09,7.0250E-10,3.1220E-10,1.7560E-10,7.8080E-11,4.3910E-11,2.8100E-11,1.9510E-11,1.0970E-11,7.0250E-12,3.1220E-12,1.7560E-12,7.8080E-13,4.3910E-13,2.8100E-13,1.9510E-13,1.0970E-13,7.0250E-14};
	final static double[] Incoh= {5.1730E-03,1.0080E-02,1.0600E-02,1.0600E-02,1.0840E-02,1.1080E-02,1.1080E-02,1.2020E-02,1.3020E-02,1.3020E-02,1.5280E-02,2.5170E-02,3.3920E-02,4.1490E-02,4.8110E-02,5.9480E-02,6.9060E-02,8.2530E-02,8.2530E-02,8.7280E-02,9.9410E-02,1.1310E-01,1.1960E-01,1.2250E-01,1.2330E-01,1.2220E-01,1.1950E-01,1.1140E-01,1.0380E-01,9.1570E-02,8.2600E-02,7.5670E-02,7.0160E-02,6.1770E-02,5.5610E-02,5.5020E-02,4.9760E-02,4.5240E-02,3.8630E-02,3.8160E-02,3.0400E-02,2.5370E-02,2.1910E-02,1.9360E-02,1.7410E-02,1.5840E-02,1.4560E-02,1.3490E-02,1.2590E-02,1.1800E-02,1.1120E-02,1.0520E-02,9.9860E-03,9.5110E-03,8.6900E-03,8.0190E-03,7.4460E-03,6.9570E-03,6.5340E-03,6.1630E-03,5.8360E-03,4.6370E-03,3.8710E-03,3.3350E-03,2.6300E-03,2.1830E-03,1.5550E-03,1.2190E-03,8.6370E-04,6.7660E-04,5.6010E-04,4.7960E-04,3.7460E-04,3.0820E-04,2.1520E-04,1.6660E-04,1.1580E-04,8.9390E-05,7.3090E-05,6.1980E-05,4.7750E-05,3.8990E-05,2.6940E-05,2.0720E-05,1.4290E-05,1.0970E-05,8.9310E-06,7.5520E-06,5.7890E-06,4.7100E-06};
	final static double[] PE= {2.6180E+03,9.9640E+02,9.2020E+02,4.3060E+03,3.9310E+03,3.5870E+03,5.0970E+03,4.4950E+03,3.9640E+03,4.4890E+03,3.4020E+03,1.2260E+03,5.7760E+02,3.1790E+02,1.9380E+02,8.7880E+01,4.7200E+01,2.0390E+01,1.4570E+02,1.1060E+02,5.1790E+01,1.6990E+01,7.5040E+00,3.9500E+00,2.3180E+00,9.9030E-01,5.0870E-01,1.5070E-01,6.3850E-02,1.9560E-02,8.7650E-03,4.8540E-03,3.0730E-03,1.5740E-03,9.7980E-04,9.3150E-04,6.2920E-04,4.5240E-04,2.7740E-04,2.6790E-04,1.4920E-04,9.9860E-05,7.4370E-05,5.9030E-05,4.8820E-05,4.1570E-05,3.6170E-05,3.1990E-05,2.8670E-05,2.5960E-05,2.3720E-05,2.1830E-05,2.0220E-05,1.8830E-05,1.6540E-05,1.4760E-05,1.3310E-05,1.2130E-05,1.1130E-05,1.0290E-05,9.5640E-06,7.0730E-06,5.6100E-06,4.6480E-06,3.4610E-06,2.7560E-06,1.8270E-06,1.3660E-06,9.0820E-07,6.8010E-07,5.4350E-07,4.5270E-07,3.3930E-07,2.7130E-07,1.8070E-07,1.3550E-07,9.0370E-08,6.7740E-08,5.4180E-08,4.5150E-08,3.3860E-08,2.7090E-08,1.8060E-08,1.3540E-08,9.0290E-09,6.7710E-09,5.4170E-09,4.5140E-09,3.3850E-09,2.7080E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0090E-04,4.9420E-04,1.8070E-03,1.9390E-03,4.8830E-03,7.7100E-03,1.0190E-02,1.2370E-02,1.4310E-02,1.6060E-02,1.7640E-02,1.9090E-02,2.0410E-02,2.1620E-02,2.2730E-02,2.3760E-02,2.4720E-02,2.5620E-02,2.7260E-02,2.8730E-02,3.0060E-02,3.1280E-02,3.2390E-02,3.3410E-02,3.4340E-02,3.8170E-02,4.1020E-02,4.3240E-02,4.6520E-02,4.8850E-02,5.2570E-02,5.4780E-02,5.7360E-02,5.8850E-02,5.9820E-02,6.0520E-02,6.1450E-02,6.2050E-02,6.2920E-02,6.3400E-02,6.3910E-02,6.4180E-02,6.4360E-02,6.4480E-02,6.4630E-02,6.4740E-02,6.4880E-02,6.4950E-02,6.5030E-02,6.5070E-02,6.5090E-02,6.5110E-02,6.5140E-02,6.5150E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0640E-05,4.3420E-05,8.6450E-05,1.3270E-04,1.7880E-04,2.2350E-04,2.6630E-04,3.0700E-04,3.4540E-04,3.8170E-04,4.1600E-04,4.4870E-04,4.7960E-04,5.0900E-04,5.6350E-04,6.1320E-04,6.5860E-04,7.0050E-04,7.3930E-04,7.7550E-04,8.0870E-04,9.4810E-04,1.0540E-03,1.1380E-03,1.2650E-03,1.3580E-03,1.5130E-03,1.6100E-03,1.7300E-03,1.8020E-03,1.8510E-03,1.8870E-03,1.9370E-03,1.9700E-03,2.0190E-03,2.0470E-03,2.0770E-03,2.0950E-03,2.1060E-03,2.1140E-03,2.1240E-03,2.1310E-03,2.1390E-03,2.1440E-03,2.1490E-03,2.1520E-03,2.1540E-03,2.1550E-03,2.1560E-03,2.1570E-03};
	final static double[] TotAttn= {2.6240E+03,1.0020E+03,9.2570E+02,4.3120E+03,3.9360E+03,3.5930E+03,5.1030E+03,4.5000E+03,3.9700E+03,4.4940E+03,3.4070E+03,1.2310E+03,5.8150E+02,3.2130E+02,1.9690E+02,9.0260E+01,4.9120E+01,2.1760E+01,1.4710E+02,1.1180E+02,5.2660E+01,1.7530E+01,7.9010E+00,4.2640E+00,2.5820E+00,1.1980E+00,6.8610E-01,2.8990E-01,1.8380E-01,1.1860E-01,9.5630E-02,8.3280E-02,7.5160E-02,6.4430E-02,5.7280E-02,5.6620E-02,5.0940E-02,4.6500E-02,4.0890E-02,4.0530E-02,3.5520E-02,3.3270E-02,3.2290E-02,3.1940E-02,3.1960E-02,3.2180E-02,3.2520E-02,3.2930E-02,3.3380E-02,3.3840E-02,3.4290E-02,3.4760E-02,3.5210E-02,3.5660E-02,3.6530E-02,3.7380E-02,3.8180E-02,3.8960E-02,3.9680E-02,4.0360E-02,4.1000E-02,4.3770E-02,4.5950E-02,4.7720E-02,5.0420E-02,5.2400E-02,5.5640E-02,5.7610E-02,5.9960E-02,6.1330E-02,6.2230E-02,6.2890E-02,6.3760E-02,6.4330E-02,6.5160E-02,6.5610E-02,6.6100E-02,6.6370E-02,6.6530E-02,6.6650E-02,6.6810E-02,6.6910E-02,6.7040E-02,6.7120E-02,6.7190E-02,6.7230E-02,6.7260E-02,6.7270E-02,6.7300E-02,6.7310E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
