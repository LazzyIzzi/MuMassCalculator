package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationLA {

	final static double[] MeV= {1.00000E-03,1.06000E-03,1.12300E-03,1.12301E-03,1.16300E-03,1.20400E-03,1.20401E-03,1.28000E-03,1.36100E-03,
			1.36101E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,5.48300E-03,5.48310E-03,5.68300E-03,5.89100E-03,
			5.89110E-03,6.00000E-03,6.26600E-03,6.26610E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,3.89200E-02,
			3.89210E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,
			5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,
			4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,
			1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,
			4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,
			6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,
			1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {8.7360E+00,8.6720E+00,8.6060E+00,8.6060E+00,8.5630E+00,8.5190E+00,8.5190E+00,8.4400E+00,8.3540E+00,8.3540E+00,8.2030E+00,7.6740E+00,6.6900E+00,5.8440E+00,5.1330E+00,4.8380E+00,4.8380E+00,4.7250E+00,4.6090E+00,4.6090E+00,4.5480E+00,4.4090E+00,4.4090E+00,3.6380E+00,2.9700E+00,1.9530E+00,1.4040E+00,8.1160E-01,5.5020E-01,5.5020E-01,5.2810E-01,3.7570E-01,2.8170E-01,1.7440E-01,1.1830E-01,5.7620E-02,3.4160E-02,1.6000E-02,9.2260E-03,5.9960E-03,4.2030E-03,2.3920E-03,1.5400E-03,1.4750E-03,9.9020E-04,6.8930E-04,3.8870E-04,3.7220E-04,1.7310E-04,9.7420E-05,6.2390E-05,4.3320E-05,3.1830E-05,2.4370E-05,1.9260E-05,1.5600E-05,1.2890E-05,1.0830E-05,9.2300E-06,7.9600E-06,6.9320E-06,6.0960E-06,4.8170E-06,3.9010E-06,3.2240E-06,2.7090E-06,2.3080E-06,1.9900E-06,1.7340E-06,9.7500E-07,6.2390E-07,4.3340E-07,2.4380E-07,1.5600E-07,6.9320E-08,3.9010E-08,1.7340E-08,9.7500E-09,6.2390E-09,4.3340E-09,2.4380E-09,1.5600E-09,6.9320E-10,3.9010E-10,1.7340E-10,9.7500E-11,6.2390E-11,4.3340E-11,2.4380E-11,1.5600E-11,6.9320E-12,3.9010E-12,1.7340E-12,9.7500E-13,6.2390E-13,4.3340E-13,2.4380E-13,1.5600E-13};
	final static double[] Incoh= {6.8850E-03,7.4130E-03,7.9730E-03,7.9730E-03,8.3200E-03,8.6710E-03,8.6710E-03,9.2950E-03,9.9500E-03,9.9500E-03,1.1100E-02,1.5120E-02,2.2780E-02,2.9830E-02,3.6150E-02,3.8900E-02,3.8900E-02,3.9980E-02,4.1080E-02,4.1080E-02,4.1650E-02,4.3010E-02,4.3010E-02,5.0810E-02,5.8530E-02,7.3700E-02,8.4110E-02,9.6330E-02,1.0230E-01,1.0230E-01,1.0280E-01,1.0630E-01,1.0800E-01,1.0870E-01,1.0730E-01,1.0130E-01,9.5030E-02,8.4580E-02,7.6610E-02,7.0410E-02,6.5380E-02,5.7660E-02,5.1980E-02,5.1420E-02,4.6520E-02,4.2330E-02,3.6160E-02,3.5720E-02,2.8470E-02,2.3750E-02,2.0520E-02,1.8140E-02,1.6310E-02,1.4840E-02,1.3640E-02,1.2640E-02,1.1790E-02,1.1060E-02,1.0410E-02,9.8540E-03,9.3560E-03,8.9090E-03,8.1420E-03,7.5090E-03,6.9760E-03,6.5160E-03,6.1220E-03,5.7750E-03,5.4670E-03,4.3440E-03,3.6260E-03,3.1250E-03,2.4640E-03,2.0450E-03,1.4570E-03,1.1420E-03,8.0940E-04,6.3380E-04,5.2460E-04,4.4910E-04,3.5090E-04,2.8870E-04,2.0160E-04,1.5600E-04,1.0850E-04,8.3760E-05,6.8460E-05,5.8050E-05,4.4740E-05,3.6530E-05,2.5240E-05,1.9410E-05,1.3380E-05,1.0270E-05,8.3670E-06,7.0710E-06,5.4240E-06,4.4130E-06};
	final static double[] PE= {9.0780E+03,7.9670E+03,6.9930E+03,8.0160E+03,7.4390E+03,6.9020E+03,7.3140E+03,6.4240E+03,5.6450E+03,5.8960E+03,4.7650E+03,2.4560E+03,9.2000E+02,4.4700E+02,2.5270E+02,1.9900E+02,5.7140E+02,5.2380E+02,4.7990E+02,6.5030E+02,6.2730E+02,5.6100E+02,6.4730E+02,3.4920E+02,1.9370E+02,6.5290E+01,2.9700E+01,9.6160E+00,4.6170E+00,2.7070E+01,2.5150E+01,1.3990E+01,8.5710E+00,3.8940E+00,2.0900E+00,6.6510E-01,2.9470E-01,9.5510E-02,4.4310E-02,2.5100E-02,1.6120E-02,8.3760E-03,5.2370E-03,5.0070E-03,3.3780E-03,2.4160E-03,1.4680E-03,1.4160E-03,7.7690E-04,5.1330E-04,3.7910E-04,2.9880E-04,2.4590E-04,2.0840E-04,1.8070E-04,1.5940E-04,1.4250E-04,1.2880E-04,1.1740E-04,1.0790E-04,9.9800E-05,9.2820E-05,8.1380E-05,7.2440E-05,6.5250E-05,5.9400E-05,5.4450E-05,5.0290E-05,4.6690E-05,3.4440E-05,2.7270E-05,2.2560E-05,1.6770E-05,1.3350E-05,8.8360E-06,6.6030E-06,4.3870E-06,3.2840E-06,2.6250E-06,2.1850E-06,1.6370E-06,1.3090E-06,8.7230E-07,6.5420E-07,4.3570E-07,3.2680E-07,2.6140E-07,2.1790E-07,1.6340E-07,1.3070E-07,8.7100E-08,6.5330E-08,4.3570E-08,3.2670E-08,2.6130E-08,2.1780E-08,1.6330E-08,1.3070E-08};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,2.0940E-04,9.6770E-04,3.2040E-03,3.4190E-03,7.9380E-03,1.2060E-02,1.5600E-02,1.8660E-02,2.1360E-02,2.3790E-02,2.6000E-02,2.8030E-02,2.9900E-02,3.1630E-02,3.3250E-02,3.4740E-02,3.6120E-02,3.7400E-02,3.9730E-02,4.1810E-02,4.3700E-02,4.5440E-02,4.7000E-02,4.8430E-02,4.9730E-02,5.5100E-02,5.9090E-02,6.2210E-02,6.6810E-02,7.0060E-02,7.5220E-02,7.8340E-02,8.1940E-02,8.4020E-02,8.5410E-02,8.6360E-02,8.7660E-02,8.8530E-02,8.9740E-02,9.0390E-02,9.1130E-02,9.1520E-02,9.1780E-02,9.1950E-02,9.2170E-02,9.2300E-02,9.2520E-02,9.2600E-02,9.2730E-02,9.2780E-02,9.2820E-02,9.2820E-02,9.2860E-02,9.2860E-02};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {9.0870E+03,7.9750E+03,7.0020E+03,8.0250E+03,7.4470E+03,6.9110E+03,7.3220E+03,6.4320E+03,5.6530E+03,5.9050E+03,4.7730E+03,2.4640E+03,9.2670E+02,4.5290E+02,2.5780E+02,2.0390E+02,5.7630E+02,5.2860E+02,4.8460E+02,6.5500E+02,6.3190E+02,5.6550E+02,6.5170E+02,3.5290E+02,1.9670E+02,6.7320E+01,3.1190E+01,1.0520E+01,5.2700E+00,2.7730E+01,2.5780E+01,1.4470E+01,8.9610E+00,4.1770E+00,2.3150E+00,8.2400E-01,4.2390E-01,1.9610E-01,1.3010E-01,1.0150E-01,8.5700E-02,6.8430E-02,5.8760E-02,5.7900E-02,5.1100E-02,4.6400E-02,4.1220E-02,4.0920E-02,3.7370E-02,3.6460E-02,3.6650E-02,3.7260E-02,3.8110E-02,3.9070E-02,4.0090E-02,4.1130E-02,4.2160E-02,4.3180E-02,4.4180E-02,4.5130E-02,4.6030E-02,4.6880E-02,4.8480E-02,4.9960E-02,5.1350E-02,5.2660E-02,5.3860E-02,5.4970E-02,5.5990E-02,6.0350E-02,6.3710E-02,6.6400E-02,7.0450E-02,7.3360E-02,7.8060E-02,8.0950E-02,8.4320E-02,8.6290E-02,8.7610E-02,8.8520E-02,8.9760E-02,9.0600E-02,9.1770E-02,9.2400E-02,9.3110E-02,9.3500E-02,9.3750E-02,9.3920E-02,9.4130E-02,9.4260E-02,9.4480E-02,9.4560E-02,9.4690E-02,9.4730E-02,9.4780E-02,9.4780E-02,9.4820E-02,9.4820E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
