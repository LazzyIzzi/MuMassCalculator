package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTB {

	final static double[] MeV= {1.00000E-03,1.11400E-03,1.24100E-03,1.24101E-03,1.25800E-03,1.27500E-03,1.27501E-03,1.50000E-03,1.61100E-03,
			1.61101E-03,1.68800E-03,1.76800E-03,1.76801E-03,1.86500E-03,1.96800E-03,1.96801E-03,2.00000E-03,3.00000E-03,4.00000E-03,
			5.00000E-03,6.00000E-03,7.51400E-03,7.51410E-03,8.00000E-03,8.25200E-03,8.25210E-03,8.47700E-03,8.70800E-03,8.70810E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,5.20000E-02,5.20010E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.0110E+01,9.9830E+00,9.8790E+00,9.8790E+00,9.8680E+00,9.8560E+00,9.8560E+00,9.6290E+00,9.5150E+00,9.5150E+00,9.4430E+00,9.3670E+00,9.3670E+00,9.2690E+00,9.1620E+00,9.1620E+00,9.1280E+00,8.1280E+00,7.1840E+00,6.3470E+00,5.6310E+00,4.7400E+00,4.7400E+00,4.4940E+00,4.3770E+00,4.3770E+00,4.2740E+00,4.1720E+00,4.1720E+00,3.6590E+00,2.3680E+00,1.6890E+00,9.9470E-01,6.4830E-01,4.5930E-01,4.3200E-01,4.3200E-01,3.4510E-01,2.1580E-01,1.4710E-01,7.1690E-02,4.2670E-02,2.0120E-02,1.1640E-02,7.5790E-03,5.3240E-03,3.0350E-03,1.9570E-03,1.8750E-03,1.2600E-03,8.7760E-04,4.9530E-04,4.7440E-04,2.2070E-04,1.2430E-04,7.9580E-05,5.5250E-05,4.0620E-05,3.1090E-05,2.4570E-05,1.9900E-05,1.6450E-05,1.3820E-05,1.1780E-05,1.0160E-05,8.8480E-06,7.7760E-06,6.1420E-06,4.9750E-06,4.1110E-06,3.4560E-06,2.9450E-06,2.5390E-06,2.2120E-06,1.2440E-06,7.9610E-07,5.5290E-07,3.1110E-07,1.9910E-07,8.8480E-08,4.9750E-08,2.2120E-08,1.2440E-08,7.9610E-09,5.5290E-09,3.1100E-09,1.9910E-09,8.8480E-10,4.9750E-10,2.2120E-10,1.2440E-10,7.9610E-11,5.5290E-11,3.1100E-11,1.9910E-11,8.8480E-12,4.9750E-12,2.2120E-12,1.2440E-12,7.9610E-13,5.5290E-13,3.1100E-13,1.9910E-13};
	final static double[] Incoh= {5.5130E-03,6.4020E-03,7.2940E-03,7.2940E-03,7.3980E-03,7.5030E-03,7.5030E-03,9.1170E-03,9.9050E-03,9.9050E-03,1.0430E-02,1.0980E-02,1.0980E-02,1.1650E-02,1.2360E-02,1.2360E-02,1.2580E-02,1.9340E-02,2.5650E-02,3.1460E-02,3.6720E-02,4.3650E-02,4.3650E-02,4.5700E-02,4.6680E-02,4.6680E-02,4.7560E-02,4.8460E-02,4.8460E-02,5.3160E-02,6.7980E-02,7.8890E-02,9.2340E-02,9.9430E-02,1.0330E-01,1.0380E-01,1.0380E-01,1.0530E-01,1.0640E-01,1.0550E-01,1.0000E-01,9.4050E-02,8.3890E-02,7.6090E-02,6.9990E-02,6.5020E-02,5.7410E-02,5.1720E-02,5.1190E-02,4.6340E-02,4.2170E-02,3.6020E-02,3.5580E-02,2.8370E-02,2.3680E-02,2.0450E-02,1.8080E-02,1.6250E-02,1.4790E-02,1.3600E-02,1.2600E-02,1.1750E-02,1.1020E-02,1.0380E-02,9.8220E-03,9.3250E-03,8.8780E-03,8.1170E-03,7.4840E-03,6.9530E-03,6.4950E-03,6.1010E-03,5.7560E-03,5.4490E-03,4.3310E-03,3.6140E-03,3.1140E-03,2.4560E-03,2.0390E-03,1.4520E-03,1.1380E-03,8.0670E-04,6.3170E-04,5.2290E-04,4.4790E-04,3.4980E-04,2.8770E-04,2.0090E-04,1.5550E-04,1.0810E-04,8.3480E-05,6.8250E-05,5.7860E-05,4.4600E-05,3.6400E-05,2.5160E-05,1.9340E-05,1.3340E-05,1.0240E-05,8.3400E-06,7.0480E-06,5.4040E-06,4.3990E-06};
	final static double[] PE= {2.3860E+03,1.9420E+03,1.5820E+03,2.2760E+03,3.3600E+03,4.9600E+03,5.8700E+03,5.3050E+03,4.4560E+03,5.1530E+03,4.6290E+03,4.1570E+03,4.4150E+03,3.9150E+03,3.4730E+03,3.6280E+03,3.4980E+03,1.3460E+03,6.6240E+02,3.7740E+02,2.3670E+02,1.3210E+02,3.6100E+02,3.0880E+02,2.8370E+02,3.8800E+02,3.6320E+02,3.3990E+02,3.9290E+02,2.7780E+02,9.5570E+01,4.4110E+01,1.4540E+01,6.5400E+00,3.5010E+00,3.1370E+00,1.7230E+01,1.1780E+01,5.5020E+00,3.0000E+00,9.7880E-01,4.4070E-01,1.4580E-01,6.8510E-02,3.9140E-02,2.5270E-02,1.3210E-02,8.2760E-03,7.9200E-03,5.3390E-03,3.8120E-03,2.3130E-03,2.2300E-03,1.2180E-03,8.0260E-04,5.9110E-04,4.6490E-04,3.8200E-04,3.2330E-04,2.8000E-04,2.4670E-04,2.2040E-04,1.9910E-04,1.8140E-04,1.6660E-04,1.5400E-04,1.4320E-04,1.2550E-04,1.1160E-04,1.0050E-04,9.1400E-05,8.3820E-05,7.7380E-05,7.1840E-05,5.2940E-05,4.1870E-05,3.4650E-05,2.5740E-05,2.0480E-05,1.3550E-05,1.0120E-05,6.7260E-06,5.0360E-06,4.0240E-06,3.3500E-06,2.5100E-06,2.0070E-06,1.3370E-06,1.0020E-06,6.6810E-07,5.0090E-07,4.0050E-07,3.3380E-07,2.5040E-07,2.0030E-07,1.3350E-07,1.0010E-07,6.6730E-08,5.0060E-08,4.0050E-08,3.3370E-08,2.5030E-08,2.0020E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {2.3960E+03,1.9520E+03,1.5920E+03,2.2860E+03,3.3700E+03,4.9700E+03,5.8790E+03,5.3150E+03,4.4660E+03,5.1630E+03,4.6380E+03,4.1660E+03,4.4240E+03,3.9240E+03,3.4820E+03,3.6370E+03,3.5070E+03,1.3540E+03,6.6960E+02,3.8380E+02,2.4230E+02,1.3680E+02,3.6580E+02,3.1330E+02,2.8820E+02,3.9240E+02,3.6750E+02,3.4410E+02,3.9720E+02,2.8150E+02,9.8000E+01,4.5880E+01,1.5630E+01,7.2880E+00,4.0640E+00,3.6730E+00,1.7770E+01,1.2230E+01,5.8240E+00,3.2530E+00,1.1510E+00,5.7740E-01,2.4980E-01,1.5620E-01,1.1670E-01,9.5620E-02,7.3650E-02,6.1960E-02,6.0990E-02,5.3200E-02,4.8080E-02,4.2720E-02,4.2420E-02,3.9080E-02,3.8480E-02,3.8940E-02,3.9810E-02,4.0880E-02,4.2060E-02,4.3270E-02,4.4490E-02,4.5700E-02,4.6880E-02,4.8030E-02,4.9140E-02,5.0170E-02,5.1180E-02,5.3030E-02,5.4700E-02,5.6280E-02,5.7740E-02,5.9120E-02,6.0390E-02,6.1550E-02,6.6520E-02,7.0320E-02,7.3300E-02,7.7820E-02,8.1070E-02,8.6300E-02,8.9470E-02,9.3180E-02,9.5300E-02,9.6740E-02,9.7760E-02,9.9100E-02,9.9980E-02,1.0130E-01,1.0200E-01,1.0270E-01,1.0310E-01,1.0340E-01,1.0350E-01,1.0380E-01,1.0390E-01,1.0410E-01,1.0420E-01,1.0440E-01,1.0440E-01,1.0450E-01,1.0450E-01,1.0450E-01,1.0450E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
