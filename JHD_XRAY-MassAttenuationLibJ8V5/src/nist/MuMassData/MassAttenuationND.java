package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationND {

	final static double[] MeV= {1.00000E-03,1.00200E-03,1.00500E-03,1.00501E-03,1.14200E-03,1.29700E-03,1.29701E-03,1.34900E-03,1.40300E-03,
			1.40301E-03,1.50000E-03,1.57500E-03,1.57501E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,6.20800E-03,
			6.20810E-03,6.46000E-03,6.72200E-03,6.72210E-03,6.92100E-03,7.12600E-03,7.12610E-03,8.00000E-03,1.00000E-02,1.50000E-02,
			2.00000E-02,3.00000E-02,4.00000E-02,4.35700E-02,4.35710E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,
			2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,
			2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,
			1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,
			2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,
			3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,
			5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,
			8.00000E+04,1.00000E+05};
	final static double[] Coh= {9.4020E+00,9.3980E+00,9.3940E+00,9.3940E+00,9.2360E+00,9.1060E+00,9.1060E+00,9.0540E+00,8.9970E+00,8.9970E+00,8.8930E+00,8.8140E+00,8.8140E+00,8.3750E+00,7.3730E+00,6.4630E+00,5.6820E+00,5.0270E+00,4.9060E+00,4.9060E+00,4.7610E+00,4.6180E+00,4.6180E+00,4.5150E+00,4.4130E+00,4.4130E+00,4.0080E+00,3.2640E+00,2.1300E+00,1.5290E+00,8.9140E-01,5.7990E-01,5.0940E-01,5.0940E-01,4.1190E-01,3.0930E-01,1.9230E-01,1.3060E-01,6.3630E-02,3.7780E-02,1.7740E-02,1.0250E-02,6.6630E-03,4.6720E-03,2.6620E-03,1.7150E-03,1.6420E-03,1.1030E-03,7.6780E-04,4.3300E-04,4.1480E-04,1.9290E-04,1.0860E-04,6.9560E-05,4.8310E-05,3.5490E-05,2.7180E-05,2.1470E-05,1.7390E-05,1.4370E-05,1.2080E-05,1.0290E-05,8.8760E-06,7.7320E-06,6.7970E-06,5.3690E-06,4.3500E-06,3.5940E-06,3.0200E-06,2.5740E-06,2.2190E-06,1.9330E-06,1.0870E-06,6.9600E-07,4.8310E-07,2.7180E-07,1.7400E-07,7.7320E-08,4.3500E-08,1.9330E-08,1.0870E-08,6.9600E-09,4.8310E-09,2.7180E-09,1.7400E-09,7.7320E-10,4.3500E-10,1.9330E-10,1.0870E-10,6.9600E-11,4.8310E-11,2.7180E-11,1.7400E-11,7.7320E-12,4.3500E-12,1.9330E-12,1.0870E-12,6.9600E-13,4.8310E-13,2.7180E-13,1.7400E-13};
	final static double[] Incoh= {6.3170E-03,6.3380E-03,6.3590E-03,6.3590E-03,7.4560E-03,8.6550E-03,8.6550E-03,9.0570E-03,9.4770E-03,9.4770E-03,1.0240E-02,1.0820E-02,1.0820E-02,1.4070E-02,2.1460E-02,2.8300E-02,3.4480E-02,3.9960E-02,4.1020E-02,4.1020E-02,4.2280E-02,4.3550E-02,4.3550E-02,4.4460E-02,4.5380E-02,4.5380E-02,4.9220E-02,5.6990E-02,7.2440E-02,8.3330E-02,9.6280E-02,1.0300E-01,1.0460E-01,1.0460E-01,1.0670E-01,1.0860E-01,1.0940E-01,1.0820E-01,1.0240E-01,9.6110E-02,8.5590E-02,7.7570E-02,7.1310E-02,6.6220E-02,5.8450E-02,5.2650E-02,5.2110E-02,4.7180E-02,4.2920E-02,3.6650E-02,3.6200E-02,2.8860E-02,2.4080E-02,2.0800E-02,1.8390E-02,1.6520E-02,1.5040E-02,1.3830E-02,1.2810E-02,1.1950E-02,1.1210E-02,1.0560E-02,9.9870E-03,9.4820E-03,9.0310E-03,8.2540E-03,7.6110E-03,7.0680E-03,6.6050E-03,6.2040E-03,5.8530E-03,5.5400E-03,4.4050E-03,3.6760E-03,3.1670E-03,2.4980E-03,2.0730E-03,1.4760E-03,1.1580E-03,8.2040E-04,6.4250E-04,5.3190E-04,4.5550E-04,3.5570E-04,2.9260E-04,2.0440E-04,1.5820E-04,1.1000E-04,8.4880E-05,6.9430E-05,5.8870E-05,4.5340E-05,3.7020E-05,2.5590E-05,1.9670E-05,1.3560E-05,1.0420E-05,8.4840E-06,7.1690E-06,5.4990E-06,4.4720E-06};
	final static double[] PE= {6.6180E+03,6.7720E+03,6.9220E+03,8.5130E+03,7.1020E+03,5.9240E+03,6.8220E+03,6.2560E+03,5.7370E+03,6.0830E+03,5.2650E+03,4.7300E+03,4.9430E+03,2.8700E+03,1.0860E+03,5.3020E+02,3.0040E+02,1.8760E+02,1.7170E+02,4.8430E+02,4.3830E+02,3.9670E+02,5.4110E+02,5.0310E+02,4.6800E+02,5.4030E+02,4.0540E+02,2.2670E+02,7.7030E+01,3.5230E+01,1.1480E+01,5.1270E+00,4.0290E+00,2.3040E+01,1.5980E+01,9.9070E+00,4.5380E+00,2.4490E+00,7.8620E-01,3.5060E-01,1.1450E-01,5.3360E-02,3.0320E-02,1.9510E-02,1.0160E-02,6.3540E-03,6.0830E-03,4.1000E-03,2.9310E-03,1.7800E-03,1.7170E-03,9.4020E-04,6.2040E-04,4.5760E-04,3.6050E-04,2.9640E-04,2.5120E-04,2.1770E-04,1.9190E-04,1.7150E-04,1.5500E-04,1.4130E-04,1.2980E-04,1.2000E-04,1.1160E-04,9.7860E-05,8.7090E-05,7.8450E-05,7.1350E-05,6.5420E-05,6.0410E-05,5.6110E-05,4.1350E-05,3.2740E-05,2.7080E-05,2.0130E-05,1.6020E-05,1.0600E-05,7.9240E-06,5.2650E-06,3.9400E-06,3.1480E-06,2.6220E-06,1.9640E-06,1.5710E-06,1.0460E-06,7.8450E-07,5.2270E-07,3.9200E-07,3.1360E-07,2.6130E-07,1.9600E-07,1.5680E-07,1.0450E-07,7.8370E-08,5.2230E-08,3.9180E-08,3.1350E-08,2.6120E-08,1.9590E-08,1.5670E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {6.6270E+03,6.7810E+03,6.9320E+03,8.5220E+03,7.1110E+03,5.9340E+03,6.8310E+03,6.2650E+03,5.7460E+03,6.0920E+03,5.2740E+03,4.7390E+03,4.9520E+03,2.8780E+03,1.0930E+03,5.3670E+02,3.0620E+02,1.9270E+02,1.7670E+02,4.8930E+02,4.4310E+02,4.0130E+02,5.4580E+02,5.0760E+02,4.7250E+02,5.4470E+02,4.0940E+02,2.3000E+02,7.9230E+01,3.6840E+01,1.2460E+01,5.8100E+00,4.6430E+00,2.3660E+01,1.6500E+01,1.0330E+01,4.8400E+00,2.6880E+00,9.5220E-01,4.8450E-01,2.1780E-01,1.4120E-01,1.0830E-01,9.0400E-02,7.1270E-02,6.0720E-02,5.9830E-02,5.2610E-02,4.7690E-02,4.2360E-02,4.2060E-02,3.8560E-02,3.7760E-02,3.8060E-02,3.8790E-02,3.9740E-02,4.0810E-02,4.1920E-02,4.3040E-02,4.4160E-02,4.5250E-02,4.6330E-02,4.7350E-02,4.8320E-02,4.9250E-02,5.0970E-02,5.2580E-02,5.4030E-02,5.5430E-02,5.6690E-02,5.7910E-02,5.9000E-02,6.3650E-02,6.7230E-02,7.0090E-02,7.4370E-02,7.7450E-02,8.2450E-02,8.5470E-02,8.9030E-02,9.1130E-02,9.2480E-02,9.3480E-02,9.4800E-02,9.5640E-02,9.6890E-02,9.7580E-02,9.8310E-02,9.8720E-02,9.8960E-02,9.9130E-02,9.9370E-02,9.9500E-02,9.9700E-02,9.9830E-02,9.9950E-02,9.9990E-02,1.0000E-01,1.0010E-01,1.0010E-01,1.0010E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
