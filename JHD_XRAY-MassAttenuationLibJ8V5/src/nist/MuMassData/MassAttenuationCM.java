package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationCM {

	final static double[] MeV= {1.00000E-03,1.07400E-03,1.15400E-03,1.15401E-03,1.28900E-03,1.44000E-03,1.44001E-03,1.50000E-03,1.64300E-03,
			1.64301E-03,2.00000E-03,3.00000E-03,3.97100E-03,3.97110E-03,4.00000E-03,4.22700E-03,4.22710E-03,4.50300E-03,4.79700E-03,
			4.79710E-03,5.00000E-03,5.89500E-03,5.89510E-03,6.00000E-03,6.28800E-03,6.28810E-03,8.00000E-03,1.00000E-02,1.50000E-02,
			1.89300E-02,1.89301E-02,2.00000E-02,2.38000E-02,2.38001E-02,2.41300E-02,2.44600E-02,2.44601E-02,3.00000E-02,4.00000E-02,
			5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.28200E-01,1.28201E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,
			5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,
			4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,
			1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,
			4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,
			6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,
			1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.4300E+01,1.4210E+01,1.4120E+01,1.4120E+01,1.3960E+01,1.3770E+01,1.3770E+01,1.3690E+01,1.3500E+01,1.3500E+01,1.3030E+01,1.1710E+01,1.0510E+01,1.0510E+01,1.0480E+01,1.0220E+01,1.0220E+01,9.9110E+00,9.5960E+00,9.5960E+00,9.3860E+00,8.5360E+00,8.5360E+00,8.4430E+00,8.1970E+00,8.1970E+00,6.9390E+00,5.8110E+00,3.9660E+00,3.0660E+00,3.0660E+00,2.8740E+00,2.3170E+00,2.3170E+00,2.2770E+00,2.2370E+00,2.2370E+00,1.6980E+00,1.1400E+00,8.2580E-01,6.2350E-01,3.9190E-01,2.7200E-01,1.7920E-01,1.7920E-01,1.3670E-01,8.2020E-02,3.9440E-02,2.3270E-02,1.5350E-02,1.0880E-02,6.2760E-03,4.0800E-03,3.9120E-03,2.6450E-03,1.8510E-03,1.0510E-03,1.0070E-03,4.7120E-04,2.6590E-04,1.7050E-04,1.1850E-04,8.7140E-05,6.6740E-05,5.2750E-05,4.2730E-05,3.5320E-05,2.9690E-05,2.5300E-05,2.1810E-05,1.9000E-05,1.6700E-05,1.3200E-05,1.0690E-05,8.8360E-06,7.4240E-06,6.3280E-06,5.4550E-06,4.7530E-06,2.6740E-06,1.7110E-06,1.1880E-06,6.6830E-07,4.2780E-07,1.9010E-07,1.0690E-07,4.7530E-08,2.6740E-08,1.7110E-08,1.1880E-08,6.6830E-09,4.2780E-09,1.9010E-09,1.0690E-09,4.7530E-10,2.6740E-10,1.7110E-10,1.1880E-10,6.6830E-11,4.2780E-11,1.9010E-11,1.0690E-11,4.7530E-12,2.6740E-12,1.7110E-12,1.1880E-12,6.6830E-13,4.2780E-13};
	final static double[] Incoh= {4.2510E-03,4.6790E-03,5.1380E-03,5.1380E-03,5.8940E-03,6.7350E-03,6.7350E-03,7.0760E-03,7.8830E-03,7.8830E-03,9.8840E-03,1.5320E-02,2.0200E-02,2.0200E-02,2.0340E-02,2.1410E-02,2.1410E-02,2.2690E-02,2.4010E-02,2.4010E-02,2.4910E-02,2.8640E-02,2.8640E-02,2.9050E-02,3.0200E-02,3.0200E-02,3.6420E-02,4.2920E-02,5.6180E-02,6.3910E-02,6.3910E-02,6.5690E-02,7.1170E-02,7.1170E-02,7.1590E-02,7.2000E-02,7.2000E-02,7.7850E-02,8.5310E-02,8.9940E-02,9.2720E-02,9.4990E-02,9.5030E-02,9.3430E-02,9.3430E-02,9.1650E-02,8.6990E-02,7.8290E-02,7.1340E-02,6.5790E-02,6.1250E-02,5.4210E-02,4.8940E-02,4.8430E-02,4.3900E-02,3.9970E-02,3.4170E-02,3.3760E-02,2.6930E-02,2.2480E-02,1.9420E-02,1.7170E-02,1.5430E-02,1.4050E-02,1.2910E-02,1.1970E-02,1.1160E-02,1.0470E-02,9.8620E-03,9.3300E-03,8.8580E-03,8.4360E-03,7.7100E-03,7.1100E-03,6.6030E-03,6.1720E-03,5.7940E-03,5.4670E-03,5.1770E-03,4.1140E-03,3.4340E-03,2.9590E-03,2.3330E-03,1.9370E-03,1.3790E-03,1.0810E-03,7.6630E-04,6.0030E-04,4.9700E-04,4.2530E-04,3.3220E-04,2.7320E-04,1.9090E-04,1.4780E-04,1.0270E-04,7.9290E-05,6.4840E-05,5.4990E-05,4.2360E-05,3.4590E-05,2.3900E-05,1.8380E-05,1.2670E-05,9.7300E-06,7.9220E-06,6.6980E-06,5.1360E-06,4.1780E-06};
	final static double[] PE= {7.5240E+03,6.6430E+03,5.8670E+03,6.2280E+03,5.0460E+03,4.0900E+03,4.1730E+03,3.8170E+03,3.1710E+03,3.2300E+03,2.1410E+03,8.7720E+02,4.6070E+02,1.0380E+03,1.0270E+03,9.2180E+02,1.2870E+03,1.1090E+03,9.5520E+02,1.1120E+03,1.0070E+03,6.6050E+02,7.0050E+02,6.7050E+02,5.9690E+02,6.2180E+02,3.4370E+02,1.9670E+02,7.0100E+01,3.8490E+01,9.0380E+01,7.8510E+01,4.8800E+01,6.9860E+01,6.7350E+01,6.4960E+01,7.4850E+01,4.4730E+01,2.1320E+01,1.1900E+01,7.3590E+00,3.4220E+00,1.8830E+00,9.6690E-01,3.9100E+00,2.6420E+00,1.2760E+00,4.6120E-01,2.2960E-01,1.3650E-01,9.0670E-02,4.8940E-02,3.1050E-02,2.9760E-02,2.0120E-02,1.4310E-02,8.6360E-03,8.3260E-03,4.4950E-03,2.9300E-03,2.1390E-03,1.6720E-03,1.3660E-03,1.1520E-03,9.9420E-04,8.7330E-04,7.7800E-04,7.0120E-04,6.3790E-04,5.8500E-04,5.3990E-04,5.0110E-04,4.3820E-04,3.8930E-04,3.4980E-04,3.1780E-04,2.9100E-04,2.6840E-04,2.4910E-04,1.8280E-04,1.4440E-04,1.1930E-04,8.8500E-05,7.0340E-05,4.6480E-05,3.4710E-05,2.3030E-05,1.7230E-05,1.3770E-05,1.1460E-05,8.5870E-06,6.8660E-06,4.5730E-06,3.4270E-06,2.2840E-06,1.7130E-06,1.3700E-06,1.1420E-06,8.5630E-07,6.8490E-07,4.5650E-07,3.4250E-07,2.2830E-07,1.7120E-07,1.3700E-07,1.1410E-07,8.5600E-08,6.8470E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {7.5390E+03,6.6570E+03,5.8810E+03,6.2420E+03,5.0600E+03,4.1040E+03,4.1870E+03,3.8310E+03,3.1850E+03,3.2430E+03,2.1540E+03,8.8900E+02,4.7120E+02,1.0480E+03,1.0370E+03,9.3210E+02,1.2980E+03,1.1190E+03,9.6480E+02,1.1220E+03,1.0160E+03,6.6910E+02,7.0910E+02,6.7900E+02,6.0520E+02,6.3000E+02,3.5070E+02,2.0260E+02,7.4120E+01,4.1620E+01,9.3510E+01,8.1450E+01,5.1190E+01,7.2250E+01,6.9700E+01,6.7270E+01,7.7160E+01,4.6500E+01,2.2550E+01,1.2820E+01,8.0750E+00,3.9090E+00,2.2500E+00,1.2400E+00,4.1820E+00,2.8710E+00,1.4450E+00,5.7890E-01,3.2420E-01,2.1770E-01,1.6280E-01,1.0940E-01,8.4080E-02,8.2100E-02,6.7140E-02,5.8520E-02,5.0790E-02,5.0390E-02,4.6060E-02,4.5340E-02,4.6000E-02,4.7130E-02,4.8580E-02,5.0150E-02,5.1780E-02,5.3390E-02,5.5000E-02,5.6570E-02,5.8080E-02,5.9560E-02,6.0970E-02,6.2290E-02,6.4780E-02,6.7050E-02,6.9150E-02,7.1130E-02,7.2950E-02,7.4630E-02,7.6200E-02,8.2730E-02,8.7700E-02,9.1630E-02,9.7480E-02,1.0170E-01,1.0830E-01,1.1230E-01,1.1700E-01,1.1970E-01,1.2150E-01,1.2270E-01,1.2440E-01,1.2550E-01,1.2710E-01,1.2800E-01,1.2890E-01,1.2950E-01,1.2980E-01,1.3000E-01,1.3030E-01,1.3050E-01,1.3070E-01,1.3090E-01,1.3100E-01,1.3110E-01,1.3120E-01,1.3120E-01,1.3120E-01,1.3120E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
