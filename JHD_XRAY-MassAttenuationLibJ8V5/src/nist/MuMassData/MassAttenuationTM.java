package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTM {

	final static double[] MeV= {1.00000E-03,1.21100E-03,1.46800E-03,1.46801E-03,1.50000E-03,1.51500E-03,1.51501E-03,1.68900E-03,1.88400E-03,
			1.88401E-03,2.00000E-03,2.09000E-03,2.09001E-03,2.19600E-03,2.30700E-03,2.30701E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,8.64800E-03,8.64810E-03,9.12000E-03,9.61700E-03,9.61710E-03,1.00000E-02,1.01200E-02,1.01201E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,5.93900E-02,5.93910E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.0780E+01,1.0590E+01,1.0350E+01,1.0350E+01,1.0320E+01,1.0310E+01,1.0310E+01,1.0140E+01,9.9460E+00,9.9460E+00,9.8280E+00,9.7350E+00,9.7350E+00,9.6270E+00,9.5140E+00,9.5140E+00,8.8340E+00,7.8670E+00,6.9870E+00,6.2170E+00,4.9800E+00,4.6520E+00,4.6520E+00,4.4330E+00,4.2170E+00,4.2170E+00,4.0600E+00,4.0140E+00,4.0140E+00,2.6170E+00,1.8550E+00,1.0950E+00,7.1690E-01,5.0690E-01,3.8640E-01,3.8640E-01,3.8040E-01,2.3860E-01,1.6310E-01,7.9600E-02,4.7380E-02,2.2420E-02,1.3000E-02,8.4730E-03,5.9530E-03,3.3990E-03,2.1930E-03,2.1010E-03,1.4130E-03,9.8460E-04,5.5610E-04,5.3220E-04,2.4780E-04,1.3960E-04,8.9370E-05,6.2060E-05,4.5630E-05,3.4930E-05,2.7600E-05,2.2350E-05,1.8480E-05,1.5520E-05,1.3230E-05,1.1410E-05,9.9390E-06,8.7340E-06,6.9010E-06,5.5900E-06,4.6200E-06,3.8820E-06,3.3080E-06,2.8520E-06,2.4850E-06,1.3980E-06,8.9440E-07,6.2100E-07,3.4940E-07,2.2360E-07,9.9390E-08,5.5900E-08,2.4850E-08,1.3970E-08,8.9440E-09,6.2100E-09,3.4940E-09,2.2360E-09,9.9390E-10,5.5900E-10,2.4850E-10,1.3970E-10,8.9440E-11,6.2100E-11,3.4940E-11,2.2360E-11,9.9390E-12,5.5900E-12,2.4850E-12,1.3970E-12,8.9440E-13,6.2100E-13,3.4940E-13,2.2360E-13};
	final static double[] Incoh= {4.9160E-03,6.2630E-03,7.9390E-03,7.9390E-03,8.1490E-03,8.2420E-03,8.2420E-03,9.3530E-03,1.0600E-02,1.0600E-02,1.1340E-02,1.1910E-02,1.1910E-02,1.2580E-02,1.3290E-02,1.3290E-02,1.7680E-02,2.3660E-02,2.9190E-02,3.4220E-02,4.2960E-02,4.5450E-02,4.5450E-02,4.7190E-02,4.8980E-02,4.8980E-02,5.0330E-02,5.0730E-02,5.0730E-02,6.4990E-02,7.6000E-02,9.0050E-02,9.7600E-02,1.0170E-01,1.0380E-01,1.0380E-01,1.0390E-01,1.0530E-01,1.0450E-01,9.9420E-02,9.3610E-02,8.3590E-02,7.5860E-02,6.9800E-02,6.4880E-02,5.7290E-02,5.1650E-02,5.1120E-02,4.6270E-02,4.2100E-02,3.5970E-02,3.5530E-02,2.8330E-02,2.3640E-02,2.0420E-02,1.8050E-02,1.6230E-02,1.4770E-02,1.3580E-02,1.2580E-02,1.1740E-02,1.1000E-02,1.0370E-02,9.8070E-03,9.3110E-03,8.8690E-03,8.1060E-03,7.4750E-03,6.9410E-03,6.4880E-03,6.0920E-03,5.7460E-03,5.4400E-03,4.3240E-03,3.6110E-03,3.1100E-03,2.4530E-03,2.0360E-03,1.4500E-03,1.1370E-03,8.0560E-04,6.3100E-04,5.2220E-04,4.4740E-04,3.4930E-04,2.8740E-04,2.0070E-04,1.5530E-04,1.0800E-04,8.3340E-05,6.8160E-05,5.7790E-05,4.4520E-05,3.6360E-05,2.5120E-05,1.9320E-05,1.3320E-05,1.0230E-05,8.3270E-06,7.0400E-06,5.3970E-06,4.3920E-06};
	final static double[] PE= {2.8880E+03,1.9760E+03,1.3520E+03,1.8450E+03,3.9250E+03,4.1350E+03,4.8200E+03,4.2000E+03,3.6570E+03,4.2420E+03,3.6750E+03,3.3170E+03,3.5240E+03,3.1480E+03,2.8130E+03,2.9360E+03,1.5850E+03,7.8670E+02,4.4990E+02,2.8290E+02,1.3460E+02,1.0990E+02,2.9450E+02,2.5630E+02,2.2320E+02,3.0590E+02,2.7890E+02,2.7040E+02,3.1260E+02,1.1300E+02,5.2580E+01,1.7500E+01,7.9210E+00,4.2600E+00,2.6320E+00,1.4130E+01,1.3600E+01,6.3990E+00,3.5130E+00,1.1610E+00,5.2720E-01,1.7620E-01,8.3310E-02,4.7800E-02,3.0970E-02,1.6240E-02,1.0190E-02,9.7530E-03,6.5730E-03,4.6910E-03,2.8430E-03,2.7420E-03,1.4950E-03,9.8320E-04,7.2330E-04,5.6820E-04,4.6630E-04,3.9460E-04,3.4160E-04,3.0090E-04,2.6870E-04,2.4260E-04,2.2110E-04,2.0300E-04,1.8760E-04,1.7440E-04,1.5280E-04,1.3590E-04,1.2230E-04,1.1120E-04,1.0200E-04,9.4110E-05,8.7370E-05,6.4340E-05,5.0910E-05,4.2100E-05,3.1270E-05,2.4870E-05,1.6460E-05,1.2290E-05,8.1630E-06,6.1100E-06,4.8840E-06,4.0670E-06,3.0470E-06,2.4360E-06,1.6230E-06,1.2170E-06,8.1060E-07,6.0780E-07,4.8620E-07,4.0530E-07,3.0390E-07,2.4310E-07,1.6210E-07,1.2150E-07,8.1030E-08,6.0740E-08,4.8620E-08,4.0500E-08,3.0380E-08,2.4300E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {2.8990E+03,1.9870E+03,1.3620E+03,1.8550E+03,3.9350E+03,4.1450E+03,4.8300E+03,4.2100E+03,3.6670E+03,4.2520E+03,3.6850E+03,3.3260E+03,3.5340E+03,3.1580E+03,2.8220E+03,2.9460E+03,1.5940E+03,7.9460E+02,4.5690E+02,2.8920E+02,1.3970E+02,1.1460E+02,2.9910E+02,2.6080E+02,2.2740E+02,3.1020E+02,2.8310E+02,2.7450E+02,3.1670E+02,1.1570E+02,5.4510E+01,1.8690E+01,8.7350E+00,4.8690E+00,3.1220E+00,1.4620E+01,1.4090E+01,6.7430E+00,3.7800E+00,1.3400E+00,6.6820E-01,2.8220E-01,1.7220E-01,1.2610E-01,1.0180E-01,7.6930E-02,6.4040E-02,6.2970E-02,5.4550E-02,4.9120E-02,4.3620E-02,4.3320E-02,4.0020E-02,3.9540E-02,4.0100E-02,4.1080E-02,4.2260E-02,4.3520E-02,4.4820E-02,4.6120E-02,4.7410E-02,4.8650E-02,4.9880E-02,5.1070E-02,5.2160E-02,5.3220E-02,5.5200E-02,5.6980E-02,5.8650E-02,6.0220E-02,6.1630E-02,6.2980E-02,6.4230E-02,6.9450E-02,7.3450E-02,7.6610E-02,8.1370E-02,8.4760E-02,9.0220E-02,9.3470E-02,9.7330E-02,9.9530E-02,1.0100E-01,1.0210E-01,1.0350E-01,1.0430E-01,1.0570E-01,1.0640E-01,1.0710E-01,1.0760E-01,1.0780E-01,1.0800E-01,1.0830E-01,1.0840E-01,1.0860E-01,1.0870E-01,1.0880E-01,1.0890E-01,1.0900E-01,1.0900E-01,1.0900E-01,1.0900E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
