package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationOS {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.96000E-03,1.96001E-03,2.00000E-03,2.03100E-03,2.03101E-03,2.23400E-03,2.45700E-03,
			2.45701E-03,2.61900E-03,2.79200E-03,2.79201E-03,3.00000E-03,3.04800E-03,3.04801E-03,4.00000E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.08700E-02,1.08701E-02,1.16000E-02,1.23900E-02,1.23901E-02,1.26700E-02,1.29700E-02,1.29701E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,7.38700E-02,7.38710E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1700E+01,1.1210E+01,1.0720E+01,1.0720E+01,1.0670E+01,1.0640E+01,1.0640E+01,1.0420E+01,1.0170E+01,1.0170E+01,9.9920E+00,9.7990E+00,9.7990E+00,9.5710E+00,9.5180E+00,9.5180E+00,8.5490E+00,7.6400E+00,6.8450E+00,5.5570E+00,4.5780E+00,4.2270E+00,4.2270E+00,3.9620E+00,3.6980E+00,3.6980E+00,3.6040E+00,3.5110E+00,3.5110E+00,2.9850E+00,2.1040E+00,1.2440E+00,8.2290E-01,5.8260E-01,4.3600E-01,3.1240E-01,3.1240E-01,2.7410E-01,1.8860E-01,9.2420E-02,5.5060E-02,2.6190E-02,1.5250E-02,9.9610E-03,7.0100E-03,4.0120E-03,2.5920E-03,2.4830E-03,1.6710E-03,1.1650E-03,6.5890E-04,6.3100E-04,2.9400E-04,1.6560E-04,1.0600E-04,7.3680E-05,5.4140E-05,4.1450E-05,3.2770E-05,2.6540E-05,2.1940E-05,1.8430E-05,1.5700E-05,1.3540E-05,1.1800E-05,1.0370E-05,8.1940E-06,6.6360E-06,5.4840E-06,4.6100E-06,3.9260E-06,3.3850E-06,2.9500E-06,1.6590E-06,1.0620E-06,7.3740E-07,4.1480E-07,2.6550E-07,1.1800E-07,6.6360E-08,2.9500E-08,1.6590E-08,1.0620E-08,7.3740E-09,4.1480E-09,2.6550E-09,1.1800E-09,6.6360E-10,2.9500E-10,1.6590E-10,1.0620E-10,7.3740E-11,4.1480E-11,2.6550E-11,1.1800E-11,6.6360E-12,2.9500E-12,1.6590E-12,1.0620E-12,7.3740E-13,4.1480E-13,2.6550E-13};
	final static double[] Incoh= {4.0460E-03,7.1370E-03,9.8660E-03,9.8660E-03,1.0100E-02,1.0280E-02,1.0280E-02,1.1450E-02,1.2720E-02,1.2720E-02,1.3630E-02,1.4600E-02,1.4600E-02,1.5760E-02,1.6030E-02,1.6030E-02,2.1160E-02,2.6290E-02,3.1140E-02,3.9830E-02,4.7080E-02,4.9900E-02,4.9900E-02,5.2160E-02,5.4360E-02,5.4360E-02,5.5110E-02,5.5850E-02,5.5850E-02,6.0950E-02,7.1210E-02,8.5040E-02,9.2930E-02,9.7330E-02,9.9740E-02,1.0120E-01,1.0120E-01,1.0140E-01,1.0090E-01,9.6440E-02,9.1000E-02,8.1430E-02,7.3990E-02,6.8110E-02,6.3360E-02,5.5980E-02,5.0470E-02,4.9930E-02,4.5210E-02,4.1160E-02,3.5180E-02,3.4730E-02,2.7710E-02,2.3120E-02,1.9980E-02,1.7660E-02,1.5870E-02,1.4450E-02,1.3280E-02,1.2310E-02,1.1480E-02,1.0770E-02,1.0140E-02,9.5940E-03,9.1090E-03,8.6750E-03,7.9280E-03,7.3110E-03,6.7920E-03,6.3450E-03,5.9590E-03,5.6230E-03,5.3220E-03,4.2300E-03,3.5300E-03,3.0420E-03,2.3990E-03,1.9920E-03,1.4180E-03,1.1120E-03,7.8810E-04,6.1740E-04,5.1100E-04,4.3760E-04,3.4160E-04,2.8110E-04,1.9630E-04,1.5190E-04,1.0570E-04,8.1560E-05,6.6680E-05,5.6550E-05,4.3570E-05,3.5560E-05,2.4580E-05,1.8900E-05,1.3030E-05,1.0010E-05,8.1470E-06,6.8870E-06,5.2810E-06,4.2970E-06};
	final static double[] PE= {4.0210E+03,1.7900E+03,1.0120E+03,1.0440E+03,2.2070E+03,2.5820E+03,2.8260E+03,2.6760E+03,2.5340E+03,2.9350E+03,2.5130E+03,2.1520E+03,2.2860E+03,1.9290E+03,1.8590E+03,1.9390E+03,1.0140E+03,5.8570E+02,3.7080E+02,1.7800E+02,9.9860E+01,8.0300E+01,2.0780E+02,1.7450E+02,1.4660E+02,2.0230E+02,1.9140E+02,1.8100E+02,2.0930E+02,1.4480E+02,6.8200E+01,2.3100E+01,1.0580E+01,5.7340E+00,3.4670E+00,1.9460E+00,9.7460E+00,7.9120E+00,4.4070E+00,1.4910E+00,6.8680E-01,2.3370E-01,1.1190E-01,6.4690E-02,4.2140E-02,2.2250E-02,1.3990E-02,1.3390E-02,9.0300E-03,6.4370E-03,3.8940E-03,3.7550E-03,2.0420E-03,1.3390E-03,9.8310E-04,7.7130E-04,6.3230E-04,5.3450E-04,4.6230E-04,4.0690E-04,3.6320E-04,3.2770E-04,2.9840E-04,2.7390E-04,2.5310E-04,2.3510E-04,2.0590E-04,1.8300E-04,1.6470E-04,1.4970E-04,1.3720E-04,1.2660E-04,1.1760E-04,8.6500E-05,6.8390E-05,5.6550E-05,4.1980E-05,3.3400E-05,2.2080E-05,1.6500E-05,1.0960E-05,8.1970E-06,6.5510E-06,5.4550E-06,4.0880E-06,3.2680E-06,2.1760E-06,1.6320E-06,1.0870E-06,8.1530E-07,6.5220E-07,5.4330E-07,4.0750E-07,3.2610E-07,2.1730E-07,1.6300E-07,1.0870E-07,8.1500E-08,6.5190E-08,5.4330E-08,4.0750E-08,3.2580E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {4.0330E+03,1.8010E+03,1.0230E+03,1.0550E+03,2.2180E+03,2.5920E+03,2.8360E+03,2.6860E+03,2.5440E+03,2.9460E+03,2.5230E+03,2.1620E+03,2.2960E+03,1.9380E+03,1.8690E+03,1.9490E+03,1.0230E+03,5.9340E+02,3.7760E+02,1.8360E+02,1.0450E+02,8.4570E+01,2.1210E+02,1.7850E+02,1.5030E+02,2.0610E+02,1.9500E+02,1.8460E+02,2.1290E+02,1.4780E+02,7.0380E+01,2.4430E+01,1.1490E+01,6.4140E+00,4.0030E+00,2.3600E+00,1.0160E+01,8.2880E+00,4.6970E+00,1.6800E+00,8.3280E-01,3.4140E-01,2.0110E-01,1.4280E-01,1.1250E-01,8.2240E-02,6.7050E-02,6.5800E-02,5.6250E-02,5.0340E-02,4.4580E-02,4.4270E-02,4.1000E-02,4.0650E-02,4.1340E-02,4.2440E-02,4.3730E-02,4.5110E-02,4.6500E-02,4.7910E-02,4.9280E-02,5.0650E-02,5.1960E-02,5.3220E-02,5.4420E-02,5.5540E-02,5.7660E-02,5.9560E-02,6.1340E-02,6.3010E-02,6.4540E-02,6.5970E-02,6.7300E-02,7.2880E-02,7.7090E-02,8.0460E-02,8.5480E-02,8.9040E-02,9.4780E-02,9.8190E-02,1.0220E-01,1.0450E-01,1.0610E-01,1.0710E-01,1.0860E-01,1.0960E-01,1.1090E-01,1.1160E-01,1.1250E-01,1.1290E-01,1.1320E-01,1.1340E-01,1.1360E-01,1.1380E-01,1.1400E-01,1.1410E-01,1.1420E-01,1.1430E-01,1.1430E-01,1.1440E-01,1.1440E-01,1.1440E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
