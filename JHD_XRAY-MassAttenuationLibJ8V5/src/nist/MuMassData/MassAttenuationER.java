package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationER {

	final static double[] MeV= {1.00000E-03,1.18700E-03,1.40900E-03,1.40901E-03,1.43100E-03,1.45300E-03,1.45301E-03,1.50000E-03,1.81200E-03,
			1.81201E-03,2.00000E-03,2.00600E-03,2.00601E-03,2.10400E-03,2.20600E-03,2.20601E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,8.35800E-03,8.35810E-03,8.79900E-03,9.26400E-03,9.26410E-03,9.50500E-03,9.75100E-03,9.75110E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,5.74900E-02,5.74910E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.0560E+01,1.0390E+01,1.0190E+01,1.0190E+01,1.0160E+01,1.0140E+01,1.0140E+01,1.0100E+01,9.7970E+00,9.7970E+00,9.6060E+00,9.5990E+00,9.5990E+00,9.4910E+00,9.3940E+00,9.3940E+00,8.6120E+00,7.6580E+00,6.7900E+00,6.0380E+00,4.8320E+00,4.6520E+00,4.6520E+00,4.4440E+00,4.2380E+00,4.2380E+00,4.1340E+00,4.0330E+00,4.0330E+00,3.9350E+00,2.5390E+00,1.8030E+00,1.0640E+00,6.9600E-01,4.9220E-01,3.9530E-01,3.9530E-01,3.6940E-01,2.3160E-01,1.5820E-01,7.7160E-02,4.5940E-02,2.1720E-02,1.2590E-02,8.2020E-03,5.7640E-03,3.2890E-03,2.1220E-03,2.0330E-03,1.3660E-03,9.5200E-04,5.3750E-04,5.1490E-04,2.3960E-04,1.3490E-04,8.6410E-05,6.0020E-05,4.4110E-05,3.3770E-05,2.6680E-05,2.1610E-05,1.7870E-05,1.5010E-05,1.2790E-05,1.1030E-05,9.6060E-06,8.4430E-06,6.6720E-06,5.4040E-06,4.4680E-06,3.7520E-06,3.1980E-06,2.7580E-06,2.4020E-06,1.3510E-06,8.6480E-07,6.0060E-07,3.3780E-07,2.1620E-07,9.6100E-08,5.4040E-08,2.4020E-08,1.3510E-08,8.6480E-09,6.0060E-09,3.3780E-09,2.1620E-09,9.6100E-10,5.4040E-10,2.4020E-10,1.3510E-10,8.6480E-11,6.0060E-11,3.3780E-11,2.1620E-11,9.6100E-12,5.4040E-12,2.4020E-12,1.3510E-12,8.6480E-13,6.0060E-13,3.3780E-13,2.1620E-13};
	final static double[] Incoh= {5.0150E-03,6.2350E-03,7.7010E-03,7.7010E-03,7.8440E-03,7.9890E-03,7.9890E-03,8.2950E-03,1.0310E-02,1.0310E-02,1.1530E-02,1.1560E-02,1.1560E-02,1.2190E-02,1.2860E-02,1.2860E-02,1.7940E-02,2.3980E-02,2.9550E-02,3.4600E-02,4.3350E-02,4.4750E-02,4.4750E-02,4.6460E-02,4.8170E-02,4.8170E-02,4.9020E-02,4.9870E-02,4.9870E-02,5.0730E-02,6.5380E-02,7.6330E-02,9.0190E-02,9.7570E-02,1.0160E-01,1.0340E-01,1.0340E-01,1.0380E-01,1.0500E-01,1.0420E-01,9.9080E-02,9.3250E-02,8.3240E-02,7.5540E-02,6.9490E-02,6.4590E-02,5.7030E-02,5.1410E-02,5.0870E-02,4.6050E-02,4.1910E-02,3.5800E-02,3.5360E-02,2.8200E-02,2.3530E-02,2.0320E-02,1.7970E-02,1.6150E-02,1.4700E-02,1.3510E-02,1.2520E-02,1.1680E-02,1.0950E-02,1.0320E-02,9.7610E-03,9.2680E-03,8.8250E-03,8.0690E-03,7.4390E-03,6.9090E-03,6.4560E-03,6.0630E-03,5.7210E-03,5.4150E-03,4.3030E-03,3.5930E-03,3.0960E-03,2.4410E-03,2.0260E-03,1.4430E-03,1.1310E-03,8.0180E-04,6.2790E-04,5.1990E-04,4.4500E-04,3.4770E-04,2.8600E-04,1.9980E-04,1.5460E-04,1.0750E-04,8.2990E-05,6.7830E-05,5.7540E-05,4.4320E-05,3.6180E-05,2.5010E-05,1.9230E-05,1.3260E-05,1.0180E-05,8.2880E-06,7.0070E-06,5.3720E-06,4.3710E-06};
	final static double[] PE= {2.7370E+03,1.9560E+03,1.3980E+03,2.0290E+03,2.9640E+03,4.3210E+03,4.8610E+03,6.0600E+03,3.8310E+03,4.4430E+03,3.5130E+03,3.4900E+03,3.7080E+03,3.3270E+03,2.9860E+03,3.1170E+03,1.5180E+03,7.5110E+02,4.2920E+02,2.6960E+02,1.2810E+02,1.1430E+02,3.0790E+02,2.6920E+02,2.3550E+02,3.2280E+02,3.0310E+02,2.8450E+02,3.2890E+02,3.0890E+02,1.0800E+02,5.0150E+01,1.6640E+01,7.5210E+00,4.0400E+00,2.7340E+00,1.4640E+01,1.3150E+01,6.1420E+00,3.3660E+00,1.1090E+00,5.0230E-01,1.6740E-01,7.9030E-02,4.5290E-02,2.9320E-02,1.5370E-02,9.6380E-03,9.2240E-03,6.2180E-03,4.4360E-03,2.6900E-03,2.5940E-03,1.4150E-03,9.3110E-04,6.8480E-04,5.3830E-04,4.4210E-04,3.7410E-04,3.2380E-04,2.8520E-04,2.5470E-04,2.3000E-04,2.0960E-04,1.9240E-04,1.7790E-04,1.6530E-04,1.4480E-04,1.2890E-04,1.1600E-04,1.0550E-04,9.6710E-05,8.9260E-05,8.2880E-05,6.1030E-05,4.8280E-05,3.9930E-05,2.9670E-05,2.3600E-05,1.5620E-05,1.1670E-05,7.7480E-06,5.8000E-06,4.6340E-06,3.8600E-06,2.8910E-06,2.3120E-06,1.5400E-06,1.1550E-06,7.6940E-07,5.7680E-07,4.6160E-07,3.8450E-07,2.8840E-07,2.3070E-07,1.5380E-07,1.1530E-07,7.6870E-08,5.7680E-08,4.6120E-08,3.8450E-08,2.8830E-08,2.3060E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {2.7480E+03,1.9660E+03,1.4080E+03,2.0390E+03,2.9740E+03,4.3310E+03,4.8710E+03,6.0700E+03,3.8410E+03,4.4530E+03,3.5230E+03,3.4990E+03,3.7180E+03,3.3370E+03,2.9950E+03,3.1270E+03,1.5260E+03,7.5870E+02,4.3600E+02,2.7570E+02,1.3300E+02,1.1900E+02,3.1260E+02,2.7370E+02,2.3980E+02,3.2710E+02,3.0730E+02,2.8860E+02,3.3300E+02,3.1290E+02,1.1060E+02,5.2030E+01,1.7800E+01,8.3150E+00,4.6340E+00,3.2330E+00,1.5130E+01,1.3620E+01,6.4790E+00,3.6280E+00,1.2850E+00,6.4150E-01,2.7240E-01,1.6720E-01,1.2300E-01,9.9680E-02,7.5690E-02,6.3180E-02,6.2130E-02,5.3920E-02,4.8600E-02,4.3170E-02,4.2870E-02,3.9580E-02,3.9070E-02,3.9610E-02,4.0560E-02,4.1710E-02,4.2940E-02,4.4220E-02,4.5490E-02,4.6750E-02,4.7990E-02,4.9200E-02,5.0340E-02,5.1410E-02,5.2450E-02,5.4390E-02,5.6130E-02,5.7780E-02,5.9300E-02,6.0700E-02,6.2040E-02,6.3270E-02,6.8370E-02,7.2310E-02,7.5410E-02,8.0070E-02,8.3440E-02,8.8810E-02,9.2030E-02,9.5830E-02,9.8010E-02,9.9460E-02,1.0050E-01,1.0190E-01,1.0270E-01,1.0410E-01,1.0480E-01,1.0550E-01,1.0590E-01,1.0620E-01,1.0640E-01,1.0660E-01,1.0680E-01,1.0700E-01,1.0710E-01,1.0720E-01,1.0730E-01,1.0730E-01,1.0730E-01,1.0740E-01,1.0740E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
