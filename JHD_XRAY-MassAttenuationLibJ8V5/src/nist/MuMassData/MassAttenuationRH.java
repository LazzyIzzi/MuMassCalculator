package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationRH {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,3.00400E-03,3.00401E-03,3.07400E-03,3.14600E-03,3.14601E-03,
			3.27600E-03,3.41200E-03,3.41210E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,
			2.32200E-02,2.32201E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {7.4910E+00,7.0990E+00,6.6600E+00,5.7740E+00,5.7710E+00,5.7710E+00,5.7090E+00,5.6500E+00,5.6500E+00,5.5430E+00,5.4330E+00,5.4330E+00,4.9810E+00,4.3180E+00,3.7790E+00,2.9870E+00,2.4430E+00,1.5870E+00,1.0940E+00,8.9070E-01,8.9070E-01,6.1510E-01,4.0170E-01,2.8250E-01,2.0870E-01,1.2740E-01,8.6200E-02,4.1790E-02,2.4570E-02,1.1390E-02,6.5370E-03,4.2340E-03,2.9620E-03,1.6800E-03,1.0800E-03,1.0340E-03,6.9350E-04,4.8220E-04,2.7170E-04,2.6010E-04,1.2090E-04,6.8000E-05,4.3550E-05,3.0240E-05,2.2220E-05,1.7010E-05,1.3440E-05,1.0890E-05,9.0010E-06,7.5610E-06,6.4430E-06,5.5560E-06,4.8400E-06,4.2540E-06,3.3610E-06,2.7220E-06,2.2500E-06,1.8910E-06,1.6110E-06,1.3890E-06,1.2100E-06,6.8060E-07,4.3560E-07,3.0250E-07,1.7020E-07,1.0890E-07,4.8400E-08,2.7220E-08,1.2100E-08,6.8060E-09,4.3560E-09,3.0250E-09,1.7020E-09,1.0890E-09,4.8400E-10,2.7220E-10,1.2100E-10,6.8060E-11,4.3560E-11,3.0250E-11,1.7020E-11,1.0890E-11,4.8400E-12,2.7220E-12,1.2100E-12,6.8060E-13,4.3560E-13,3.0250E-13,1.7020E-13,1.0890E-13};
	final static double[] Incoh= {5.5290E-03,1.0020E-02,1.4540E-02,2.3130E-02,2.3160E-02,2.3160E-02,2.3720E-02,2.4320E-02,2.4320E-02,2.5360E-02,2.6420E-02,2.6420E-02,3.0920E-02,3.8040E-02,4.4620E-02,5.6210E-02,6.5660E-02,8.2400E-02,9.3580E-02,9.8900E-02,9.8900E-02,1.0700E-01,1.1400E-01,1.1760E-01,1.1910E-01,1.1900E-01,1.1690E-01,1.0960E-01,1.0250E-01,9.0820E-02,8.2110E-02,7.5320E-02,6.9870E-02,6.1560E-02,5.5450E-02,5.4870E-02,4.9640E-02,4.5140E-02,3.8550E-02,3.8080E-02,3.0350E-02,2.5320E-02,2.1870E-02,1.9330E-02,1.7370E-02,1.5810E-02,1.4540E-02,1.3470E-02,1.2560E-02,1.1780E-02,1.1100E-02,1.0500E-02,9.9720E-03,9.4920E-03,8.6790E-03,8.0000E-03,7.4320E-03,6.9460E-03,6.5250E-03,6.1510E-03,5.8260E-03,4.6300E-03,3.8650E-03,3.3300E-03,2.6260E-03,2.1790E-03,1.5520E-03,1.2170E-03,8.6260E-04,6.7530E-04,5.5920E-04,4.7880E-04,3.7390E-04,3.0760E-04,2.1480E-04,1.6630E-04,1.1560E-04,8.9240E-05,7.2980E-05,6.1860E-05,4.7670E-05,3.8920E-05,2.6900E-05,2.0680E-05,1.4260E-05,1.0950E-05,8.9190E-06,7.5380E-06,5.7800E-06,4.7020E-06};
	final static double[] PE= {6.1620E+03,2.4190E+03,1.2070E+03,4.3840E+02,4.3690E+02,1.5080E+03,1.4160E+03,1.3320E+03,1.8410E+03,1.6660E+03,1.5070E+03,1.7260E+03,1.1650E+03,6.5430E+02,4.0630E+02,1.8840E+02,1.0280E+02,3.3500E+01,1.4950E+01,9.7960E+00,6.3140E+01,3.2580E+01,1.4920E+01,8.0470E+00,4.8200E+00,2.1180E+00,1.1110E+00,3.4020E-01,1.4720E-01,4.6280E-02,2.1070E-02,1.1790E-02,7.5140E-03,3.8700E-03,2.4130E-03,2.2960E-03,1.5490E-03,1.1110E-03,6.7830E-04,6.5430E-04,3.6160E-04,2.4050E-04,1.7840E-04,1.4110E-04,1.1640E-04,9.8900E-05,8.5910E-05,7.5840E-05,6.7880E-05,6.1450E-05,5.6080E-05,5.1570E-05,4.7730E-05,4.4420E-05,3.8990E-05,3.4740E-05,3.1330E-05,2.8520E-05,2.6170E-05,2.4180E-05,2.2470E-05,1.6590E-05,1.3140E-05,1.0880E-05,8.0990E-06,6.4490E-06,4.2710E-06,3.1930E-06,2.1220E-06,1.5890E-06,1.2700E-06,1.0570E-06,7.9240E-07,6.3380E-07,4.2210E-07,3.1650E-07,2.1090E-07,1.5820E-07,1.2650E-07,1.0550E-07,7.9060E-08,6.3260E-08,4.2160E-08,3.1620E-08,2.1080E-08,1.5810E-08,1.2650E-08,1.0540E-08,7.9060E-09,6.3260E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.4980E-04,7.0460E-04,2.4650E-03,2.6400E-03,6.4370E-03,1.0010E-02,1.3110E-02,1.5790E-02,1.8190E-02,2.0350E-02,2.2310E-02,2.4100E-02,2.5760E-02,2.7270E-02,2.8680E-02,2.9970E-02,3.1160E-02,3.2280E-02,3.4330E-02,3.6160E-02,3.7830E-02,3.9340E-02,4.0720E-02,4.1980E-02,4.3150E-02,4.7870E-02,5.1370E-02,5.4100E-02,5.8130E-02,6.0980E-02,6.5540E-02,6.8290E-02,7.1450E-02,7.3270E-02,7.4500E-02,7.5320E-02,7.6490E-02,7.7190E-02,7.8300E-02,7.8890E-02,7.9470E-02,7.9820E-02,8.0060E-02,8.0230E-02,8.0410E-02,8.0520E-02,8.0700E-02,8.0760E-02,8.0880E-02,8.0930E-02,8.0930E-02,8.0990E-02,8.0990E-02,8.1050E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0620E-05,4.3320E-05,8.6260E-05,1.3230E-04,1.7820E-04,2.2270E-04,2.6520E-04,3.0570E-04,3.4390E-04,3.7990E-04,4.1390E-04,4.4630E-04,4.7690E-04,5.0600E-04,5.5980E-04,6.0860E-04,6.5370E-04,6.9520E-04,7.3330E-04,7.6840E-04,8.0120E-04,9.3750E-04,1.0410E-03,1.1230E-03,1.2460E-03,1.3370E-03,1.4860E-03,1.5800E-03,1.6950E-03,1.7640E-03,1.8110E-03,1.8450E-03,1.8930E-03,1.9250E-03,1.9720E-03,1.9980E-03,2.0280E-03,2.0450E-03,2.0550E-03,2.0630E-03,2.0720E-03,2.0790E-03,2.0870E-03,2.0920E-03,2.0970E-03,2.1000E-03,2.1010E-03,2.1030E-03,2.1040E-03,2.1050E-03};
	final static double[] TotAttn= {6.1700E+03,2.4260E+03,1.2140E+03,4.4420E+02,4.4270E+02,1.5130E+03,1.4220E+03,1.3380E+03,1.8470E+03,1.6710E+03,1.5120E+03,1.7310E+03,1.1700E+03,6.5860E+02,4.1010E+02,1.9150E+02,1.0530E+02,3.5170E+01,1.6140E+01,1.0790E+01,6.4130E+01,3.3300E+01,1.5440E+01,8.4470E+00,5.1480E+00,2.3650E+00,1.3140E+00,4.9160E-01,2.7420E-01,1.4850E-01,1.0970E-01,9.1340E-02,8.0350E-02,6.7110E-02,5.8940E-02,5.8200E-02,5.2030E-02,4.7440E-02,4.1970E-02,4.1630E-02,3.7280E-02,3.5680E-02,3.5290E-02,3.5420E-02,3.5880E-02,3.6500E-02,3.7210E-02,3.7970E-02,3.8740E-02,3.9500E-02,4.0250E-02,4.0980E-02,4.1660E-02,4.2330E-02,4.3610E-02,4.4810E-02,4.5950E-02,4.7010E-02,4.8010E-02,4.8930E-02,4.9800E-02,5.3450E-02,5.6290E-02,5.8570E-02,6.2020E-02,6.4500E-02,6.8590E-02,7.1090E-02,7.4010E-02,7.5710E-02,7.6870E-02,7.7640E-02,7.8750E-02,7.9420E-02,8.0490E-02,8.1050E-02,8.1620E-02,8.1960E-02,8.2190E-02,8.2360E-02,8.2530E-02,8.2640E-02,8.2810E-02,8.2870E-02,8.2990E-02,8.3050E-02,8.3050E-02,8.3100E-02,8.3100E-02,8.3160E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
