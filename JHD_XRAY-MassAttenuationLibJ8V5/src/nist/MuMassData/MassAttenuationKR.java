package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationKR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.67500E-03,1.67501E-03,1.70100E-03,1.72700E-03,1.72701E-03,1.82200E-03,1.92100E-03,
			1.92101E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.43300E-02,1.43301E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {5.8980E+00,5.5810E+00,5.4540E+00,5.4540E+00,5.4340E+00,5.4150E+00,5.4150E+00,5.3480E+00,5.2770E+00,5.2770E+00,5.2170E+00,4.4940E+00,3.8800E+00,3.3860E+00,2.9820E+00,2.3520E+00,1.8790E+00,1.2170E+00,1.2170E+00,1.1480E+00,7.8120E-01,4.4220E-01,2.8360E-01,1.9630E-01,1.4420E-01,8.7960E-02,5.9510E-02,2.8570E-02,1.6670E-02,7.6750E-03,4.3920E-03,2.8380E-03,1.9820E-03,1.1220E-03,7.2010E-04,6.8960E-04,4.6180E-04,3.2100E-04,1.8080E-04,1.7310E-04,8.0410E-05,4.5250E-05,2.8960E-05,2.0110E-05,1.4780E-05,1.1310E-05,8.9400E-06,7.2440E-06,5.9850E-06,5.0290E-06,4.2850E-06,3.6950E-06,3.2190E-06,2.8290E-06,2.2350E-06,1.8100E-06,1.4960E-06,1.2580E-06,1.0710E-06,9.2340E-07,8.0490E-07,4.5260E-07,2.8970E-07,2.0110E-07,1.1320E-07,7.2440E-08,3.2190E-08,1.8100E-08,8.0490E-09,4.5260E-09,2.8970E-09,2.0110E-09,1.1320E-09,7.2440E-10,3.2190E-10,1.8100E-10,8.0490E-11,4.5260E-11,2.8970E-11,2.0110E-11,1.1320E-11,7.2440E-12,3.2190E-12,1.8100E-12,8.0490E-13,4.5260E-13,2.8970E-13,2.0110E-13,1.1320E-13,7.2440E-14};
	final static double[] Incoh= {4.7570E-03,9.3710E-03,1.1090E-02,1.1090E-02,1.1350E-02,1.1610E-02,1.1610E-02,1.2560E-02,1.3550E-02,1.3550E-02,1.4340E-02,2.3960E-02,3.2680E-02,4.0320E-02,4.6940E-02,5.8050E-02,6.7290E-02,8.2930E-02,8.2930E-02,8.4870E-02,9.6730E-02,1.1020E-01,1.1660E-01,1.1960E-01,1.2050E-01,1.1950E-01,1.1690E-01,1.0900E-01,1.0160E-01,8.9760E-02,8.0920E-02,7.4160E-02,6.8790E-02,6.0570E-02,5.4530E-02,5.3950E-02,4.8800E-02,4.4380E-02,3.7890E-02,3.7420E-02,2.9820E-02,2.4880E-02,2.1490E-02,1.8990E-02,1.7070E-02,1.5540E-02,1.4280E-02,1.3230E-02,1.2350E-02,1.1580E-02,1.0910E-02,1.0320E-02,9.7950E-03,9.3280E-03,8.5230E-03,7.8620E-03,7.3010E-03,6.8230E-03,6.4070E-03,6.0440E-03,5.7230E-03,4.5480E-03,3.7970E-03,3.2710E-03,2.5800E-03,2.1420E-03,1.5250E-03,1.1960E-03,8.4730E-04,6.6370E-04,5.4940E-04,4.7030E-04,3.6740E-04,3.0230E-04,2.1110E-04,1.6330E-04,1.1360E-04,8.7670E-05,7.1680E-05,6.0790E-05,4.6830E-05,3.8240E-05,2.6420E-05,2.0320E-05,1.4010E-05,1.0760E-05,8.7600E-06,7.4020E-06,5.6780E-06,4.6190E-06};
	final static double[] PE= {2.8480E+03,1.0870E+03,8.3070E+02,3.9110E+03,3.5140E+03,3.1600E+03,4.5590E+03,3.9810E+03,3.4780E+03,3.9420E+03,3.5950E+03,1.3010E+03,6.1480E+02,3.3910E+02,2.0710E+02,9.4070E+01,5.0620E+01,1.8410E+01,1.3000E+02,1.1560E+02,5.4600E+01,1.7980E+01,7.9910E+00,4.2070E+00,2.4740E+00,1.0600E+00,5.4570E-01,1.6230E-01,6.8880E-02,2.1160E-02,9.4930E-03,5.2650E-03,3.3350E-03,1.7090E-03,1.0640E-03,1.0120E-03,6.8330E-04,4.9130E-04,3.0100E-04,2.9060E-04,1.6180E-04,1.0820E-04,8.0560E-05,6.3890E-05,5.2830E-05,4.4980E-05,3.9120E-05,3.4600E-05,3.1000E-05,2.8080E-05,2.5650E-05,2.3610E-05,2.1860E-05,2.0350E-05,1.7890E-05,1.5950E-05,1.4390E-05,1.3110E-05,1.2030E-05,1.1120E-05,1.0330E-05,7.6390E-06,6.0600E-06,5.0200E-06,3.7380E-06,2.9770E-06,1.9730E-06,1.4750E-06,9.8090E-07,7.3440E-07,5.8700E-07,4.8890E-07,3.6640E-07,2.9300E-07,1.9520E-07,1.4640E-07,9.7520E-08,7.3160E-08,5.8510E-08,4.8760E-08,3.6560E-08,2.9250E-08,1.9500E-08,1.4620E-08,9.7520E-09,7.3080E-09,5.8490E-09,4.8740E-09,3.6560E-09,2.9250E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0330E-04,5.0360E-04,1.8340E-03,1.9670E-03,4.9380E-03,7.7830E-03,1.0280E-02,1.2470E-02,1.4420E-02,1.6180E-02,1.7780E-02,1.9230E-02,2.0560E-02,2.1770E-02,2.2890E-02,2.3920E-02,2.4890E-02,2.5790E-02,2.7450E-02,2.8930E-02,3.0280E-02,3.1500E-02,3.2620E-02,3.3640E-02,3.4590E-02,3.8430E-02,4.1290E-02,4.3520E-02,4.6810E-02,4.9150E-02,5.2870E-02,5.5090E-02,5.7680E-02,5.9160E-02,6.0140E-02,6.0850E-02,6.1780E-02,6.2380E-02,6.3260E-02,6.3740E-02,6.4250E-02,6.4530E-02,6.4710E-02,6.4830E-02,6.4990E-02,6.5090E-02,6.5220E-02,6.5300E-02,6.5370E-02,6.5420E-02,6.5450E-02,6.5460E-02,6.5480E-02,6.5500E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0430E-05,4.2590E-05,8.4800E-05,1.3010E-04,1.7530E-04,2.1920E-04,2.6110E-04,3.0100E-04,3.3870E-04,3.7430E-04,4.0790E-04,4.3990E-04,4.7010E-04,4.9890E-04,5.5240E-04,6.0110E-04,6.4560E-04,6.8670E-04,7.2440E-04,7.5960E-04,7.9270E-04,9.2850E-04,1.0320E-03,1.1150E-03,1.2390E-03,1.3300E-03,1.4810E-03,1.5760E-03,1.6930E-03,1.7630E-03,1.8110E-03,1.8460E-03,1.8940E-03,1.9270E-03,1.9740E-03,2.0010E-03,2.0300E-03,2.0480E-03,2.0580E-03,2.0650E-03,2.0750E-03,2.0820E-03,2.0900E-03,2.0950E-03,2.1000E-03,2.1030E-03,2.1040E-03,2.1060E-03,2.1060E-03,2.1080E-03};
	final static double[] TotAttn= {2.8540E+03,1.0930E+03,8.3620E+02,3.9160E+03,3.5190E+03,3.1650E+03,4.5640E+03,3.9870E+03,3.4830E+03,3.9480E+03,3.6000E+03,1.3050E+03,6.1870E+02,3.4250E+02,2.1010E+02,9.6480E+01,5.2570E+01,1.9710E+01,1.3130E+02,1.1680E+02,5.5480E+01,1.8530E+01,8.3910E+00,4.5230E+00,2.7390E+00,1.2670E+00,7.2210E-01,2.9980E-01,1.8720E-01,1.1860E-01,9.4800E-02,8.2270E-02,7.4100E-02,6.3400E-02,5.6310E-02,5.5660E-02,5.0040E-02,4.5690E-02,4.0200E-02,3.9850E-02,3.5010E-02,3.2860E-02,3.1970E-02,3.1680E-02,3.1730E-02,3.1990E-02,3.2370E-02,3.2800E-02,3.3280E-02,3.3760E-02,3.4240E-02,3.4710E-02,3.5180E-02,3.5640E-02,3.6550E-02,3.7410E-02,3.8240E-02,3.9030E-02,3.9760E-02,4.0460E-02,4.1110E-02,4.3920E-02,4.6130E-02,4.7910E-02,5.0630E-02,5.2620E-02,5.5880E-02,5.7860E-02,6.0220E-02,6.1590E-02,6.2500E-02,6.3160E-02,6.4040E-02,6.4610E-02,6.5450E-02,6.5900E-02,6.6400E-02,6.6660E-02,6.6840E-02,6.6950E-02,6.7110E-02,6.7210E-02,6.7340E-02,6.7420E-02,6.7490E-02,6.7530E-02,6.7560E-02,6.7570E-02,6.7590E-02,6.7610E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
