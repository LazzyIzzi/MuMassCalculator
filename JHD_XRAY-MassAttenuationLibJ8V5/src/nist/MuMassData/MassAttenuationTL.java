package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTL {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.38900E-03,2.38901E-03,2.43700E-03,2.48500E-03,2.48501E-03,2.71100E-03,
			2.95700E-03,2.95701E-03,3.00000E-03,3.41600E-03,3.41610E-03,3.55700E-03,3.70400E-03,3.70410E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.26600E-02,1.26601E-02,1.36400E-02,1.47000E-02,1.47001E-02,1.50000E-02,1.53500E-02,
			1.53501E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,8.55300E-02,8.55310E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.2390E+01,1.1900E+01,1.1350E+01,1.0890E+01,1.0890E+01,1.0840E+01,1.0790E+01,1.0790E+01,1.0540E+01,1.0240E+01,1.0240E+01,1.0190E+01,9.7260E+00,9.7260E+00,9.5720E+00,9.4140E+00,9.4140E+00,9.1020E+00,8.1290E+00,7.2870E+00,5.9340E+00,4.9210E+00,3.9130E+00,3.9130E+00,3.6190E+00,3.3320E+00,3.3320E+00,3.2560E+00,3.1730E+00,3.1730E+00,2.2990E+00,1.3550E+00,9.0400E-01,6.4260E-01,4.8090E-01,3.0230E-01,2.7070E-01,2.7070E-01,2.0870E-01,1.0280E-01,6.1320E-02,2.9240E-02,1.7080E-02,1.1180E-02,7.8790E-03,4.5140E-03,2.9210E-03,2.7990E-03,1.8850E-03,1.3160E-03,7.4460E-04,7.1310E-04,3.3240E-04,1.8730E-04,1.2000E-04,8.3360E-05,6.1260E-05,4.6910E-05,3.7070E-05,3.0020E-05,2.4820E-05,2.0860E-05,1.7770E-05,1.5320E-05,1.3350E-05,1.1730E-05,9.2730E-06,7.5110E-06,6.2050E-06,5.2150E-06,4.4430E-06,3.8330E-06,3.3380E-06,1.8780E-06,1.2020E-06,8.3440E-07,4.6940E-07,3.0050E-07,1.3350E-07,7.5110E-08,3.3380E-08,1.8780E-08,1.2020E-08,8.3440E-09,4.6940E-09,3.0050E-09,1.3350E-09,7.5110E-10,3.3380E-10,1.8780E-10,1.2020E-10,8.3440E-11,4.6940E-11,3.0050E-11,1.3350E-11,7.5110E-12,3.3380E-12,1.8780E-12,1.2020E-12,8.3440E-13,4.6940E-13,3.0050E-13};
	final static double[] Incoh= {3.6180E-03,6.5850E-03,9.5170E-03,1.1730E-02,1.1730E-02,1.1980E-02,1.2220E-02,1.2220E-02,1.3440E-02,1.4780E-02,1.4780E-02,1.5010E-02,1.7180E-02,1.7180E-02,1.7900E-02,1.8650E-02,1.8650E-02,2.0140E-02,2.4980E-02,2.9610E-02,3.8160E-02,4.5520E-02,5.3510E-02,5.3510E-02,5.6080E-02,5.8660E-02,5.8660E-02,5.9370E-02,6.0170E-02,6.0170E-02,6.9240E-02,8.2680E-02,9.0600E-02,9.5170E-02,9.7710E-02,9.9530E-02,9.9620E-02,9.9620E-02,9.9240E-02,9.5080E-02,8.9870E-02,8.0530E-02,7.3220E-02,6.7450E-02,6.2760E-02,5.5450E-02,5.0030E-02,4.9500E-02,4.4850E-02,4.0810E-02,3.4890E-02,3.4440E-02,2.7480E-02,2.2930E-02,1.9810E-02,1.7510E-02,1.5740E-02,1.4330E-02,1.3170E-02,1.2200E-02,1.1390E-02,1.0680E-02,1.0060E-02,9.5170E-03,9.0340E-03,8.6040E-03,7.8640E-03,7.2510E-03,6.7360E-03,6.2940E-03,5.9110E-03,5.5750E-03,5.2800E-03,4.1960E-03,3.5030E-03,3.0170E-03,2.3800E-03,1.9750E-03,1.4070E-03,1.1030E-03,7.8170E-04,6.1230E-04,5.0680E-04,4.3400E-04,3.3880E-04,2.7880E-04,1.9470E-04,1.5070E-04,1.0480E-04,8.0880E-05,6.6120E-05,5.6070E-05,4.3200E-05,3.5270E-05,2.4380E-05,1.8740E-05,1.2930E-05,9.9240E-06,8.0820E-06,6.8300E-06,5.2390E-06,4.2610E-06};
	final static double[] PE= {4.9940E+03,2.2470E+03,1.2200E+03,8.2440E+02,1.1210E+03,1.5090E+03,2.0290E+03,2.3450E+03,2.1370E+03,1.9470E+03,2.2550E+03,2.1780E+03,1.5810E+03,1.6770E+03,1.5230E+03,1.3830E+03,1.4430E+03,1.2030E+03,6.9860E+02,4.4430E+02,2.1480E+02,1.2110E+02,6.5590E+01,1.6530E+02,1.3510E+02,1.1050E+02,1.5380E+02,1.4640E+02,1.3830E+02,1.5990E+02,8.1230E+01,2.7850E+01,1.2860E+01,7.0130E+00,4.2610E+00,1.9310E+00,1.6050E+00,7.6760E+00,5.0890E+00,1.7590E+00,8.1820E-01,2.8250E-01,1.3640E-01,7.9380E-02,5.1950E-02,2.7550E-02,1.7350E-02,1.6610E-02,1.1210E-02,7.9820E-03,4.8290E-03,4.6550E-03,2.5250E-03,1.6540E-03,1.2120E-03,9.5020E-04,7.7820E-04,6.5740E-04,5.6840E-04,5.0000E-04,4.4580E-04,4.0220E-04,3.6620E-04,3.3620E-04,3.1030E-04,2.8830E-04,2.5240E-04,2.2430E-04,2.0180E-04,1.8340E-04,1.6810E-04,1.5500E-04,1.4390E-04,1.0580E-04,8.3650E-05,6.9150E-05,5.1360E-05,4.0840E-05,2.6990E-05,2.0160E-05,1.3390E-05,1.0020E-05,8.0060E-06,6.6650E-06,4.9940E-06,3.9920E-06,2.6590E-06,1.9940E-06,1.3290E-06,9.9620E-07,7.9670E-07,6.6380E-07,4.9800E-07,3.9840E-07,2.6550E-07,1.9910E-07,1.3270E-07,9.9560E-08,7.9640E-08,6.6380E-08,4.9770E-08,3.9810E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {5.0070E+03,2.2590E+03,1.2310E+03,8.3530E+02,1.1320E+03,1.5190E+03,2.0400E+03,2.3560E+03,2.1470E+03,1.9570E+03,2.2660E+03,2.1890E+03,1.5910E+03,1.6870E+03,1.5320E+03,1.3920E+03,1.4520E+03,1.2120E+03,7.0680E+02,4.5160E+02,2.2080E+02,1.2600E+02,6.9560E+01,1.6930E+02,1.3880E+02,1.1390E+02,1.5720E+02,1.4970E+02,1.4160E+02,1.6310E+02,8.3600E+01,2.9290E+01,1.3850E+01,7.7500E+00,4.8390E+00,2.3320E+00,1.9760E+00,8.0460E+00,5.3960E+00,1.9570E+00,9.6940E-01,3.9220E-01,2.2670E-01,1.5800E-01,1.2260E-01,8.7510E-02,7.0310E-02,6.8910E-02,5.8310E-02,5.1870E-02,4.5810E-02,4.5480E-02,4.2110E-02,4.1750E-02,4.2480E-02,4.3660E-02,4.5020E-02,4.6470E-02,4.7960E-02,4.9430E-02,5.0850E-02,5.2280E-02,5.3660E-02,5.4970E-02,5.6220E-02,5.7410E-02,5.9630E-02,6.1620E-02,6.3510E-02,6.5230E-02,6.6870E-02,6.8350E-02,6.9750E-02,7.5550E-02,7.9990E-02,8.3480E-02,8.8700E-02,9.2430E-02,9.8390E-02,1.0200E-01,1.0610E-01,1.0850E-01,1.1010E-01,1.1130E-01,1.1280E-01,1.1370E-01,1.1510E-01,1.1590E-01,1.1680E-01,1.1720E-01,1.1750E-01,1.1770E-01,1.1800E-01,1.1810E-01,1.1840E-01,1.1850E-01,1.1860E-01,1.1870E-01,1.1870E-01,1.1870E-01,1.1880E-01,1.1880E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
