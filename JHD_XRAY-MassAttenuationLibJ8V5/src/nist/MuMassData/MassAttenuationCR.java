package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationCR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,5.98900E-03,5.98910E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {4.1410E+00,3.8640E+00,3.5730E+00,3.0180E+00,2.5320E+00,2.1290E+00,1.8080E+00,1.8080E+00,1.8040E+00,1.3460E+00,1.0550E+00,6.6280E-01,4.5730E-01,2.4940E-01,1.5730E-01,1.0920E-01,8.0530E-02,4.9050E-02,3.2880E-02,1.5500E-02,8.9760E-03,4.1010E-03,2.3340E-03,1.5030E-03,1.0470E-03,5.9110E-04,3.7900E-04,3.6290E-04,2.4290E-04,1.6870E-04,9.4970E-05,9.0930E-05,4.2230E-05,2.3750E-05,1.5210E-05,1.0560E-05,7.7580E-06,5.9400E-06,4.6930E-06,3.8010E-06,3.1420E-06,2.6400E-06,2.2490E-06,1.9400E-06,1.6900E-06,1.4850E-06,1.1730E-06,9.5040E-07,7.8550E-07,6.6010E-07,5.6240E-07,4.8490E-07,4.2240E-07,2.3770E-07,1.5210E-07,1.0560E-07,5.9400E-08,3.8010E-08,1.6900E-08,9.5030E-09,4.2240E-09,2.3750E-09,1.5210E-09,1.0560E-09,5.9390E-10,3.8010E-10,1.6900E-10,9.5030E-11,4.2240E-11,2.3750E-11,1.5210E-11,1.0560E-11,5.9390E-12,3.8010E-12,1.6900E-12,9.5030E-13,4.2240E-13,2.3750E-13,1.5210E-13,1.0560E-13,5.9390E-14,3.8010E-14};
	final static double[] Incoh= {8.5440E-03,1.4910E-02,2.1060E-02,3.2800E-02,4.3570E-02,5.3280E-02,6.1880E-02,6.1880E-02,6.1970E-02,7.6580E-02,8.7850E-02,1.0630E-01,1.1740E-01,1.2940E-01,1.3410E-01,1.3550E-01,1.3530E-01,1.3280E-01,1.2910E-01,1.1930E-01,1.1060E-01,9.7160E-02,8.7420E-02,8.0010E-02,7.4110E-02,6.5190E-02,5.8660E-02,5.8040E-02,5.2480E-02,4.7710E-02,4.0720E-02,4.0220E-02,3.2050E-02,2.6730E-02,2.3090E-02,2.0410E-02,1.8350E-02,1.6690E-02,1.5350E-02,1.4220E-02,1.3260E-02,1.2440E-02,1.1720E-02,1.1090E-02,1.0520E-02,1.0020E-02,9.1600E-03,8.4470E-03,7.8460E-03,7.3310E-03,6.8840E-03,6.4940E-03,6.1500E-03,4.8860E-03,4.0790E-03,3.5140E-03,2.7720E-03,2.3000E-03,1.6390E-03,1.2840E-03,9.1050E-04,7.1310E-04,5.9020E-04,5.0540E-04,3.9470E-04,3.2480E-04,2.2680E-04,1.7550E-04,1.2210E-04,9.4210E-05,7.7020E-05,6.5310E-05,5.0320E-05,4.1080E-05,2.8400E-05,2.1830E-05,1.5060E-05,1.1560E-05,9.4110E-06,7.9560E-06,6.1000E-06,4.9630E-06};
	final static double[] PE= {7.4010E+03,2.6900E+03,1.2740E+03,4.3080E+02,1.9620E+02,1.0580E+02,6.3860E+01,5.1400E+02,5.1420E+02,2.4990E+02,1.3760E+02,4.4950E+01,1.9810E+01,6.0550E+00,2.5640E+00,1.3060E+00,7.4820E-01,3.0850E-01,1.5460E-01,4.3990E-02,1.8170E-02,5.3960E-03,2.3750E-03,1.3010E-03,8.1840E-04,4.1640E-04,2.5900E-04,2.4570E-04,1.6620E-04,1.2000E-04,7.4090E-05,7.1580E-05,4.0320E-05,2.7210E-05,2.0400E-05,1.6250E-05,1.3490E-05,1.1520E-05,1.0040E-05,8.9000E-06,7.9880E-06,7.2430E-06,6.6260E-06,6.1040E-06,5.6580E-06,5.2730E-06,4.6400E-06,4.1420E-06,3.7400E-06,3.4100E-06,3.1330E-06,2.8970E-06,2.6940E-06,1.9960E-06,1.5840E-06,1.3130E-06,9.7890E-07,7.8020E-07,5.1750E-07,3.8710E-07,2.5730E-07,1.9280E-07,1.5420E-07,1.2830E-07,9.6210E-08,7.6940E-08,5.1260E-08,3.8440E-08,2.5620E-08,1.9210E-08,1.5370E-08,1.2810E-08,9.6050E-09,7.6830E-09,5.1220E-09,3.8420E-09,2.5610E-09,1.9200E-09,1.5370E-09,1.2800E-09,9.6030E-10,7.6820E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,6.2650E-05,3.2220E-04,1.2420E-03,1.3370E-03,3.4470E-03,5.5190E-03,7.3500E-03,8.9830E-03,1.0440E-02,1.1740E-02,1.2930E-02,1.3990E-02,1.4960E-02,1.5860E-02,1.6680E-02,1.7450E-02,1.8160E-02,1.8830E-02,2.0070E-02,2.1160E-02,2.2160E-02,2.3060E-02,2.3880E-02,2.4650E-02,2.5350E-02,2.8210E-02,3.0360E-02,3.2040E-02,3.4540E-02,3.6320E-02,3.9220E-02,4.0970E-02,4.3030E-02,4.4220E-02,4.5010E-02,4.5570E-02,4.6340E-02,4.6830E-02,4.7540E-02,4.7940E-02,4.8350E-02,4.8590E-02,4.8730E-02,4.8830E-02,4.8960E-02,4.9040E-02,4.9150E-02,4.9220E-02,4.9280E-02,4.9320E-02,4.9340E-02,4.9350E-02,4.9370E-02,4.9390E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1210E-05,4.5780E-05,9.1210E-05,1.4000E-04,1.8880E-04,2.3600E-04,2.8120E-04,3.2430E-04,3.6510E-04,4.0360E-04,4.4000E-04,4.7460E-04,5.0750E-04,5.3880E-04,5.9680E-04,6.4970E-04,6.9840E-04,7.4320E-04,7.8480E-04,8.2340E-04,8.5940E-04,1.0100E-03,1.1250E-03,1.2170E-03,1.3590E-03,1.4620E-03,1.6370E-03,1.7480E-03,1.8860E-03,1.9700E-03,2.0280E-03,2.0710E-03,2.1300E-03,2.1690E-03,2.2280E-03,2.2630E-03,2.3000E-03,2.3220E-03,2.3350E-03,2.3440E-03,2.3570E-03,2.3650E-03,2.3770E-03,2.3820E-03,2.3880E-03,2.3930E-03,2.3950E-03,2.3960E-03,2.3990E-03,2.4000E-03};
	final static double[] TotAttn= {7.4050E+03,2.6940E+03,1.2780E+03,4.3390E+02,1.9880E+02,1.0800E+02,6.5730E+01,5.1590E+02,5.1610E+02,2.5140E+02,1.3870E+02,4.5720E+01,2.0380E+01,6.4340E+00,2.8560E+00,1.5510E+00,9.6400E-01,4.9040E-01,3.1660E-01,1.7880E-01,1.3780E-01,1.0670E-01,9.2130E-02,8.2810E-02,7.5980E-02,6.6200E-02,5.9300E-02,5.8650E-02,5.2950E-02,4.8320E-02,4.2130E-02,4.1720E-02,3.5590E-02,3.2350E-02,3.0570E-02,2.9560E-02,2.8990E-02,2.8690E-02,2.8570E-02,2.8550E-02,2.8600E-02,2.8710E-02,2.8850E-02,2.9020E-02,2.9200E-02,2.9400E-02,2.9830E-02,3.0260E-02,3.0700E-02,3.1140E-02,3.1550E-02,3.1970E-02,3.2370E-02,3.4110E-02,3.5560E-02,3.6770E-02,3.8670E-02,4.0080E-02,4.2490E-02,4.4000E-02,4.5820E-02,4.6900E-02,4.7630E-02,4.8150E-02,4.8860E-02,4.9320E-02,5.0000E-02,5.0380E-02,5.0780E-02,5.1000E-02,5.1140E-02,5.1240E-02,5.1360E-02,5.1440E-02,5.1560E-02,5.1630E-02,5.1680E-02,5.1720E-02,5.1740E-02,5.1750E-02,5.1780E-02,5.1790E-02};


	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************
	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
