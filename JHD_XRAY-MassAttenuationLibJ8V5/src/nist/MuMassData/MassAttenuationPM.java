package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationPM {

	final static double[] MeV= {1.00000E-03,1.01300E-03,1.02700E-03,1.02701E-03,1.03900E-03,1.05100E-03,1.05101E-03,1.19400E-03,1.35700E-03,
			1.35701E-03,1.41300E-03,1.47100E-03,1.47101E-03,1.50000E-03,1.65300E-03,1.65301E-03,2.00000E-03,3.00000E-03,4.00000E-03,
			5.00000E-03,6.00000E-03,6.45900E-03,6.45910E-03,6.73000E-03,7.01300E-03,7.01310E-03,7.21700E-03,7.42800E-03,7.42810E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,4.51800E-02,4.51810E-02,5.00000E-02,6.00000E-02,
			8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,
			1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,
			8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,
			2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,
			1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,
			2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,
			4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {9.6910E+00,9.6790E+00,9.6660E+00,9.6660E+00,9.6540E+00,9.6410E+00,9.6410E+00,9.4960E+00,9.3340E+00,9.3340E+00,9.2770E+00,9.2130E+00,9.2130E+00,9.1800E+00,9.0180E+00,9.0180E+00,8.6600E+00,7.6420E+00,6.7070E+00,5.9010E+00,5.2240E+00,4.9450E+00,4.9450E+00,4.7920E+00,4.6420E+00,4.6420E+00,4.5380E+00,4.4340E+00,4.4340E+00,4.1640E+00,3.3910E+00,2.2080E+00,1.5840E+00,9.2550E-01,6.0220E-01,4.9990E-01,4.9990E-01,4.2760E-01,3.2120E-01,1.9990E-01,1.3590E-01,6.6200E-02,3.9330E-02,1.8490E-02,1.0680E-02,6.9440E-03,4.8750E-03,2.7760E-03,1.7890E-03,1.7140E-03,1.1510E-03,8.0120E-04,4.5210E-04,4.3300E-04,2.0130E-04,1.1340E-04,7.2560E-05,5.0410E-05,3.7040E-05,2.8360E-05,2.2410E-05,1.8150E-05,1.5000E-05,1.2610E-05,1.0740E-05,9.2630E-06,8.0700E-06,7.0940E-06,5.6020E-06,4.5380E-06,3.7510E-06,3.1520E-06,2.6860E-06,2.3160E-06,2.0170E-06,1.1350E-06,7.2640E-07,5.0450E-07,2.8370E-07,1.8160E-07,8.0700E-08,4.5380E-08,2.0170E-08,1.1350E-08,7.2640E-09,5.0450E-09,2.8370E-09,1.8160E-09,8.0700E-10,4.5380E-10,2.0170E-10,1.1350E-10,7.2640E-11,5.0450E-11,2.8370E-11,1.8160E-11,8.0700E-12,4.5380E-12,2.0170E-12,1.1350E-12,7.2640E-13,5.0450E-13,2.8370E-13,1.8160E-13};
	final static double[] Incoh= {6.2250E-03,6.3320E-03,6.4410E-03,6.4410E-03,6.5400E-03,6.6410E-03,6.6410E-03,7.7620E-03,9.0050E-03,9.0050E-03,9.4410E-03,9.8950E-03,9.8950E-03,1.0110E-02,1.1290E-02,1.1290E-02,1.3920E-02,2.1300E-02,2.8120E-02,3.4310E-02,3.9820E-02,4.2140E-02,4.2140E-02,4.3460E-02,4.4800E-02,4.4800E-02,4.5730E-02,4.6670E-02,4.6670E-02,4.9160E-02,5.7020E-02,7.2560E-02,8.3650E-02,9.6950E-02,1.0390E-01,1.0610E-01,1.0610E-01,1.0760E-01,1.0960E-01,1.1050E-01,1.0930E-01,1.0340E-01,9.7160E-02,8.6560E-02,7.8460E-02,7.2140E-02,6.6990E-02,5.9140E-02,5.3280E-02,5.2740E-02,4.7710E-02,4.3430E-02,3.7090E-02,3.6630E-02,2.9200E-02,2.4370E-02,2.1050E-02,1.8610E-02,1.6720E-02,1.5220E-02,1.3990E-02,1.2970E-02,1.2090E-02,1.1340E-02,1.0680E-02,1.0110E-02,9.5960E-03,9.1380E-03,8.3530E-03,7.7050E-03,7.1560E-03,6.6870E-03,6.2790E-03,5.9220E-03,5.6100E-03,4.4550E-03,3.7200E-03,3.2050E-03,2.5280E-03,2.0980E-03,1.4940E-03,1.1710E-03,8.3030E-04,6.5040E-04,5.3820E-04,4.6090E-04,3.6000E-04,2.9610E-04,2.0680E-04,1.6010E-04,1.1130E-04,8.5900E-05,7.0230E-05,5.9550E-05,4.5880E-05,3.7470E-05,2.5890E-05,1.9910E-05,1.3730E-05,1.0540E-05,8.5820E-06,7.2560E-06,5.5640E-06,4.5260E-06};
	final static double[] PE= {2.0470E+03,1.9970E+03,1.9490E+03,2.5440E+03,3.8480E+03,5.7930E+03,7.1940E+03,6.3920E+03,5.6810E+03,6.5450E+03,5.9770E+03,5.4560E+03,5.7890E+03,5.5440E+03,4.4880E+03,4.6920E+03,3.0390E+03,1.1540E+03,5.6430E+02,3.2010E+02,2.0010E+02,1.6510E+02,4.6290E+02,4.1710E+02,3.7580E+02,5.1280E+02,4.7760E+02,4.4510E+02,5.1410E+02,4.2720E+02,2.4060E+02,8.1830E+01,3.7490E+01,1.2240E+01,5.4730E+00,3.8850E+00,2.2050E+01,1.6810E+01,1.0440E+01,4.7960E+00,2.5940E+00,8.3570E-01,3.7330E-01,1.2220E-01,5.7060E-02,3.2460E-02,2.0900E-02,1.0890E-02,6.8150E-03,6.5240E-03,4.3970E-03,3.1430E-03,1.9080E-03,1.8410E-03,1.0070E-03,6.6450E-04,4.9000E-04,3.8590E-04,3.1720E-04,2.6870E-04,2.3290E-04,2.0530E-04,1.8340E-04,1.6570E-04,1.5110E-04,1.3880E-04,1.2830E-04,1.1930E-04,1.0460E-04,9.3090E-05,8.3860E-05,7.6260E-05,6.9940E-05,6.4580E-05,5.9970E-05,4.4180E-05,3.4980E-05,2.8940E-05,2.1510E-05,1.7120E-05,1.1330E-05,8.4650E-06,5.6230E-06,4.2100E-06,3.3640E-06,2.8010E-06,2.0990E-06,1.6780E-06,1.1180E-06,8.3820E-07,5.5850E-07,4.1890E-07,3.3500E-07,2.7910E-07,2.0930E-07,1.6750E-07,1.1160E-07,8.3740E-08,5.5810E-08,4.1850E-08,3.3490E-08,2.7910E-08,2.0930E-08,1.6740E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {2.0560E+03,2.0070E+03,1.9590E+03,2.5540E+03,3.8570E+03,5.8030E+03,7.2030E+03,6.4010E+03,5.6900E+03,6.5550E+03,5.9860E+03,5.4660E+03,5.7980E+03,5.5530E+03,4.4970E+03,4.7010E+03,3.0480E+03,1.1620E+03,5.7110E+02,3.2600E+02,2.0530E+02,1.7010E+02,4.6790E+02,4.2190E+02,3.8050E+02,5.1750E+02,4.8220E+02,4.4960E+02,5.1850E+02,4.3140E+02,2.4400E+02,8.4110E+01,3.9160E+01,1.3270E+01,6.1790E+00,4.4910E+00,2.2650E+01,1.7350E+01,1.0870E+01,5.1060E+00,2.8400E+00,1.0050E+00,5.0980E-01,2.2730E-01,1.4620E-01,1.1150E-01,9.2770E-02,7.2800E-02,6.1880E-02,6.0970E-02,5.3500E-02,4.8490E-02,4.3080E-02,4.2770E-02,3.9250E-02,3.8490E-02,3.8820E-02,3.9590E-02,4.0590E-02,4.1690E-02,4.2840E-02,4.4010E-02,4.5160E-02,4.6300E-02,4.7400E-02,4.8460E-02,4.9460E-02,5.0420E-02,5.2180E-02,5.3810E-02,5.5370E-02,5.6760E-02,5.8080E-02,5.9290E-02,6.0460E-02,6.5230E-02,6.8910E-02,7.1830E-02,7.6250E-02,7.9430E-02,8.4520E-02,8.7650E-02,9.1280E-02,9.3400E-02,9.4830E-02,9.5820E-02,9.7180E-02,9.8050E-02,9.9300E-02,1.0000E-01,1.0070E-01,1.0120E-01,1.0140E-01,1.0160E-01,1.0180E-01,1.0200E-01,1.0220E-01,1.0230E-01,1.0240E-01,1.0250E-01,1.0250E-01,1.0250E-01,1.0260E-01,1.0260E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
