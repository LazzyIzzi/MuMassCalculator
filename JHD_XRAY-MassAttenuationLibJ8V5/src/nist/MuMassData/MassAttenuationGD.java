package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationGD {

	final static double[] MeV= {1.00000E-03,1.08900E-03,1.18500E-03,1.18501E-03,1.20100E-03,1.21700E-03,1.21701E-03,1.50000E-03,1.54400E-03,
			1.54401E-03,1.61500E-03,1.68800E-03,1.68801E-03,1.78200E-03,1.88100E-03,1.88101E-03,2.00000E-03,3.00000E-03,4.00000E-03,
			5.00000E-03,6.00000E-03,7.24300E-03,7.24310E-03,7.57900E-03,7.93000E-03,7.93010E-03,8.00000E-03,8.37600E-03,8.37610E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,5.02400E-02,5.02410E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {9.8770E+00,9.7910E+00,9.6930E+00,9.6930E+00,9.6760E+00,9.6580E+00,9.6580E+00,9.3750E+00,9.3290E+00,9.3290E+00,9.2540E+00,9.1760E+00,9.1760E+00,9.0810E+00,8.9810E+00,8.9810E+00,8.8540E+00,7.8470E+00,6.9200E+00,6.1080E+00,5.4190E+00,4.7030E+00,4.7030E+00,4.5280E+00,4.3620E+00,4.3620E+00,4.3310E+00,4.1630E+00,4.1630E+00,3.5290E+00,2.2910E+00,1.6380E+00,9.6390E-01,6.2810E-01,4.4500E-01,4.4190E-01,4.4190E-01,3.3450E-01,2.0900E-01,1.4240E-01,6.9390E-02,4.1280E-02,1.9450E-02,1.1260E-02,7.3220E-03,5.1430E-03,2.9310E-03,1.8900E-03,1.8110E-03,1.2160E-03,8.4710E-04,4.7790E-04,4.5760E-04,2.1300E-04,1.1990E-04,7.6780E-05,5.3350E-05,3.9180E-05,3.0010E-05,2.3710E-05,1.9210E-05,1.5870E-05,1.3340E-05,1.1370E-05,9.8000E-06,8.5360E-06,7.5060E-06,5.9280E-06,4.8020E-06,3.9680E-06,3.3350E-06,2.8420E-06,2.4510E-06,2.1350E-06,1.2010E-06,7.6860E-07,5.3390E-07,3.0020E-07,1.9210E-07,8.5400E-08,4.8020E-08,2.1350E-08,1.2010E-08,7.6860E-09,5.3350E-09,3.0020E-09,1.9210E-09,8.5400E-10,4.8020E-10,2.1350E-10,1.2010E-10,7.6860E-11,5.3350E-11,3.0020E-11,1.9210E-11,8.5400E-12,4.8020E-12,2.1350E-12,1.2010E-12,7.6860E-13,5.3350E-13,3.0020E-13,1.9210E-13};
	final static double[] Incoh= {5.6260E-03,6.2930E-03,7.0200E-03,7.0200E-03,7.1380E-03,7.2570E-03,7.2570E-03,9.2790E-03,9.5970E-03,9.5970E-03,1.0100E-02,1.0620E-02,1.0620E-02,1.1270E-02,1.1960E-02,1.1960E-02,1.2790E-02,1.9610E-02,2.5970E-02,3.1800E-02,3.7060E-02,4.2820E-02,4.2820E-02,4.4290E-02,4.5730E-02,4.5730E-02,4.5990E-02,4.7490E-02,4.7490E-02,5.3460E-02,6.8240E-02,7.9080E-02,9.2330E-02,9.9300E-02,1.0310E-01,1.0320E-01,1.0320E-01,1.0510E-01,1.0610E-01,1.0510E-01,9.9650E-02,9.3670E-02,8.3520E-02,7.5750E-02,6.9660E-02,6.4720E-02,5.7140E-02,5.1510E-02,5.0930E-02,4.6110E-02,4.1970E-02,3.5850E-02,3.5410E-02,2.8230E-02,2.3560E-02,2.0350E-02,1.7990E-02,1.6170E-02,1.4720E-02,1.3530E-02,1.2530E-02,1.1690E-02,1.0960E-02,1.0330E-02,9.7730E-03,9.2790E-03,8.8350E-03,8.0770E-03,7.4490E-03,6.9160E-03,6.4640E-03,6.0700E-03,5.7250E-03,5.4230E-03,4.3080E-03,3.5970E-03,3.0990E-03,2.4440E-03,2.0290E-03,1.4450E-03,1.1330E-03,8.0270E-04,6.2880E-04,5.2050E-04,4.4580E-04,3.4800E-04,2.8630E-04,1.9990E-04,1.5480E-04,1.0760E-04,8.3070E-05,6.7900E-05,5.7600E-05,4.4390E-05,3.6230E-05,2.5030E-05,1.9250E-05,1.3270E-05,1.0190E-05,8.2990E-06,7.0160E-06,5.3810E-06,4.3770E-06};
	final static double[] PE= {2.2810E+03,1.9460E+03,1.6590E+03,1.8340E+03,2.7080E+03,3.9870E+03,4.8060E+03,5.0320E+03,4.6910E+03,5.4230E+03,4.8910E+03,4.4120E+03,4.6840E+03,4.1540E+03,3.6830E+03,3.8450E+03,3.3510E+03,1.2840E+03,6.3110E+02,3.5920E+02,2.2510E+02,1.3810E+02,3.7960E+02,3.3780E+02,3.0050E+02,4.1020E+02,4.0250E+02,3.5890E+02,4.1480E+02,2.6570E+02,9.0990E+01,4.1900E+01,1.3780E+01,6.1930E+00,3.3120E+00,3.2670E+00,1.8090E+01,1.1310E+01,5.2580E+00,2.8620E+00,9.3100E-01,4.1860E-01,1.3800E-01,6.4760E-02,3.6940E-02,2.3840E-02,1.2450E-02,7.8010E-03,7.4640E-03,5.0320E-03,3.5940E-03,2.1810E-03,2.1030E-03,1.1490E-03,7.5750E-04,5.5800E-04,4.3890E-04,3.6060E-04,3.0540E-04,2.6460E-04,2.3310E-04,2.0830E-04,1.8810E-04,1.7150E-04,1.5750E-04,1.4560E-04,1.3530E-04,1.1860E-04,1.0550E-04,9.5050E-05,8.6440E-05,7.9240E-05,7.3150E-05,6.7940E-05,5.0050E-05,3.9600E-05,3.2770E-05,2.4350E-05,1.9370E-05,1.2820E-05,9.5780E-06,6.3610E-06,4.7640E-06,3.8060E-06,3.1690E-06,2.3740E-06,1.8980E-06,1.2650E-06,9.4820E-07,6.3190E-07,4.7370E-07,3.7900E-07,3.1580E-07,2.3680E-07,1.8950E-07,1.2630E-07,9.4710E-08,6.3150E-08,4.7370E-08,3.7880E-08,3.1570E-08,2.3680E-08,1.8940E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {2.2910E+03,1.9550E+03,1.6690E+03,1.8440E+03,2.7180E+03,3.9960E+03,4.8160E+03,5.0420E+03,4.7010E+03,5.4320E+03,4.9000E+03,4.4210E+03,4.6930E+03,4.1630E+03,3.6920E+03,3.8540E+03,3.3600E+03,1.2920E+03,6.3810E+02,3.6530E+02,2.3050E+02,1.4280E+02,3.8440E+02,3.4230E+02,3.0490E+02,4.1460E+02,4.0690E+02,3.6310E+02,4.1900E+02,2.6930E+02,9.3350E+01,4.3610E+01,1.4840E+01,6.9200E+00,3.8600E+00,3.8120E+00,1.8640E+01,1.1750E+01,5.5730E+00,3.1090E+00,1.1000E+00,5.5350E-01,2.4100E-01,1.5180E-01,1.1390E-01,9.3710E-02,7.2520E-02,6.1200E-02,6.0210E-02,5.2610E-02,4.7590E-02,4.2280E-02,4.1990E-02,3.8650E-02,3.8020E-02,3.8440E-02,3.9280E-02,4.0320E-02,4.1470E-02,4.2660E-02,4.3840E-02,4.5030E-02,4.6180E-02,4.7310E-02,4.8390E-02,4.9430E-02,5.0380E-02,5.2180E-02,5.3850E-02,5.5410E-02,5.6830E-02,5.8180E-02,5.9400E-02,6.0570E-02,6.5420E-02,6.9120E-02,7.2100E-02,7.6520E-02,7.9700E-02,8.4870E-02,8.7970E-02,9.1610E-02,9.3750E-02,9.5140E-02,9.6130E-02,9.7450E-02,9.8330E-02,9.9590E-02,1.0030E-01,1.0100E-01,1.0140E-01,1.0170E-01,1.0190E-01,1.0210E-01,1.0220E-01,1.0240E-01,1.0250E-01,1.0270E-01,1.0270E-01,1.0280E-01,1.0280E-01,1.0280E-01,1.0280E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
