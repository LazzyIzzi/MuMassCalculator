package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationCL {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.82200E-03,2.82201E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {3.0340E+00,2.7960E+00,2.5310E+00,2.1170E+00,2.1170E+00,2.0380E+00,1.6620E+00,1.3920E+00,1.1960E+00,9.2750E-01,7.4150E-01,4.4860E-01,2.9560E-01,1.5830E-01,1.0000E-01,6.9120E-02,5.0520E-02,3.0220E-02,2.0040E-02,9.3440E-03,5.3780E-03,2.4380E-03,1.3820E-03,8.8750E-04,6.1760E-04,3.4820E-04,2.2300E-04,2.1350E-04,1.4290E-04,9.9230E-05,5.5830E-05,5.3460E-05,2.4820E-05,1.3960E-05,8.9380E-06,6.2070E-06,4.5610E-06,3.4910E-06,2.7590E-06,2.2340E-06,1.8460E-06,1.5520E-06,1.3220E-06,1.1400E-06,9.9320E-07,8.7290E-07,6.8960E-07,5.5870E-07,4.6170E-07,3.8800E-07,3.3060E-07,2.8500E-07,2.4830E-07,1.3970E-07,8.9380E-08,6.2070E-08,3.4910E-08,2.2340E-08,9.9300E-09,5.5850E-09,2.4830E-09,1.3960E-09,8.9380E-10,6.2070E-10,3.4910E-10,2.2340E-10,9.9300E-11,5.5850E-11,2.4830E-11,1.3960E-11,8.9380E-12,6.2070E-12,3.4910E-12,2.2340E-12,9.9300E-13,5.5850E-13,2.4830E-13,1.3960E-13,8.9380E-14,6.2070E-14,3.4910E-14,2.2340E-14};
	final static double[] Incoh= {8.5560E-03,1.6910E-02,2.5850E-02,3.9730E-02,3.9730E-02,4.2480E-02,5.6210E-02,6.7100E-02,7.5810E-02,8.9350E-02,1.0000E-01,1.1910E-01,1.3050E-01,1.4110E-01,1.4460E-01,1.4540E-01,1.4470E-01,1.4110E-01,1.3660E-01,1.2530E-01,1.1580E-01,1.0130E-01,9.1050E-02,8.3270E-02,7.7100E-02,6.7790E-02,6.0980E-02,6.0340E-02,5.4540E-02,4.9580E-02,4.2310E-02,4.1800E-02,3.3290E-02,2.7770E-02,2.3980E-02,2.1200E-02,1.9060E-02,1.7340E-02,1.5940E-02,1.4770E-02,1.3780E-02,1.2920E-02,1.2170E-02,1.1520E-02,1.0930E-02,1.0410E-02,9.5160E-03,8.7750E-03,8.1500E-03,7.6170E-03,7.1530E-03,6.7470E-03,6.3890E-03,5.0770E-03,4.2380E-03,3.6520E-03,2.8790E-03,2.3900E-03,1.7020E-03,1.3340E-03,9.4580E-04,7.4080E-04,6.1320E-04,5.2500E-04,4.1010E-04,3.3730E-04,2.3560E-04,1.8230E-04,1.2680E-04,9.7860E-05,8.0010E-05,6.7840E-05,5.2280E-05,4.2690E-05,2.9490E-05,2.2680E-05,1.5640E-05,1.2010E-05,9.7770E-06,8.2660E-06,6.3380E-06,5.1550E-06};
	final static double[] PE= {2.8280E+03,9.7430E+02,4.4950E+02,1.7530E+02,1.6340E+03,1.4710E+03,7.0200E+02,3.8860E+02,2.3710E+02,1.0650E+02,5.6410E+01,1.7280E+01,7.3140E+00,2.1270E+00,8.7190E-01,4.3380E-01,2.4430E-01,9.8250E-02,4.8340E-02,1.3360E-02,5.4190E-03,1.5750E-03,6.8520E-04,3.7270E-04,2.3340E-04,1.1830E-04,7.3570E-05,6.9560E-05,4.7120E-05,3.4070E-05,2.1180E-05,2.0470E-05,1.1640E-05,7.9070E-06,5.9540E-06,4.7610E-06,3.9630E-06,3.3900E-06,2.9610E-06,2.6280E-06,2.3610E-06,2.1420E-06,1.9620E-06,1.8090E-06,1.6770E-06,1.5640E-06,1.3770E-06,1.2310E-06,1.1120E-06,1.0140E-06,9.3220E-07,8.6240E-07,8.0230E-07,5.9500E-07,4.7270E-07,3.9220E-07,2.9250E-07,2.3320E-07,1.5470E-07,1.1580E-07,7.7000E-08,5.7690E-08,4.6120E-08,3.8410E-08,2.8790E-08,2.3030E-08,1.5340E-08,1.1500E-08,7.6680E-09,5.7500E-09,4.6000E-09,3.8340E-09,2.8740E-09,2.3000E-09,1.5330E-09,1.1500E-09,7.6660E-10,5.7480E-10,4.5980E-10,3.8320E-10,2.8740E-10,2.3000E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,4.2420E-05,2.2710E-04,8.8790E-04,9.5670E-04,2.5090E-03,4.0430E-03,5.4070E-03,6.6250E-03,7.7100E-03,8.6850E-03,9.5700E-03,1.0370E-02,1.1100E-02,1.1770E-02,1.2380E-02,1.2960E-02,1.3500E-02,1.4000E-02,1.4920E-02,1.5750E-02,1.6500E-02,1.7170E-02,1.7800E-02,1.8360E-02,1.8890E-02,2.1080E-02,2.2710E-02,2.3980E-02,2.5850E-02,2.7210E-02,2.9420E-02,3.0780E-02,3.2380E-02,3.3290E-02,3.3920E-02,3.4360E-02,3.4960E-02,3.5350E-02,3.5910E-02,3.6220E-02,3.6540E-02,3.6720E-02,3.6840E-02,3.6910E-02,3.7030E-02,3.7080E-02,3.7180E-02,3.7230E-02,3.7290E-02,3.7300E-02,3.7320E-02,3.7340E-02,3.7350E-02,3.7350E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1650E-05,4.7580E-05,9.4780E-05,1.4560E-04,1.9620E-04,2.4550E-04,2.9250E-04,3.3730E-04,3.8000E-04,4.2010E-04,4.5810E-04,4.9430E-04,5.2860E-04,5.6120E-04,6.2200E-04,6.7760E-04,7.2850E-04,7.7560E-04,8.1930E-04,8.5990E-04,8.9770E-04,1.0560E-03,1.1790E-03,1.2770E-03,1.4270E-03,1.5390E-03,1.7280E-03,1.8500E-03,2.0040E-03,2.0980E-03,2.1620E-03,2.2120E-03,2.2780E-03,2.3220E-03,2.3900E-03,2.4270E-03,2.4700E-03,2.4950E-03,2.5110E-03,2.5210E-03,2.5340E-03,2.5430E-03,2.5560E-03,2.5630E-03,2.5700E-03,2.5730E-03,2.5770E-03,2.5790E-03,2.5800E-03,2.5820E-03};
	final static double[] TotAttn= {2.8310E+03,9.7720E+02,4.5200E+02,1.7750E+02,1.6370E+03,1.4730E+03,7.0380E+02,3.9010E+02,2.3840E+02,1.0750E+02,5.7250E+01,1.7840E+01,7.7400E+00,2.4260E+00,1.1170E+00,6.4830E-01,4.3940E-01,2.6960E-01,2.0500E-01,1.4800E-01,1.2660E-01,1.0540E-01,9.3110E-02,8.4530E-02,7.7950E-02,6.8260E-02,6.1280E-02,6.0620E-02,5.4780E-02,4.9940E-02,4.3280E-02,4.2830E-02,3.5850E-02,3.1880E-02,2.9500E-02,2.7980E-02,2.6970E-02,2.6280E-02,2.5810E-02,2.5490E-02,2.5260E-02,2.5110E-02,2.5020E-02,2.4970E-02,2.4960E-02,2.4980E-02,2.5060E-02,2.5200E-02,2.5380E-02,2.5570E-02,2.5780E-02,2.5970E-02,2.6180E-02,2.7210E-02,2.8130E-02,2.8910E-02,3.0160E-02,3.1140E-02,3.2850E-02,3.3960E-02,3.5330E-02,3.6130E-02,3.6700E-02,3.7100E-02,3.7650E-02,3.8010E-02,3.8530E-02,3.8820E-02,3.9130E-02,3.9320E-02,3.9430E-02,3.9500E-02,3.9620E-02,3.9670E-02,3.9770E-02,3.9820E-02,3.9870E-02,3.9890E-02,3.9910E-02,3.9920E-02,3.9940E-02,3.9940E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
