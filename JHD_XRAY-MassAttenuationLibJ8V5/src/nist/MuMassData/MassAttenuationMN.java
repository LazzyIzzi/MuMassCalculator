package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationMN {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,6.53900E-03,6.53910E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {4.2400E+00,3.9480E+00,3.6460E+00,3.0910E+00,2.6130E+00,2.2130E+00,1.8840E+00,1.7350E+00,1.7350E+00,1.4070E+00,1.0990E+00,6.8780E-01,4.7640E-01,2.6130E-01,1.6480E-01,1.1430E-01,8.4350E-02,5.1450E-02,3.4540E-02,1.6310E-02,9.4520E-03,4.3220E-03,2.4620E-03,1.5850E-03,1.1050E-03,6.2390E-04,4.0010E-04,3.8310E-04,2.5640E-04,1.7810E-04,1.0030E-04,9.5990E-05,4.4580E-05,2.5080E-05,1.6050E-05,1.1150E-05,8.1910E-06,6.2710E-06,4.9550E-06,4.0130E-06,3.3170E-06,2.7880E-06,2.3750E-06,2.0480E-06,1.7830E-06,1.5680E-06,1.2390E-06,1.0030E-06,8.2930E-07,6.9680E-07,5.9370E-07,5.1190E-07,4.4590E-07,2.5080E-07,1.6060E-07,1.1150E-07,6.2710E-08,4.0130E-08,1.7830E-08,1.0030E-08,4.4590E-09,2.5080E-09,1.6060E-09,1.1150E-09,6.2710E-10,4.0130E-10,1.7830E-10,1.0030E-10,4.4590E-11,2.5080E-11,1.6060E-11,1.1150E-11,6.2710E-12,4.0130E-12,1.7830E-12,1.0030E-12,4.4590E-13,2.5080E-13,1.6060E-13,1.1150E-13,6.2710E-14,4.0130E-14};
	final static double[] Incoh= {9.2360E-03,1.5910E-02,2.1900E-02,3.2760E-02,4.2790E-02,5.1910E-02,6.0140E-02,6.4200E-02,6.4200E-02,7.4140E-02,8.5230E-02,1.0360E-01,1.1480E-01,1.2670E-01,1.3150E-01,1.3300E-01,1.3300E-01,1.3060E-01,1.2700E-01,1.1750E-01,1.0900E-01,9.5730E-02,8.6150E-02,7.8850E-02,7.3050E-02,6.4270E-02,5.7820E-02,5.7220E-02,5.1730E-02,4.7040E-02,4.0150E-02,3.9650E-02,3.1590E-02,2.6360E-02,2.2770E-02,2.0130E-02,1.8090E-02,1.6450E-02,1.5130E-02,1.4020E-02,1.3080E-02,1.2270E-02,1.1550E-02,1.0930E-02,1.0380E-02,9.8810E-03,9.0300E-03,8.3280E-03,7.7360E-03,7.2280E-03,6.7870E-03,6.4030E-03,6.0630E-03,4.8180E-03,4.0220E-03,3.4650E-03,2.7330E-03,2.2680E-03,1.6150E-03,1.2660E-03,8.9770E-04,7.0300E-04,5.8200E-04,4.9820E-04,3.8910E-04,3.2020E-04,2.2360E-04,1.7310E-04,1.2040E-04,9.2880E-05,7.5930E-05,6.4390E-05,4.9610E-05,4.0500E-05,2.8000E-05,2.1520E-05,1.4840E-05,1.1390E-05,9.2790E-06,7.8430E-06,6.0150E-06,4.8930E-06};
	final static double[] PE= {8.0890E+03,2.9790E+03,1.4170E+03,4.8200E+02,2.2020E+02,1.1890E+02,7.1560E+01,5.6230E+01,4.5020E+02,2.7200E+02,1.5020E+02,4.9480E+01,2.1930E+01,6.7530E+00,2.8730E+00,1.4670E+00,8.4240E-01,3.4860E-01,1.7510E-01,5.0020E-02,2.0710E-02,6.1670E-03,2.7200E-03,1.4920E-03,9.3850E-04,4.7780E-04,2.9730E-04,2.8200E-04,1.9070E-04,1.3760E-04,8.4930E-05,8.2040E-05,4.6160E-05,3.1120E-05,2.3320E-05,1.8580E-05,1.5410E-05,1.3150E-05,1.1470E-05,1.0160E-05,9.1180E-06,8.2670E-06,7.5610E-06,6.9650E-06,6.4550E-06,6.0160E-06,5.2920E-06,4.7240E-06,4.2660E-06,3.8880E-06,3.5720E-06,3.3030E-06,3.0710E-06,2.2750E-06,1.8060E-06,1.4970E-06,1.1160E-06,8.8910E-07,5.8970E-07,4.4110E-07,2.9330E-07,2.1970E-07,1.7560E-07,1.4620E-07,1.0960E-07,8.7670E-08,5.8410E-08,4.3800E-08,2.9190E-08,2.1890E-08,1.7520E-08,1.4590E-08,1.0940E-08,8.7540E-09,5.8360E-09,4.3770E-09,2.9180E-09,2.1880E-09,1.7510E-09,1.4590E-09,1.0940E-09,8.7530E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,6.5190E-05,3.3360E-04,1.2780E-03,1.3760E-03,3.5460E-03,5.6700E-03,7.5490E-03,9.2230E-03,1.0710E-02,1.2050E-02,1.3260E-02,1.4360E-02,1.5360E-02,1.6270E-02,1.7110E-02,1.7900E-02,1.8620E-02,1.9310E-02,2.0580E-02,2.1700E-02,2.2710E-02,2.3640E-02,2.4490E-02,2.5270E-02,2.5990E-02,2.8920E-02,3.1120E-02,3.2830E-02,3.5380E-02,3.7210E-02,4.0160E-02,4.1950E-02,4.4040E-02,4.5260E-02,4.6060E-02,4.6630E-02,4.7400E-02,4.7900E-02,4.8630E-02,4.9020E-02,4.9450E-02,4.9680E-02,4.9820E-02,4.9920E-02,5.0050E-02,5.0140E-02,5.0250E-02,5.0310E-02,5.0380E-02,5.0410E-02,5.0430E-02,5.0450E-02,5.0470E-02,5.0480E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1060E-05,4.5140E-05,8.9920E-05,1.3800E-04,1.8600E-04,2.3260E-04,2.7720E-04,3.1960E-04,3.5990E-04,3.9780E-04,4.3360E-04,4.6770E-04,5.0020E-04,5.3100E-04,5.8810E-04,6.4030E-04,6.8820E-04,7.3240E-04,7.7310E-04,8.1120E-04,8.4660E-04,9.9430E-04,1.1080E-03,1.1980E-03,1.3360E-03,1.4380E-03,1.6090E-03,1.7190E-03,1.8540E-03,1.9360E-03,1.9930E-03,2.0340E-03,2.0940E-03,2.1320E-03,2.1910E-03,2.2250E-03,2.2610E-03,2.2830E-03,2.2960E-03,2.3060E-03,2.3180E-03,2.3270E-03,2.3380E-03,2.3450E-03,2.3500E-03,2.3550E-03,2.3570E-03,2.3580E-03,2.3600E-03,2.3610E-03};
	final static double[] TotAttn= {8.0930E+03,2.9830E+03,1.4210E+03,4.8510E+02,2.2290E+02,1.2120E+02,7.3500E+01,5.8030E+01,4.5200E+02,2.7340E+02,1.5140E+02,5.0270E+01,2.2530E+01,7.1420E+00,3.1690E+00,1.7140E+00,1.0600E+00,5.3060E-01,3.3660E-01,1.8380E-01,1.3910E-01,1.0620E-01,9.1330E-02,8.1920E-02,7.5090E-02,6.5370E-02,5.8520E-02,5.7890E-02,5.2240E-02,4.7690E-02,4.1620E-02,4.1200E-02,3.5240E-02,3.2130E-02,3.0450E-02,2.9520E-02,2.9010E-02,2.8750E-02,2.8680E-02,2.8710E-02,2.8810E-02,2.8940E-02,2.9110E-02,2.9310E-02,2.9510E-02,2.9730E-02,3.0200E-02,3.0680E-02,3.1140E-02,3.1610E-02,3.2050E-02,3.2480E-02,3.2900E-02,3.4730E-02,3.6250E-02,3.7490E-02,3.9450E-02,4.0920E-02,4.3390E-02,4.4940E-02,4.6800E-02,4.7900E-02,4.8640E-02,4.9160E-02,4.9880E-02,5.0350E-02,5.1040E-02,5.1420E-02,5.1830E-02,5.2050E-02,5.2190E-02,5.2290E-02,5.2420E-02,5.2510E-02,5.2610E-02,5.2680E-02,5.2740E-02,5.2780E-02,5.2800E-02,5.2810E-02,5.2830E-02,5.2840E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
