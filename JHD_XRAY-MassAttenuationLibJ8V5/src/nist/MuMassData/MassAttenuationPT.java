package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationPT {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.12200E-03,2.12201E-03,2.16100E-03,2.20200E-03,2.20201E-03,2.41300E-03,
			2.64500E-03,2.64501E-03,3.00000E-03,3.02600E-03,3.02601E-03,3.15800E-03,3.29600E-03,3.29610E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.15600E-02,1.15601E-02,1.23900E-02,1.32700E-02,1.32701E-02,1.35700E-02,1.38800E-02,
			1.38801E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,7.83900E-02,7.83910E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.2060E+01,1.1600E+01,1.1060E+01,1.0920E+01,1.0920E+01,1.0870E+01,1.0830E+01,1.0830E+01,1.0590E+01,1.0330E+01,1.0330E+01,9.9220E+00,9.8910E+00,9.8910E+00,9.7420E+00,9.5910E+00,9.5910E+00,8.8410E+00,7.8870E+00,7.0600E+00,5.7390E+00,4.7420E+00,4.1240E+00,4.1240E+00,3.8380E+00,3.5620E+00,3.5620E+00,3.4770E+00,3.3930E+00,3.3930E+00,3.1090E+00,2.1910E+00,1.2940E+00,8.5910E-01,6.0910E-01,4.5560E-01,2.9620E-01,2.9620E-01,2.8650E-01,1.9740E-01,9.6900E-02,5.7760E-02,2.7510E-02,1.6040E-02,1.0480E-02,7.3810E-03,4.2260E-03,2.7320E-03,2.6170E-03,1.7620E-03,1.2290E-03,6.9520E-04,6.6560E-04,3.1020E-04,1.7480E-04,1.1190E-04,7.7760E-05,5.7140E-05,4.3770E-05,3.4570E-05,2.8010E-05,2.3150E-05,1.9460E-05,1.6580E-05,1.4300E-05,1.2450E-05,1.0950E-05,8.6500E-06,7.0040E-06,5.7880E-06,4.8650E-06,4.1460E-06,3.5750E-06,3.1150E-06,1.7520E-06,1.1210E-06,7.7850E-07,4.3770E-07,2.8020E-07,1.2460E-07,7.0040E-08,3.1150E-08,1.7520E-08,1.1210E-08,7.7850E-09,4.3770E-09,2.8020E-09,1.2460E-09,7.0040E-10,3.1150E-10,1.7520E-10,1.1210E-10,7.7850E-11,4.3770E-11,2.8020E-11,1.2460E-11,7.0040E-12,3.1150E-12,1.7520E-12,1.1210E-12,7.7850E-13,4.3770E-13,2.8020E-13};
	final static double[] Incoh= {3.3680E-03,6.2110E-03,9.1280E-03,9.8350E-03,9.8350E-03,1.0070E-02,1.0300E-02,1.0300E-02,1.1510E-02,1.2820E-02,1.2820E-02,1.4810E-02,1.4950E-02,1.4950E-02,1.5670E-02,1.6420E-02,1.6420E-02,2.0170E-02,2.5300E-02,3.0190E-02,3.9050E-02,4.6490E-02,5.1460E-02,5.1460E-02,5.3780E-02,5.6120E-02,5.6120E-02,5.6910E-02,5.7700E-02,5.7700E-02,6.0440E-02,7.0600E-02,8.4370E-02,9.2330E-02,9.6810E-02,9.9280E-02,1.0100E-01,1.0100E-01,1.0100E-01,1.0060E-01,9.6280E-02,9.0910E-02,8.1370E-02,7.3960E-02,6.8130E-02,6.3350E-02,5.5970E-02,5.0500E-02,4.9980E-02,4.5260E-02,4.1180E-02,3.5190E-02,3.4760E-02,2.7720E-02,2.3140E-02,1.9990E-02,1.7670E-02,1.5880E-02,1.4460E-02,1.3290E-02,1.2310E-02,1.1490E-02,1.0770E-02,1.0150E-02,9.6010E-03,9.1160E-03,8.6810E-03,7.9340E-03,7.3160E-03,6.7950E-03,6.3500E-03,5.9640E-03,5.6250E-03,5.3280E-03,4.2320E-03,3.5350E-03,3.0440E-03,2.4010E-03,1.9930E-03,1.4190E-03,1.1130E-03,7.8870E-04,6.1770E-04,5.1120E-04,4.3770E-04,3.4200E-04,2.8130E-04,1.9650E-04,1.5200E-04,1.0570E-04,8.1590E-05,6.6710E-05,5.6580E-05,4.3590E-05,3.5590E-05,2.4590E-05,1.8910E-05,1.3040E-05,1.0010E-05,8.1530E-06,6.8900E-06,5.2850E-06,4.3000E-06};
	final static double[] PE= {4.4210E+03,1.9750E+03,1.0690E+03,9.3970E+02,1.0190E+03,1.5290E+03,2.2930E+03,2.4410E+03,2.3660E+03,2.2950E+03,2.6510E+03,1.9550E+03,1.9130E+03,2.0310E+03,1.8370E+03,1.6610E+03,1.7320E+03,1.0910E+03,6.3220E+02,4.0100E+02,1.9290E+02,1.0840E+02,7.4270E+01,1.9050E+02,1.5820E+02,1.3130E+02,1.8180E+02,1.7220E+02,1.6310E+02,1.8860E+02,1.5460E+02,7.3470E+01,2.5040E+01,1.1500E+01,6.2480E+00,3.7850E+00,1.8060E+00,8.9830E+00,8.3440E+00,4.6950E+00,1.6020E+00,7.4090E-01,2.5360E-01,1.2180E-01,7.0600E-02,4.6090E-02,2.4370E-02,1.5330E-02,1.4680E-02,9.9000E-03,7.0540E-03,4.2690E-03,4.1150E-03,2.2350E-03,1.4650E-03,1.0750E-03,8.4310E-04,6.9090E-04,5.8380E-04,5.0470E-04,4.4420E-04,3.9640E-04,3.5750E-04,3.2570E-04,2.9890E-04,2.7610E-04,2.5650E-04,2.2450E-04,1.9960E-04,1.7960E-04,1.6330E-04,1.4960E-04,1.3810E-04,1.2810E-04,9.4280E-05,7.4520E-05,6.1620E-05,4.5750E-05,3.6400E-05,2.4060E-05,1.7970E-05,1.1930E-05,8.9310E-06,7.1370E-06,5.9420E-06,4.4510E-06,3.5590E-06,2.3710E-06,1.7770E-06,1.1840E-06,8.8810E-07,7.1030E-07,5.9210E-07,4.4390E-07,3.5500E-07,2.3670E-07,1.7750E-07,1.1840E-07,8.8750E-08,7.1000E-08,5.9180E-08,4.4390E-08,3.5500E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {4.4330E+03,1.9860E+03,1.0800E+03,9.5060E+02,1.0300E+03,1.5390E+03,2.3040E+03,2.4520E+03,2.3770E+03,2.3050E+03,2.6610E+03,1.9650E+03,1.9230E+03,2.0410E+03,1.8460E+03,1.6700E+03,1.7420E+03,1.1000E+03,6.4010E+02,4.0810E+02,1.9870E+02,1.1320E+02,7.8450E+01,1.9460E+02,1.6200E+02,1.3490E+02,1.8540E+02,1.7580E+02,1.6660E+02,1.9210E+02,1.5780E+02,7.5730E+01,2.6410E+01,1.2450E+01,6.9540E+00,4.3400E+00,2.2030E+00,9.3800E+00,8.7320E+00,4.9930E+00,1.7950E+00,8.8960E-01,3.6240E-01,2.1180E-01,1.4920E-01,1.1680E-01,8.4560E-02,6.8570E-02,6.7270E-02,5.7270E-02,5.1120E-02,4.5220E-02,4.4910E-02,4.1600E-02,4.1250E-02,4.1960E-02,4.3100E-02,4.4430E-02,4.5840E-02,4.7290E-02,4.8720E-02,5.0130E-02,5.1500E-02,5.2850E-02,5.4150E-02,5.5370E-02,5.6540E-02,5.8680E-02,6.0640E-02,6.2490E-02,6.4190E-02,6.5740E-02,6.7210E-02,6.8560E-02,7.4250E-02,7.8590E-02,8.2020E-02,8.7140E-02,9.0780E-02,9.6620E-02,1.0010E-01,1.0420E-01,1.0660E-01,1.0810E-01,1.0920E-01,1.1070E-01,1.1170E-01,1.1310E-01,1.1380E-01,1.1470E-01,1.1510E-01,1.1540E-01,1.1560E-01,1.1580E-01,1.1600E-01,1.1620E-01,1.1630E-01,1.1650E-01,1.1650E-01,1.1660E-01,1.1660E-01,1.1660E-01,1.1670E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
