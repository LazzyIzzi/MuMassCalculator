package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTH {

	final static double[] MeV= {1.00000E-03,1.08100E-03,1.16800E-03,1.16801E-03,1.24600E-03,1.32900E-03,1.32901E-03,1.50000E-03,2.00000E-03,
			3.00000E-03,3.33200E-03,3.33210E-03,3.41000E-03,3.49100E-03,3.49110E-03,4.00000E-03,4.04600E-03,4.04610E-03,4.42100E-03,
			4.83000E-03,4.83010E-03,5.00000E-03,5.18200E-03,5.18210E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,1.63000E-02,
			1.63001E-02,1.79200E-02,1.96900E-02,1.96901E-02,2.00000E-02,2.04700E-02,2.04701E-02,3.00000E-02,4.00000E-02,5.00000E-02,
			6.00000E-02,8.00000E-02,1.00000E-01,1.09700E-01,1.09701E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,
			6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,
			5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,
			1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,
			5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,
			8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,
			1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.3270E+01,1.3170E+01,1.3060E+01,1.3060E+01,1.2960E+01,1.2860E+01,1.2860E+01,1.2630E+01,1.1960E+01,1.0710E+01,1.0320E+01,1.0320E+01,1.0230E+01,1.0140E+01,1.0140E+01,9.5900E+00,9.5430E+00,9.5430E+00,9.1670E+00,8.7770E+00,8.7770E+00,8.6240E+00,8.4610E+00,8.4610E+00,7.7890E+00,6.4260E+00,5.3780E+00,3.6390E+00,3.3220E+00,3.3220E+00,2.9800E+00,2.6630E+00,2.6630E+00,2.6130E+00,2.5390E+00,2.5390E+00,1.5390E+00,1.0340E+00,7.4410E-01,5.5900E-01,3.5110E-01,2.4350E-01,2.0860E-01,2.0860E-01,1.2140E-01,7.2670E-02,3.4830E-02,2.0470E-02,1.3460E-02,9.5140E-03,5.4740E-03,3.5500E-03,3.4020E-03,2.2970E-03,1.6060E-03,9.1040E-04,8.7230E-04,4.0750E-04,2.2970E-04,1.4720E-04,1.0230E-04,7.5210E-05,5.7590E-05,4.5520E-05,3.6880E-05,3.0470E-05,2.5610E-05,2.1820E-05,1.8820E-05,1.6390E-05,1.4410E-05,1.1390E-05,9.2240E-06,7.6220E-06,6.4050E-06,5.4580E-06,4.7050E-06,4.1010E-06,2.3060E-06,1.4760E-06,1.0250E-06,5.7640E-07,3.6910E-07,1.6400E-07,9.2240E-08,4.1010E-08,2.3060E-08,1.4760E-08,1.0250E-08,5.7640E-09,3.6910E-09,1.6400E-09,9.2240E-10,4.1010E-10,2.3060E-10,1.4760E-10,1.0250E-10,5.7640E-11,3.6910E-11,1.6400E-11,9.2240E-12,4.1010E-12,2.3060E-12,1.4760E-12,1.0250E-12,5.7640E-13,3.6910E-13};
	final static double[] Incoh= {4.8070E-03,5.3210E-03,5.8710E-03,5.8710E-03,6.3430E-03,6.8410E-03,6.8410E-03,7.8850E-03,1.0860E-02,1.6560E-02,1.8370E-02,1.8370E-02,1.8800E-02,1.9220E-02,1.9220E-02,2.1860E-02,2.2090E-02,2.2090E-02,2.3930E-02,2.5870E-02,2.5870E-02,2.6650E-02,2.7460E-02,2.7460E-02,3.0880E-02,3.8310E-02,4.4820E-02,5.7820E-02,6.0500E-02,6.0500E-02,6.3510E-02,6.6440E-02,6.6440E-02,6.6910E-02,6.7630E-02,6.7630E-02,7.9050E-02,8.6550E-02,9.1120E-02,9.3790E-02,9.5850E-02,9.5740E-02,9.5300E-02,9.5300E-02,9.2110E-02,8.7280E-02,7.8400E-02,7.1400E-02,6.5820E-02,6.1250E-02,5.4190E-02,4.8900E-02,4.8380E-02,4.3830E-02,3.9920E-02,3.4130E-02,3.3710E-02,2.6890E-02,2.2440E-02,1.9390E-02,1.7140E-02,1.5410E-02,1.4020E-02,1.2890E-02,1.1940E-02,1.1140E-02,1.0450E-02,9.8440E-03,9.3120E-03,8.8420E-03,8.4190E-03,7.6950E-03,7.0980E-03,6.5920E-03,6.1610E-03,5.7850E-03,5.4580E-03,5.1670E-03,4.1060E-03,3.4280E-03,2.9530E-03,2.3290E-03,1.9330E-03,1.3770E-03,1.0790E-03,7.6510E-04,5.9930E-04,4.9600E-04,4.2460E-04,3.3170E-04,2.7280E-04,1.9060E-04,1.4750E-04,1.0250E-04,7.9160E-05,6.4730E-05,5.4890E-05,4.2280E-05,3.4520E-05,2.3860E-05,1.8340E-05,1.2650E-05,9.7120E-06,7.9080E-06,6.6860E-06,5.1260E-06,4.1710E-06};
	final static double[] PE= {6.6000E+03,5.7240E+03,4.9650E+03,5.0350E+03,4.4460E+03,3.9270E+03,4.0050E+03,3.1480E+03,1.7300E+03,7.0720E+02,5.5670E+02,1.3830E+03,1.2970E+03,1.2150E+03,1.7390E+03,1.2430E+03,1.2080E+03,1.4050E+03,1.1260E+03,9.0160E+02,9.5660E+02,8.7900E+02,8.0450E+02,8.3930E+02,5.8680E+02,2.8730E+02,1.6350E+02,5.7720E+01,4.6530E+01,1.1220E+02,8.6780E+01,6.7120E+01,9.5980E+01,9.0990E+01,8.5910E+01,9.9190E+01,3.7290E+01,1.7530E+01,9.6830E+00,5.9380E+00,2.7300E+00,1.4910E+00,1.1610E+00,5.0320E+00,2.2580E+00,1.0740E+00,3.8070E-01,1.8710E-01,1.1020E-01,7.2720E-02,3.8960E-02,2.4640E-02,2.3600E-02,1.5950E-02,1.1340E-02,6.8520E-03,6.6050E-03,3.5710E-03,2.3320E-03,1.7060E-03,1.3350E-03,1.0910E-03,9.2110E-04,7.9520E-04,6.9890E-04,6.2310E-04,5.6160E-04,5.1130E-04,4.6870E-04,4.3290E-04,4.0200E-04,3.5170E-04,3.1220E-04,2.8080E-04,2.5520E-04,2.3370E-04,2.1560E-04,2.0000E-04,1.4700E-04,1.1610E-04,9.5950E-05,7.1220E-05,5.6600E-05,3.7420E-05,2.7930E-05,1.8540E-05,1.3880E-05,1.1090E-05,9.2320E-06,6.9170E-06,5.5280E-06,3.6830E-06,2.7610E-06,1.8400E-06,1.3800E-06,1.1040E-06,9.1950E-07,6.8960E-07,5.5150E-07,3.6780E-07,2.7590E-07,1.8380E-07,1.3790E-07,1.1030E-07,9.1930E-08,6.8930E-08,5.5150E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {6.6130E+03,5.7370E+03,4.9780E+03,5.0480E+03,4.4590E+03,3.9400E+03,4.0170E+03,3.1610E+03,1.7410E+03,7.1790E+02,5.6700E+02,1.3940E+03,1.3070E+03,1.2260E+03,1.7490E+03,1.2530E+03,1.2170E+03,1.4150E+03,1.1350E+03,9.1040E+02,9.6540E+02,8.8770E+02,8.1300E+02,8.4780E+02,5.9460E+02,2.9380E+02,1.6890E+02,6.1420E+01,4.9920E+01,1.1560E+02,8.9830E+01,6.9840E+01,9.8700E+01,9.3670E+01,8.8510E+01,1.0180E+02,3.8910E+01,1.8650E+01,1.0520E+01,6.5910E+00,3.1770E+00,1.8300E+00,1.4650E+00,5.3360E+00,2.4720E+00,1.2340E+00,4.9400E-01,2.7890E-01,1.8950E-01,1.4350E-01,9.8620E-02,7.7090E-02,7.5380E-02,6.2510E-02,5.4980E-02,4.8120E-02,4.7770E-02,4.3960E-02,4.3470E-02,4.4210E-02,4.5420E-02,4.6830E-02,4.8370E-02,4.9940E-02,5.1490E-02,5.3020E-02,5.4530E-02,5.5980E-02,5.7370E-02,5.8710E-02,5.9990E-02,6.2320E-02,6.4470E-02,6.6490E-02,6.8350E-02,7.0060E-02,7.1670E-02,7.3150E-02,7.9310E-02,8.4030E-02,8.7730E-02,9.3280E-02,9.7220E-02,1.0350E-01,1.0730E-01,1.1180E-01,1.1430E-01,1.1600E-01,1.1730E-01,1.1890E-01,1.1990E-01,1.2150E-01,1.2230E-01,1.2320E-01,1.2370E-01,1.2400E-01,1.2420E-01,1.2450E-01,1.2460E-01,1.2490E-01,1.2500E-01,1.2520E-01,1.2530E-01,1.2530E-01,1.2530E-01,1.2540E-01,1.2540E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
