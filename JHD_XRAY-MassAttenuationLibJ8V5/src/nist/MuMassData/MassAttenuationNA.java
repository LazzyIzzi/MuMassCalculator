package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationNA {

	final static double[] MeV= {1.00000E-03,1.14200E-03,1.30500E-03,1.30501E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.9190E+00,1.9090E+00,1.8980E+00,1.8980E+00,1.7750E+00,1.6410E+00,1.4030E+00,1.1850E+00,9.9250E-01,8.3060E-01,5.9310E-01,4.4090E-01,2.4700E-01,1.6120E-01,8.5970E-02,5.3250E-02,3.6070E-02,2.6000E-02,1.5330E-02,1.0090E-02,4.6420E-03,2.6480E-03,1.1910E-03,6.7270E-04,4.3140E-04,2.9990E-04,1.6890E-04,1.0810E-04,1.0350E-04,6.9230E-05,4.8090E-05,2.7060E-05,2.5900E-05,1.2020E-05,6.7640E-06,4.3300E-06,3.0070E-06,2.2090E-06,1.6910E-06,1.3360E-06,1.0820E-06,8.9460E-07,7.5150E-07,6.4050E-07,5.5220E-07,4.8090E-07,4.2280E-07,3.3400E-07,2.7060E-07,2.2360E-07,1.8790E-07,1.6010E-07,1.3800E-07,1.2030E-07,6.7640E-08,4.3300E-08,3.0070E-08,1.6910E-08,1.0820E-08,4.8090E-09,2.7060E-09,1.2020E-09,6.7640E-10,4.3270E-10,3.0070E-10,1.6910E-10,1.0820E-10,4.8090E-11,2.7060E-11,1.2020E-11,6.7640E-12,4.3270E-12,3.0070E-12,1.6910E-12,1.0820E-12,4.8090E-13,2.7060E-13,1.2020E-13,6.7640E-14,4.3270E-14,3.0070E-14,1.6910E-14,1.0820E-14};
	final static double[] Incoh= {1.2700E-02,1.3260E-02,1.3840E-02,1.3840E-02,1.9940E-02,2.6380E-02,3.9480E-02,5.2840E-02,6.5570E-02,7.7170E-02,9.6240E-02,1.1010E-01,1.3000E-01,1.3970E-01,1.4840E-01,1.5090E-01,1.5060E-01,1.4890E-01,1.4400E-01,1.3860E-01,1.2620E-01,1.1620E-01,1.0150E-01,9.1050E-02,8.3220E-02,7.7010E-02,6.7690E-02,6.0880E-02,6.0220E-02,5.4430E-02,4.9480E-02,4.2230E-02,4.1700E-02,3.3240E-02,2.7710E-02,2.3940E-02,2.1160E-02,1.9020E-02,1.7310E-02,1.5910E-02,1.4740E-02,1.3750E-02,1.2890E-02,1.2150E-02,1.1490E-02,1.0910E-02,1.0390E-02,9.4960E-03,8.7570E-03,8.1340E-03,7.5990E-03,7.1350E-03,6.7320E-03,6.3760E-03,5.0660E-03,4.2280E-03,3.6440E-03,2.8740E-03,2.3850E-03,1.6980E-03,1.3310E-03,9.4380E-04,7.3920E-04,6.1190E-04,5.2390E-04,4.0920E-04,3.3660E-04,2.3510E-04,1.8190E-04,1.2650E-04,9.7650E-05,7.9840E-05,6.7710E-05,5.2150E-05,4.2590E-05,2.9440E-05,2.2630E-05,1.5600E-05,1.1980E-05,9.7550E-06,8.2460E-06,6.3230E-06,5.1450E-06};
	final static double[] PE= {6.5230E+02,5.9390E+02,5.4120E+02,6.4330E+03,3.1930E+03,1.5190E+03,5.0560E+02,2.2490E+02,1.1830E+02,6.9390E+01,2.9500E+01,1.5020E+01,4.3170E+00,1.7560E+00,4.8540E-01,1.9270E-01,9.3700E-02,5.1870E-02,2.0320E-02,9.8260E-03,2.6380E-03,1.0530E-03,2.9990E-04,1.2920E-04,6.9890E-05,4.3590E-05,2.2030E-05,1.3690E-05,1.2870E-05,8.7310E-06,6.3290E-06,3.9630E-06,3.8320E-06,2.2000E-06,1.5040E-06,1.1380E-06,9.1320E-07,7.6170E-07,6.5300E-07,5.7130E-07,5.0740E-07,4.5660E-07,4.1470E-07,3.8010E-07,3.5050E-07,3.2530E-07,3.0360E-07,2.6740E-07,2.3920E-07,2.1630E-07,1.9740E-07,1.8150E-07,1.6800E-07,1.5630E-07,1.1600E-07,9.2280E-08,7.6590E-08,5.7160E-08,4.5580E-08,3.0260E-08,2.2650E-08,1.5070E-08,1.1290E-08,9.0240E-09,7.5180E-09,5.6350E-09,4.5080E-09,3.0050E-09,2.2520E-09,1.5010E-09,1.1260E-09,9.0060E-10,7.5050E-10,5.6270E-10,4.5030E-10,3.0020E-10,2.2510E-10,1.5000E-10,1.1250E-10,9.0030E-11,7.5020E-11,5.6270E-11,4.5000E-11};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,2.5850E-05,1.4210E-04,5.6400E-04,6.0800E-04,1.6080E-03,2.6040E-03,3.4920E-03,4.2850E-03,4.9930E-03,5.6320E-03,6.2080E-03,6.7350E-03,7.2110E-03,7.6490E-03,8.0550E-03,8.4320E-03,8.7860E-03,9.1160E-03,9.7240E-03,1.0270E-02,1.0760E-02,1.1210E-02,1.1620E-02,1.2000E-02,1.2350E-02,1.3790E-02,1.4880E-02,1.5740E-02,1.7030E-02,1.7960E-02,1.9470E-02,2.0390E-02,2.1470E-02,2.2090E-02,2.2510E-02,2.2800E-02,2.3200E-02,2.3460E-02,2.3830E-02,2.4040E-02,2.4260E-02,2.4380E-02,2.4460E-02,2.4510E-02,2.4580E-02,2.4620E-02,2.4690E-02,2.4720E-02,2.4750E-02,2.4770E-02,2.4780E-02,2.4790E-02,2.4800E-02,2.4800E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1630E-05,4.7470E-05,9.4590E-05,1.4530E-04,1.9590E-04,2.4500E-04,2.9210E-04,3.3690E-04,3.7960E-04,4.1990E-04,4.5790E-04,4.9400E-04,5.2860E-04,5.6140E-04,6.2240E-04,6.7820E-04,7.2950E-04,7.7690E-04,8.2120E-04,8.6210E-04,9.0060E-04,1.0620E-03,1.1870E-03,1.2870E-03,1.4430E-03,1.5590E-03,1.7560E-03,1.8820E-03,2.0410E-03,2.1380E-03,2.2050E-03,2.2540E-03,2.3230E-03,2.3700E-03,2.4410E-03,2.4810E-03,2.5260E-03,2.5520E-03,2.5690E-03,2.5800E-03,2.5960E-03,2.6060E-03,2.6190E-03,2.6270E-03,2.6350E-03,2.6400E-03,2.6430E-03,2.6430E-03,2.6460E-03,2.6480E-03};
	final static double[] TotAttn= {6.5420E+02,5.9580E+02,5.4310E+02,6.4350E+03,3.1950E+03,1.5210E+03,5.0700E+02,2.2610E+02,1.1940E+02,7.0300E+01,3.0180E+01,1.5570E+01,4.6940E+00,2.0570E+00,7.1980E-01,3.9690E-01,2.8040E-01,2.2680E-01,1.7960E-01,1.5850E-01,1.3350E-01,1.1990E-01,1.0290E-01,9.1860E-02,8.3720E-02,7.7360E-02,6.7880E-02,6.1000E-02,6.0340E-02,5.4540E-02,4.9680E-02,4.2820E-02,4.2340E-02,3.4880E-02,3.0370E-02,2.7530E-02,2.5590E-02,2.4210E-02,2.3190E-02,2.2410E-02,2.1810E-02,2.1340E-02,2.0960E-02,2.0660E-02,2.0420E-02,2.0230E-02,2.0070E-02,1.9840E-02,1.9700E-02,1.9620E-02,1.9590E-02,1.9570E-02,1.9590E-02,1.9620E-02,1.9920E-02,2.0290E-02,2.0670E-02,2.1350E-02,2.1910E-02,2.2930E-02,2.3600E-02,2.4450E-02,2.4970E-02,2.5320E-02,2.5580E-02,2.5930E-02,2.6170E-02,2.6510E-02,2.6700E-02,2.6920E-02,2.7030E-02,2.7110E-02,2.7160E-02,2.7230E-02,2.7270E-02,2.7330E-02,2.7370E-02,2.7400E-02,2.7420E-02,2.7430E-02,2.7440E-02,2.7450E-02,2.7460E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
