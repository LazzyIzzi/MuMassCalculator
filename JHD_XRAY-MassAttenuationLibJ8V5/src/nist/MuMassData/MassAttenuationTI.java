package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTI {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,4.96600E-03,4.96610E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {3.6920E+00,3.3870E+00,3.0930E+00,2.5810E+00,2.1570E+00,1.8240E+00,1.8240E+00,1.8140E+00,1.5410E+00,1.1600E+00,9.2030E-01,5.8540E-01,4.0060E-01,2.1700E-01,1.3710E-01,9.5280E-02,7.0250E-02,4.2640E-02,2.8500E-02,1.3400E-02,7.7490E-03,3.5340E-03,2.0100E-03,1.2930E-03,9.0070E-04,5.0830E-04,3.2580E-04,3.1190E-04,2.0870E-04,1.4500E-04,8.1600E-05,7.8130E-05,3.6290E-05,2.0410E-05,1.3070E-05,9.0730E-06,6.6660E-06,5.1040E-06,4.0320E-06,3.2660E-06,2.6990E-06,2.2680E-06,1.9330E-06,1.6670E-06,1.4510E-06,1.2750E-06,1.0080E-06,8.1670E-07,6.7490E-07,5.6710E-07,4.8320E-07,4.1670E-07,3.6300E-07,2.0410E-07,1.3070E-07,9.0730E-08,5.1040E-08,3.2660E-08,1.4510E-08,8.1650E-09,3.6290E-09,2.0410E-09,1.3070E-09,9.0730E-10,5.1040E-10,3.2660E-10,1.4510E-10,8.1650E-11,3.6290E-11,2.0410E-11,1.3070E-11,9.0730E-12,5.1040E-12,3.2660E-12,1.4510E-12,8.1650E-13,3.6290E-13,2.0410E-13,1.3070E-13,9.0730E-14,5.1040E-14,3.2660E-14};
	final static double[] Incoh= {1.1820E-02,1.9500E-02,2.6190E-02,3.8370E-02,4.9400E-02,5.8840E-02,5.8840E-02,5.9140E-02,6.7690E-02,8.1580E-02,9.1930E-02,1.0900E-01,1.1960E-01,1.3080E-01,1.3500E-01,1.3610E-01,1.3570E-01,1.3310E-01,1.2920E-01,1.1920E-01,1.1040E-01,9.6830E-02,8.7090E-02,7.9680E-02,7.3810E-02,6.4910E-02,5.8400E-02,5.7780E-02,5.2250E-02,4.7490E-02,4.0540E-02,4.0050E-02,3.1910E-02,2.6610E-02,2.2990E-02,2.0310E-02,1.8260E-02,1.6610E-02,1.5280E-02,1.4150E-02,1.3210E-02,1.2380E-02,1.1660E-02,1.1040E-02,1.0480E-02,9.9770E-03,9.1190E-03,8.4080E-03,7.8110E-03,7.2990E-03,6.8540E-03,6.4650E-03,6.1210E-03,4.8650E-03,4.0600E-03,3.4990E-03,2.7600E-03,2.2900E-03,1.6310E-03,1.2790E-03,9.0630E-04,7.0990E-04,5.8760E-04,5.0310E-04,3.9290E-04,3.2320E-04,2.2580E-04,1.7470E-04,1.2150E-04,9.3780E-05,7.6670E-05,6.5010E-05,5.0100E-05,4.0900E-05,2.8260E-05,2.1730E-05,1.4980E-05,1.1500E-05,9.3690E-06,7.9200E-06,6.0720E-06,4.9400E-06};
	final static double[] PE= {5.8650E+03,2.0930E+03,9.8290E+02,3.2970E+02,1.4950E+02,8.1920E+01,6.8590E+02,6.8200E+02,4.3080E+02,2.0110E+02,1.0970E+02,3.5180E+01,1.5330E+01,4.6240E+00,1.9410E+00,9.8210E-01,5.6010E-01,2.2950E-01,1.1440E-01,3.2290E-02,1.3270E-02,3.9180E-03,1.7190E-03,9.3980E-04,5.9010E-04,3.0000E-04,1.8650E-04,1.7680E-04,1.1970E-04,8.6420E-05,5.3470E-05,5.1660E-05,2.9180E-05,1.9720E-05,1.4800E-05,1.1810E-05,9.8070E-06,8.3780E-06,7.3080E-06,6.4790E-06,5.8160E-06,5.2760E-06,4.8270E-06,4.4470E-06,4.1230E-06,3.8420E-06,3.3820E-06,3.0200E-06,2.7280E-06,2.4870E-06,2.2850E-06,2.1130E-06,1.9660E-06,1.4560E-06,1.1570E-06,9.5920E-07,7.1490E-07,5.6980E-07,3.7800E-07,2.8270E-07,1.8800E-07,1.4090E-07,1.1260E-07,9.3790E-08,7.0300E-08,5.6220E-08,3.7460E-08,2.8090E-08,1.8720E-08,1.4040E-08,1.1230E-08,9.3580E-09,7.0180E-09,5.6150E-09,3.7430E-09,2.8070E-09,1.8720E-09,1.4040E-09,1.1230E-09,9.3550E-10,7.0170E-10,5.6130E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,5.5680E-05,2.8950E-04,1.1240E-03,1.2110E-03,3.1340E-03,5.0290E-03,6.7050E-03,8.2030E-03,9.5340E-03,1.0730E-02,1.1820E-02,1.2790E-02,1.3680E-02,1.4500E-02,1.5270E-02,1.5960E-02,1.6630E-02,1.7240E-02,1.8360E-02,1.9380E-02,2.0290E-02,2.1120E-02,2.1870E-02,2.2580E-02,2.3220E-02,2.5860E-02,2.7820E-02,2.9360E-02,3.1660E-02,3.3310E-02,3.5970E-02,3.7590E-02,3.9510E-02,4.0630E-02,4.1370E-02,4.1910E-02,4.2630E-02,4.3090E-02,4.3770E-02,4.4130E-02,4.4540E-02,4.4750E-02,4.4890E-02,4.4990E-02,4.5120E-02,4.5190E-02,4.5300E-02,4.5370E-02,4.5420E-02,4.5460E-02,4.5480E-02,4.5490E-02,4.5510E-02,4.5520E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1160E-05,4.5580E-05,9.0810E-05,1.3950E-04,1.8790E-04,2.3490E-04,2.8010E-04,3.2300E-04,3.6360E-04,4.0200E-04,4.3820E-04,4.7280E-04,5.0560E-04,5.3680E-04,5.9470E-04,6.4750E-04,6.9600E-04,7.4080E-04,7.8220E-04,8.2080E-04,8.5680E-04,1.0070E-03,1.1220E-03,1.2150E-03,1.3560E-03,1.4620E-03,1.6380E-03,1.7510E-03,1.8930E-03,1.9800E-03,2.0400E-03,2.0850E-03,2.1480E-03,2.1910E-03,2.2540E-03,2.2920E-03,2.3320E-03,2.3560E-03,2.3710E-03,2.3810E-03,2.3950E-03,2.4040E-03,2.4160E-03,2.4240E-03,2.4300E-03,2.4350E-03,2.4380E-03,2.4390E-03,2.4410E-03,2.4430E-03};
	final static double[] TotAttn= {5.8690E+03,2.0960E+03,9.8610E+02,3.3230E+02,1.5180E+02,8.3800E+01,6.8770E+02,6.8380E+02,4.3240E+02,2.0240E+02,1.1070E+02,3.5870E+01,1.5850E+01,4.9710E+00,2.2130E+00,1.2130E+00,7.6600E-01,4.0520E-01,2.7210E-01,1.6490E-01,1.3140E-01,1.0430E-01,9.0820E-02,8.1910E-02,7.5300E-02,6.5720E-02,5.8910E-02,5.8270E-02,5.2630E-02,4.8010E-02,4.1800E-02,4.1390E-02,3.5120E-02,3.1730E-02,2.9820E-02,2.8680E-02,2.8000E-02,2.7590E-02,2.7390E-02,2.7270E-02,2.7260E-02,2.7290E-02,2.7380E-02,2.7480E-02,2.7620E-02,2.7760E-02,2.8080E-02,2.8440E-02,2.8800E-02,2.9160E-02,2.9510E-02,2.9860E-02,3.0200E-02,3.1730E-02,3.3010E-02,3.4070E-02,3.5770E-02,3.7060E-02,3.9240E-02,4.0620E-02,4.2310E-02,4.3320E-02,4.4000E-02,4.4500E-02,4.5170E-02,4.5610E-02,4.6250E-02,4.6600E-02,4.6990E-02,4.7200E-02,4.7340E-02,4.7440E-02,4.7560E-02,4.7640E-02,4.7750E-02,4.7810E-02,4.7860E-02,4.7900E-02,4.7930E-02,4.7940E-02,4.7950E-02,4.7970E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
