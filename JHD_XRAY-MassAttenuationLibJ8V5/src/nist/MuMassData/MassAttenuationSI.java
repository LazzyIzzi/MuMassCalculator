package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationSI {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.83900E-03,1.83901E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {2.5280E+00,2.2860E+00,2.1210E+00,2.1210E+00,2.0480E+00,1.6690E+00,1.4040E+00,1.2080E+00,1.0510E+00,8.0390E-01,6.2230E-01,3.5850E-01,2.3410E-01,1.2550E-01,7.8860E-02,5.3990E-02,3.9170E-02,2.3240E-02,1.5370E-02,7.1250E-03,4.0850E-03,1.8440E-03,1.0430E-03,6.6960E-04,4.6570E-04,2.6250E-04,1.6800E-04,1.6090E-04,1.0760E-04,7.4750E-05,4.2050E-05,4.0270E-05,1.8690E-05,1.0520E-05,6.7310E-06,4.6740E-06,3.4350E-06,2.6290E-06,2.0770E-06,1.6830E-06,1.3910E-06,1.1690E-06,9.9580E-07,8.5850E-07,7.4790E-07,6.5720E-07,5.1930E-07,4.2070E-07,3.4760E-07,2.9200E-07,2.4890E-07,2.1460E-07,1.8700E-07,1.0520E-07,6.7310E-08,4.6740E-08,2.6290E-08,1.6830E-08,7.4770E-09,4.2070E-09,1.8690E-09,1.0520E-09,6.7310E-10,4.6740E-10,2.6290E-10,1.6830E-10,7.4770E-11,4.2070E-11,1.8690E-11,1.0520E-11,6.7310E-12,4.6740E-12,2.6290E-12,1.6830E-12,7.4770E-13,4.2070E-13,1.8690E-13,1.0520E-13,6.7310E-14,4.6740E-14,2.6290E-14,1.6830E-14};
	final static double[] Incoh= {1.3170E-02,2.3930E-02,3.0810E-02,3.0810E-02,3.3880E-02,4.9620E-02,6.1350E-02,7.1100E-02,7.9830E-02,9.5070E-02,1.0760E-01,1.2890E-01,1.4020E-01,1.5010E-01,1.5340E-01,1.5380E-01,1.5260E-01,1.4830E-01,1.4320E-01,1.3090E-01,1.2070E-01,1.0550E-01,9.4750E-02,8.6630E-02,8.0190E-02,7.0500E-02,6.3400E-02,6.2740E-02,5.6710E-02,5.1550E-02,4.4000E-02,4.3460E-02,3.4610E-02,2.8880E-02,2.4940E-02,2.2040E-02,1.9810E-02,1.8030E-02,1.6570E-02,1.5360E-02,1.4320E-02,1.3430E-02,1.2660E-02,1.1970E-02,1.1370E-02,1.0820E-02,9.8930E-03,9.1240E-03,8.4740E-03,7.9190E-03,7.4360E-03,7.0140E-03,6.6410E-03,5.2770E-03,4.4060E-03,3.7950E-03,2.9930E-03,2.4850E-03,1.7690E-03,1.3870E-03,9.8330E-04,7.7000E-04,6.3750E-04,5.4570E-04,4.2630E-04,3.5080E-04,2.4490E-04,1.8950E-04,1.3180E-04,1.0170E-04,8.3170E-05,7.0540E-05,5.4330E-05,4.4360E-05,3.0660E-05,2.3560E-05,1.6260E-05,1.2480E-05,1.0160E-05,8.5920E-06,6.5870E-06,5.3610E-06};
	final static double[] PE= {1.5670E+03,5.3330E+02,3.0710E+02,3.1910E+03,2.7750E+03,9.7670E+02,4.5140E+02,2.4380E+02,1.4580E+02,6.3790E+01,3.3150E+01,9.8480E+00,4.0890E+00,1.1610E+00,4.6870E-01,2.3070E-01,1.2880E-01,5.1200E-02,2.4980E-02,6.8060E-03,2.7360E-03,7.8820E-04,3.4090E-04,1.8490E-04,1.1560E-04,5.8540E-05,3.6390E-05,3.4330E-05,2.3260E-05,1.6840E-05,1.0500E-05,1.0160E-05,5.8000E-06,3.9520E-06,2.9830E-06,2.3890E-06,1.9900E-06,1.7050E-06,1.4900E-06,1.3230E-06,1.1890E-06,1.0800E-06,9.8890E-07,9.1210E-07,8.4630E-07,7.8930E-07,6.9540E-07,6.2160E-07,5.6180E-07,5.1250E-07,4.7110E-07,4.3590E-07,4.0570E-07,3.0100E-07,2.3930E-07,1.9850E-07,1.4810E-07,1.1810E-07,7.8370E-08,5.8640E-08,3.9020E-08,2.9230E-08,2.3370E-08,1.9470E-08,1.4590E-08,1.1670E-08,7.7750E-09,5.8300E-09,3.8850E-09,2.9140E-09,2.3310E-09,1.9430E-09,1.4570E-09,1.1660E-09,7.7710E-10,5.8280E-10,3.8850E-10,2.9140E-10,2.3310E-10,1.9420E-10,1.4570E-10,1.1650E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,3.5210E-05,1.9120E-04,7.5330E-04,8.1180E-04,2.1390E-03,3.4560E-03,4.6290E-03,5.6780E-03,6.6110E-03,7.4510E-03,8.2120E-03,8.9050E-03,9.5310E-03,1.0110E-02,1.0640E-02,1.1140E-02,1.1600E-02,1.2040E-02,1.2840E-02,1.3550E-02,1.4190E-02,1.4780E-02,1.5320E-02,1.5810E-02,1.6270E-02,1.8170E-02,1.9580E-02,2.0700E-02,2.2360E-02,2.3540E-02,2.5470E-02,2.6630E-02,2.8020E-02,2.8840E-02,2.9380E-02,2.9760E-02,3.0300E-02,3.0640E-02,3.1130E-02,3.1390E-02,3.1690E-02,3.1860E-02,3.1950E-02,3.2030E-02,3.2120E-02,3.2180E-02,3.2250E-02,3.2290E-02,3.2360E-02,3.2380E-02,3.2380E-02,3.2400E-02,3.2400E-02,3.2420E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.2110E-05,4.9450E-05,9.8530E-05,1.5130E-04,2.0400E-04,2.5520E-04,3.0430E-04,3.5100E-04,3.9520E-04,4.3700E-04,4.7670E-04,5.1440E-04,5.5020E-04,5.8430E-04,6.4760E-04,7.0540E-04,7.5880E-04,8.0790E-04,8.5360E-04,8.9610E-04,9.3570E-04,1.1020E-03,1.2310E-03,1.3340E-03,1.4930E-03,1.6110E-03,1.8100E-03,1.9390E-03,2.1020E-03,2.2020E-03,2.2730E-03,2.3260E-03,2.3990E-03,2.4490E-03,2.5240E-03,2.5670E-03,2.6140E-03,2.6420E-03,2.6590E-03,2.6720E-03,2.6870E-03,2.6970E-03,2.7120E-03,2.7190E-03,2.7270E-03,2.7340E-03,2.7360E-03,2.7380E-03,2.7400E-03,2.7420E-03};
	final static double[] TotAttn= {1.5700E+03,5.3560E+02,3.0920E+02,3.1930E+03,2.7770E+03,9.7840E+02,4.5280E+02,2.4510E+02,1.4700E+02,6.4690E+01,3.3880E+01,1.0340E+01,4.4630E+00,1.4360E+00,7.0100E-01,4.3850E-01,3.2060E-01,2.2280E-01,1.8350E-01,1.4480E-01,1.2750E-01,1.0820E-01,9.6140E-02,8.7480E-02,8.0780E-02,7.0820E-02,6.3610E-02,6.2930E-02,5.6880E-02,5.1830E-02,4.4810E-02,4.4330E-02,3.6780E-02,3.2400E-02,2.9670E-02,2.7880E-02,2.6630E-02,2.5740E-02,2.5090E-02,2.4620E-02,2.4250E-02,2.3980E-02,2.3780E-02,2.3620E-02,2.3520E-02,2.3450E-02,2.3380E-02,2.3380E-02,2.3430E-02,2.3510E-02,2.3610E-02,2.3720E-02,2.3850E-02,2.4550E-02,2.5220E-02,2.5830E-02,2.6850E-02,2.7640E-02,2.9050E-02,2.9960E-02,3.1110E-02,3.1810E-02,3.2290E-02,3.2630E-02,3.3120E-02,3.3440E-02,3.3900E-02,3.4150E-02,3.4440E-02,3.4610E-02,3.4690E-02,3.4780E-02,3.4860E-02,3.4930E-02,3.4990E-02,3.5030E-02,3.5100E-02,3.5120E-02,3.5120E-02,3.5150E-02,3.5150E-02,3.5170E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
