package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationSE {

	final static double[] MeV= {1.00000E-03,1.19800E-03,1.43600E-03,1.43601E-03,1.45600E-03,1.47600E-03,1.47601E-03,1.50000E-03,1.65400E-03,
			1.65401E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.26600E-02,1.26601E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {5.5590E+00,5.4430E+00,5.2900E+00,5.2900E+00,5.2760E+00,5.2620E+00,5.2620E+00,5.2460E+00,5.1380E+00,5.1380E+00,4.8980E+00,4.2340E+00,3.6770E+00,3.2180E+00,2.8300E+00,2.2070E+00,1.7430E+00,1.3100E+00,1.3100E+00,1.0560E+00,7.2130E-01,4.0730E-01,2.5960E-01,1.7940E-01,1.3180E-01,8.0390E-02,5.4380E-02,2.6030E-02,1.5160E-02,6.9740E-03,3.9870E-03,2.5750E-03,1.7980E-03,1.0170E-03,6.5270E-04,6.2510E-04,4.1860E-04,2.9100E-04,1.6380E-04,1.5690E-04,7.2860E-05,4.0990E-05,2.6240E-05,1.8220E-05,1.3390E-05,1.0250E-05,8.1000E-06,6.5610E-06,5.4230E-06,4.5560E-06,3.8820E-06,3.3470E-06,2.9160E-06,2.5630E-06,2.0250E-06,1.6410E-06,1.3560E-06,1.1390E-06,9.7090E-07,8.3670E-07,7.2900E-07,4.1010E-07,2.6240E-07,1.8230E-07,1.0250E-07,6.5610E-08,2.9160E-08,1.6410E-08,7.2900E-09,4.1000E-09,2.6240E-09,1.8230E-09,1.0250E-09,6.5610E-10,2.9160E-10,1.6410E-10,7.2900E-11,4.1000E-11,2.6240E-11,1.8230E-11,1.0250E-11,6.5610E-12,2.9160E-12,1.6410E-12,7.2900E-13,4.1000E-13,2.6240E-13,1.8230E-13,1.0250E-13,6.5610E-14};
	final static double[] Incoh= {5.3910E-03,7.2760E-03,9.6780E-03,9.6780E-03,9.8830E-03,1.0090E-02,1.0090E-02,1.0330E-02,1.1910E-02,1.1910E-02,1.5440E-02,2.5010E-02,3.3410E-02,4.0740E-02,4.7270E-02,5.8640E-02,6.8290E-02,7.9010E-02,7.9010E-02,8.6560E-02,9.8540E-02,1.1190E-01,1.1820E-01,1.2090E-01,1.2160E-01,1.2040E-01,1.1770E-01,1.0970E-01,1.0210E-01,9.0070E-02,8.1230E-02,7.4410E-02,6.8980E-02,6.0730E-02,5.4670E-02,5.4090E-02,4.8920E-02,4.4480E-02,3.7970E-02,3.7510E-02,2.9890E-02,2.4940E-02,2.1540E-02,1.9040E-02,1.7110E-02,1.5570E-02,1.4320E-02,1.3260E-02,1.2370E-02,1.1600E-02,1.0930E-02,1.0340E-02,9.8160E-03,9.3500E-03,8.5420E-03,7.8790E-03,7.3190E-03,6.8400E-03,6.4230E-03,6.0590E-03,5.7370E-03,4.5590E-03,3.8050E-03,3.2790E-03,2.5850E-03,2.1460E-03,1.5280E-03,1.1980E-03,8.4960E-04,6.6520E-04,5.5070E-04,4.7150E-04,3.6820E-04,3.0290E-04,2.1160E-04,1.6370E-04,1.1390E-04,8.7860E-05,7.1850E-05,6.0930E-05,4.6940E-05,3.8320E-05,2.6490E-05,2.0360E-05,1.4040E-05,1.0780E-05,8.7780E-06,7.4220E-06,5.6910E-06,4.6300E-06};
	final static double[] PE= {2.3120E+03,1.5020E+03,9.7620E+02,4.3430E+03,4.1170E+03,3.9020E+03,5.5890E+03,5.3300E+03,4.3370E+03,4.9100E+03,3.0930E+03,1.1120E+03,5.2140E+02,2.8640E+02,1.7440E+02,7.8860E+01,4.2320E+01,2.1790E+01,1.5750E+02,1.0210E+02,4.7360E+01,1.5440E+01,6.8060E+00,3.5640E+00,2.0870E+00,8.8930E-01,4.5580E-01,1.3450E-01,5.6880E-02,1.7370E-02,7.7720E-03,4.3020E-03,2.7210E-03,1.3930E-03,8.6720E-04,8.2450E-04,5.5680E-04,4.0060E-04,2.4570E-04,2.3730E-04,1.3220E-04,8.8550E-05,6.6020E-05,5.2410E-05,4.3370E-05,3.6940E-05,3.2140E-05,2.8430E-05,2.5480E-05,2.3080E-05,2.1090E-05,1.9410E-05,1.7980E-05,1.6740E-05,1.4710E-05,1.3130E-05,1.1840E-05,1.0780E-05,9.9070E-06,9.1520E-06,8.5120E-06,6.2940E-06,4.9920E-06,4.1360E-06,3.0800E-06,2.4540E-06,1.6260E-06,1.2160E-06,8.0840E-07,6.0530E-07,4.8380E-07,4.0300E-07,3.0200E-07,2.4150E-07,1.6090E-07,1.2070E-07,8.0390E-08,6.0300E-08,4.8230E-08,4.0190E-08,3.0140E-08,2.4120E-08,1.6080E-08,1.2060E-08,8.0390E-09,6.0270E-09,4.8220E-09,4.0190E-09,3.0130E-09,2.4110E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,9.5030E-05,4.6720E-04,1.7160E-03,1.8410E-03,4.6520E-03,7.3550E-03,9.7320E-03,1.1810E-02,1.3680E-02,1.5350E-02,1.6880E-02,1.8260E-02,1.9520E-02,2.0680E-02,2.1740E-02,2.2720E-02,2.3640E-02,2.4500E-02,2.6080E-02,2.7490E-02,2.8770E-02,2.9940E-02,3.1000E-02,3.1970E-02,3.2870E-02,3.6540E-02,3.9270E-02,4.1400E-02,4.4550E-02,4.6790E-02,5.0350E-02,5.2480E-02,5.4950E-02,5.6380E-02,5.7320E-02,5.7980E-02,5.8870E-02,5.9450E-02,6.0290E-02,6.0740E-02,6.1240E-02,6.1500E-02,6.1670E-02,6.1780E-02,6.1940E-02,6.2030E-02,6.2170E-02,6.2230E-02,6.2310E-02,6.2350E-02,6.2370E-02,6.2390E-02,6.2410E-02,6.2430E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0460E-05,4.2690E-05,8.5040E-05,1.3050E-04,1.7580E-04,2.1970E-04,2.6180E-04,3.0180E-04,3.3970E-04,3.7540E-04,4.0910E-04,4.4120E-04,4.7160E-04,5.0050E-04,5.5420E-04,6.0310E-04,6.4790E-04,6.8920E-04,7.2720E-04,7.6270E-04,7.9550E-04,9.3280E-04,1.0370E-03,1.1200E-03,1.2450E-03,1.3380E-03,1.4900E-03,1.5860E-03,1.7040E-03,1.7760E-03,1.8240E-03,1.8590E-03,1.9090E-03,1.9420E-03,1.9910E-03,2.0180E-03,2.0480E-03,2.0650E-03,2.0760E-03,2.0840E-03,2.0940E-03,2.1000E-03,2.1090E-03,2.1140E-03,2.1190E-03,2.1220E-03,2.1240E-03,2.1250E-03,2.1260E-03,2.1270E-03};
	final static double[] TotAttn= {2.3170E+03,1.5070E+03,9.8150E+02,4.3490E+03,4.1220E+03,3.9070E+03,5.5940E+03,5.3360E+03,4.3430E+03,4.9150E+03,3.0980E+03,1.1160E+03,5.2520E+02,2.8960E+02,1.7730E+02,8.1130E+01,4.4130E+01,2.3180E+01,1.5890E+02,1.0330E+02,4.8180E+01,1.5960E+01,7.1840E+00,3.8640E+00,2.3410E+00,1.0900E+00,6.2780E-01,2.7020E-01,1.7420E-01,1.1440E-01,9.2980E-02,8.1290E-02,7.3500E-02,6.3140E-02,5.6190E-02,5.5540E-02,4.9990E-02,4.5640E-02,4.0100E-02,3.9740E-02,3.4760E-02,3.2470E-02,3.1450E-02,3.1050E-02,3.1030E-02,3.1190E-02,3.1500E-02,3.1860E-02,3.2270E-02,3.2680E-02,3.3100E-02,3.3530E-02,3.3950E-02,3.4380E-02,3.5190E-02,3.5990E-02,3.6750E-02,3.7480E-02,3.8160E-02,3.8800E-02,3.9410E-02,4.2040E-02,4.4120E-02,4.5800E-02,4.8380E-02,5.0280E-02,5.3370E-02,5.5270E-02,5.7510E-02,5.8820E-02,5.9690E-02,6.0310E-02,6.1150E-02,6.1700E-02,6.2490E-02,6.2920E-02,6.3400E-02,6.3660E-02,6.3820E-02,6.3930E-02,6.4080E-02,6.4170E-02,6.4300E-02,6.4370E-02,6.4440E-02,6.4480E-02,6.4500E-02,6.4520E-02,6.4540E-02,6.4560E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
