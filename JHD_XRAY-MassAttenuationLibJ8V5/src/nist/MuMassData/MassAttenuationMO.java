package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationMO {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.52000E-03,2.52001E-03,2.57200E-03,2.62500E-03,2.62501E-03,2.74300E-03,
			2.86500E-03,2.86501E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,
			2.00001E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {6.9420E+00,6.5410E+00,6.1060E+00,5.6660E+00,5.6660E+00,5.6220E+00,5.5780E+00,5.5780E+00,5.4810E+00,5.3810E+00,5.3810E+00,5.2750E+00,4.5560E+00,3.9650E+00,3.4860E+00,2.7740E+00,2.2670E+00,1.4480E+00,9.8930E-01,9.8930E-01,9.8930E-01,5.5830E-01,3.6360E-01,2.5440E-01,1.8740E-01,1.1420E-01,7.7330E-02,3.7400E-02,2.1930E-02,1.0140E-02,5.8160E-03,3.7640E-03,2.6320E-03,1.4920E-03,9.5850E-04,9.1770E-04,6.1510E-04,4.2770E-04,2.4100E-04,2.3070E-04,1.0720E-04,6.0320E-05,3.8620E-05,2.6820E-05,1.9700E-05,1.5090E-05,1.1920E-05,9.6540E-06,7.9780E-06,6.7040E-06,5.7140E-06,4.9270E-06,4.2920E-06,3.7720E-06,2.9800E-06,2.4140E-06,1.9950E-06,1.6770E-06,1.4290E-06,1.2320E-06,1.0730E-06,6.0350E-07,3.8630E-07,2.6820E-07,1.5090E-07,9.6540E-08,4.2920E-08,2.4140E-08,1.0730E-08,6.0350E-09,3.8620E-09,2.6820E-09,1.5090E-09,9.6540E-10,4.2920E-10,2.4140E-10,1.0730E-10,6.0350E-11,3.8620E-11,2.6820E-11,1.5090E-11,9.6540E-12,4.2920E-12,2.4140E-12,1.0730E-12,6.0350E-13,3.8620E-13,2.6820E-13,1.5090E-13,9.6540E-14};
	final static double[] Incoh= {6.4280E-03,1.1220E-02,1.5840E-02,2.0450E-02,2.0450E-02,2.0900E-02,2.1350E-02,2.1350E-02,2.2360E-02,2.3410E-02,2.3410E-02,2.4540E-02,3.2500E-02,3.9820E-02,4.6540E-02,5.8050E-02,6.7160E-02,8.3730E-02,9.5100E-02,9.5100E-02,9.5100E-02,1.0870E-01,1.1560E-01,1.1900E-01,1.2040E-01,1.2000E-01,1.1770E-01,1.1020E-01,1.0290E-01,9.1080E-02,8.2290E-02,7.5450E-02,6.9990E-02,6.1670E-02,5.5530E-02,5.4950E-02,4.9700E-02,4.5200E-02,3.8600E-02,3.8130E-02,3.0380E-02,2.5350E-02,2.1890E-02,1.9350E-02,1.7390E-02,1.5830E-02,1.4560E-02,1.3480E-02,1.2580E-02,1.1790E-02,1.1110E-02,1.0510E-02,9.9800E-03,9.5030E-03,8.6870E-03,8.0090E-03,7.4380E-03,6.9550E-03,6.5280E-03,6.1590E-03,5.8330E-03,4.6350E-03,3.8690E-03,3.3330E-03,2.6290E-03,2.1820E-03,1.5540E-03,1.2180E-03,8.6370E-04,6.7600E-04,5.5980E-04,4.7930E-04,3.7440E-04,3.0800E-04,2.1510E-04,1.6650E-04,1.1570E-04,8.9320E-05,7.3060E-05,6.1950E-05,4.7720E-05,3.8970E-05,2.6930E-05,2.0700E-05,1.4280E-05,1.0960E-05,8.9260E-06,7.5450E-06,5.7850E-06,4.7070E-06};
	final static double[] PE= {4.9360E+03,1.9180E+03,9.5350E+02,5.3590E+02,1.9730E+03,1.8550E+03,1.7440E+03,2.4270E+03,2.1790E+03,1.9560E+03,2.2370E+03,2.0060E+03,9.6600E+02,5.4100E+02,3.3360E+02,1.5370E+02,8.3420E+01,2.7000E+01,1.2000E+01,7.8460E+01,7.8460E+01,2.7430E+01,1.2460E+01,6.6660E+00,3.9660E+00,1.7280E+00,9.0070E-01,2.7320E-01,1.1750E-01,3.6650E-02,1.6610E-02,9.2650E-03,5.8920E-03,3.0300E-03,1.8880E-03,1.7960E-03,1.2130E-03,8.7000E-04,5.3180E-04,5.1320E-04,2.8420E-04,1.8940E-04,1.4060E-04,1.1140E-04,9.1900E-05,7.8150E-05,6.7920E-05,6.0000E-05,5.3720E-05,4.8620E-05,4.4390E-05,4.0830E-05,3.7800E-05,3.5180E-05,3.0900E-05,2.7540E-05,2.4830E-05,2.2610E-05,2.0750E-05,1.9170E-05,1.7810E-05,1.3160E-05,1.0430E-05,8.6370E-06,6.4280E-06,5.1200E-06,3.3920E-06,2.5360E-06,1.6850E-06,1.2620E-06,1.0090E-06,8.3990E-07,6.2960E-07,5.0340E-07,3.3530E-07,2.5150E-07,1.6760E-07,1.2570E-07,1.0050E-07,8.3730E-08,6.2830E-08,5.0250E-08,3.3490E-08,2.5120E-08,1.6750E-08,1.2560E-08,1.0050E-08,8.3730E-09,6.2770E-09,5.0240E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.3400E-04,6.3710E-04,2.2610E-03,2.4220E-03,5.9660E-03,9.3150E-03,1.2230E-02,1.4780E-02,1.7050E-02,1.9090E-02,2.0940E-02,2.2640E-02,2.4190E-02,2.5620E-02,2.6940E-02,2.8150E-02,2.9280E-02,3.0340E-02,3.2260E-02,3.3990E-02,3.5570E-02,3.6990E-02,3.8300E-02,3.9490E-02,4.0590E-02,4.5060E-02,4.8360E-02,5.0940E-02,5.4750E-02,5.7460E-02,6.1770E-02,6.4340E-02,6.7350E-02,6.9110E-02,7.0240E-02,7.1060E-02,7.2120E-02,7.2810E-02,7.3820E-02,7.4380E-02,7.5010E-02,7.5320E-02,7.5510E-02,7.5640E-02,7.5830E-02,7.5950E-02,7.6140E-02,7.6200E-02,7.6330E-02,7.6330E-02,7.6390E-02,7.6390E-02,7.6450E-02,7.6450E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0630E-05,4.3370E-05,8.6370E-05,1.3250E-04,1.7850E-04,2.2310E-04,2.6570E-04,3.0620E-04,3.4450E-04,3.8070E-04,4.1480E-04,4.4720E-04,4.7800E-04,5.0720E-04,5.6130E-04,6.1050E-04,6.5530E-04,6.9670E-04,7.3500E-04,7.7080E-04,8.0410E-04,9.4090E-04,1.0450E-03,1.1270E-03,1.2520E-03,1.3430E-03,1.4950E-03,1.5900E-03,1.7060E-03,1.7760E-03,1.8250E-03,1.8600E-03,1.9090E-03,1.9410E-03,1.9900E-03,2.0180E-03,2.0480E-03,2.0660E-03,2.0760E-03,2.0850E-03,2.0950E-03,2.1010E-03,2.1100E-03,2.1150E-03,2.1200E-03,2.1230E-03,2.1250E-03,2.1260E-03,2.1270E-03,2.1290E-03};
	final static double[] TotAttn= {4.9430E+03,1.9250E+03,9.5960E+02,5.4160E+02,1.9790E+03,1.8610E+03,1.7500E+03,2.4330E+03,2.1840E+03,1.9610E+03,2.2430E+03,2.0110E+03,9.7060E+02,5.4500E+02,3.3720E+02,1.5660E+02,8.5760E+01,2.8540E+01,1.3080E+01,7.9550E+01,7.9550E+01,2.8100E+01,1.2940E+01,7.0400E+00,4.2740E+00,1.9620E+00,1.0960E+00,4.2080E-01,2.4230E-01,1.3790E-01,1.0470E-01,8.8480E-02,7.8510E-02,6.6190E-02,5.8370E-02,5.7660E-02,5.1660E-02,4.7140E-02,4.1630E-02,4.1290E-02,3.6750E-02,3.4960E-02,3.4390E-02,3.4400E-02,3.4730E-02,3.5240E-02,3.5840E-02,3.6500E-02,3.7180E-02,3.7850E-02,3.8520E-02,3.9160E-02,3.9780E-02,4.0390E-02,4.1540E-02,4.2640E-02,4.3690E-02,4.4670E-02,4.5580E-02,4.6440E-02,4.7240E-02,5.0650E-02,5.3290E-02,5.5410E-02,5.8640E-02,6.0990E-02,6.4820E-02,6.7150E-02,6.9920E-02,7.1560E-02,7.2630E-02,7.3400E-02,7.4410E-02,7.5060E-02,7.6020E-02,7.6570E-02,7.7170E-02,7.7480E-02,7.7660E-02,7.7780E-02,7.7970E-02,7.8090E-02,7.8280E-02,7.8340E-02,7.8460E-02,7.8460E-02,7.8520E-02,7.8520E-02,7.8590E-02,7.8590E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
