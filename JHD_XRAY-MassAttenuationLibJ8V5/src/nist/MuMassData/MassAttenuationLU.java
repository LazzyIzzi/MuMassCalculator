package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationLU {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.58800E-03,1.58801E-03,1.61400E-03,1.63900E-03,1.63901E-03,2.00000E-03,2.02400E-03,
			2.02401E-03,2.14000E-03,2.26300E-03,2.26301E-03,2.37500E-03,2.49100E-03,2.49101E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,9.24400E-03,9.24410E-03,1.00000E-02,1.03500E-02,1.03501E-02,1.06100E-02,1.08700E-02,1.08701E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,6.33100E-02,6.33110E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1030E+01,1.0560E+01,1.0470E+01,1.0470E+01,1.0450E+01,1.0420E+01,1.0420E+01,1.0060E+01,1.0040E+01,1.0040E+01,9.9090E+00,9.7890E+00,9.7890E+00,9.6870E+00,9.5790E+00,9.5790E+00,9.0590E+00,8.0990E+00,7.2180E+00,6.4400E+00,5.1770E+00,4.5570E+00,4.5570E+00,4.2300E+00,4.0890E+00,4.0890E+00,3.9900E+00,3.8930E+00,3.8930E+00,2.7280E+00,1.9280E+00,1.1390E+00,7.4790E-01,5.2870E-01,3.9620E-01,3.6350E-01,3.6350E-01,2.4870E-01,1.7040E-01,8.3190E-02,4.9560E-02,2.3480E-02,1.3630E-02,8.8870E-03,6.2500E-03,3.5690E-03,2.3040E-03,2.2080E-03,1.4840E-03,1.0350E-03,5.8440E-04,5.5960E-04,2.6060E-04,1.4680E-04,9.3960E-05,6.5290E-05,4.7980E-05,3.6720E-05,2.9030E-05,2.3510E-05,1.9430E-05,1.6330E-05,1.3920E-05,1.2000E-05,1.0450E-05,9.1860E-06,7.2590E-06,5.8790E-06,4.8600E-06,4.0820E-06,3.4800E-06,3.0000E-06,2.6130E-06,1.4700E-06,9.4070E-07,6.5330E-07,3.6760E-07,2.3520E-07,1.0450E-07,5.8790E-08,2.6130E-08,1.4700E-08,9.4070E-09,6.5330E-09,3.6760E-09,2.3520E-09,1.0450E-09,5.8790E-10,2.6130E-10,1.4700E-10,9.4070E-11,6.5330E-11,3.6760E-11,2.3520E-11,1.0450E-11,5.8790E-12,2.6130E-12,1.4700E-12,9.4070E-13,6.5330E-13,3.6760E-13,2.3520E-13};
	final static double[] Incoh= {4.7430E-03,7.9540E-03,8.5150E-03,8.5150E-03,8.6730E-03,8.8320E-03,8.8320E-03,1.1040E-02,1.1190E-02,1.1190E-02,1.1910E-02,1.2670E-02,1.2670E-02,1.3350E-02,1.4070E-02,1.4070E-02,1.7140E-02,2.2910E-02,2.8290E-02,3.3230E-02,4.1820E-02,4.6470E-02,4.6470E-02,4.9080E-02,5.0250E-02,5.0250E-02,5.1090E-02,5.1940E-02,5.1940E-02,6.3500E-02,7.4310E-02,8.8420E-02,9.6130E-02,1.0040E-01,1.0270E-01,1.0310E-01,1.0310E-01,1.0410E-01,1.0340E-01,9.8540E-02,9.2830E-02,8.2950E-02,7.5310E-02,6.9280E-02,6.4430E-02,5.6890E-02,5.1280E-02,5.0770E-02,4.5950E-02,4.1820E-02,3.5730E-02,3.5280E-02,2.8140E-02,2.3490E-02,2.0290E-02,1.7940E-02,1.6120E-02,1.4670E-02,1.3490E-02,1.2500E-02,1.1660E-02,1.0930E-02,1.0300E-02,9.7440E-03,9.2520E-03,8.8110E-03,8.0510E-03,7.4240E-03,6.8980E-03,6.4430E-03,6.0510E-03,5.7100E-03,5.4070E-03,4.2950E-03,3.5860E-03,3.0900E-03,2.4370E-03,2.0220E-03,1.4400E-03,1.1290E-03,8.0060E-04,6.2680E-04,5.1900E-04,4.4430E-04,3.4690E-04,2.8550E-04,1.9940E-04,1.5430E-04,1.0730E-04,8.2810E-05,6.7700E-05,5.7410E-05,4.4230E-05,3.6110E-05,2.4960E-05,1.9190E-05,1.3230E-05,1.0160E-05,8.2740E-06,6.9940E-06,5.3620E-06,4.3640E-06};
	final static double[] PE= {3.1760E+03,1.4140E+03,1.2540E+03,1.5590E+03,2.3040E+03,3.3950E+03,3.8930E+03,3.4420E+03,3.3420E+03,3.8790E+03,3.3880E+03,2.9600E+03,3.1460E+03,2.8160E+03,2.5220E+03,2.6310E+03,1.7010E+03,8.4770E+02,4.8630E+02,3.0640E+02,1.4610E+02,1.0030E+02,2.6570E+02,2.1680E+02,1.9780E+02,2.7160E+02,2.5580E+02,2.4100E+02,2.7860E+02,1.2190E+02,5.6830E+01,1.9010E+01,8.6290E+00,4.6500E+00,2.7980E+00,2.4070E+00,1.2590E+01,6.8080E+00,3.7590E+00,1.2520E+00,5.7070E-01,1.9160E-01,9.0930E-02,5.2280E-02,3.3930E-02,1.7830E-02,1.1190E-02,1.0710E-02,7.2210E-03,5.1490E-03,3.1200E-03,3.0090E-03,1.6390E-03,1.0770E-03,7.9160E-04,6.2190E-04,5.1040E-04,4.3160E-04,3.7340E-04,3.2890E-04,2.9370E-04,2.6510E-04,2.4150E-04,2.2180E-04,2.0490E-04,1.9040E-04,1.6680E-04,1.4830E-04,1.3350E-04,1.2140E-04,1.1130E-04,1.0270E-04,9.5370E-05,7.0210E-05,5.5520E-05,4.5910E-05,3.4110E-05,2.7130E-05,1.7950E-05,1.3410E-05,8.9040E-06,6.6630E-06,5.3250E-06,4.4330E-06,3.3230E-06,2.6560E-06,1.7700E-06,1.3270E-06,8.8420E-07,6.6290E-07,5.3040E-07,4.4190E-07,3.3140E-07,2.6510E-07,1.7670E-07,1.3250E-07,8.8350E-08,6.6260E-08,5.3000E-08,4.4160E-08,3.3130E-08,2.6500E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {3.1870E+03,1.4240E+03,1.2640E+03,1.5700E+03,2.3140E+03,3.4060E+03,3.9030E+03,3.4520E+03,3.3520E+03,3.8890E+03,3.3980E+03,2.9690E+03,3.1550E+03,2.8250E+03,2.5310E+03,2.6410E+03,1.7100E+03,8.5590E+02,4.9360E+02,3.1290E+02,1.5140E+02,1.0490E+02,2.7030E+02,2.2110E+02,2.0190E+02,2.7580E+02,2.5990E+02,2.4490E+02,2.8260E+02,1.2470E+02,5.8830E+01,2.0230E+01,9.4730E+00,5.2790E+00,3.2960E+00,2.8740E+00,1.3050E+01,7.1610E+00,4.0320E+00,1.4340E+00,7.1310E-01,2.9810E-01,1.7990E-01,1.3050E-01,1.0460E-01,7.8290E-02,6.4780E-02,6.3680E-02,5.4960E-02,4.9410E-02,4.3850E-02,4.3540E-02,4.0280E-02,3.9850E-02,4.0450E-02,4.1470E-02,4.2680E-02,4.3980E-02,4.5320E-02,4.6650E-02,4.7950E-02,4.9250E-02,5.0480E-02,5.1690E-02,5.2830E-02,5.3910E-02,5.5930E-02,5.7730E-02,5.9430E-02,6.1040E-02,6.2490E-02,6.3860E-02,6.5130E-02,7.0440E-02,7.4530E-02,7.7740E-02,8.2590E-02,8.6030E-02,9.1550E-02,9.4860E-02,9.8750E-02,1.0100E-01,1.0250E-01,1.0350E-01,1.0500E-01,1.0590E-01,1.0720E-01,1.0790E-01,1.0870E-01,1.0910E-01,1.0940E-01,1.0960E-01,1.0980E-01,1.1000E-01,1.1020E-01,1.1030E-01,1.1040E-01,1.1050E-01,1.1050E-01,1.1050E-01,1.1060E-01,1.1060E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
