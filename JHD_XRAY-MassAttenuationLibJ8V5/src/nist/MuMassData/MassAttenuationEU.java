package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationEU {

	final static double[] MeV= {1.00000E-03,1.06300E-03,1.13100E-03,1.13101E-03,1.14600E-03,1.16100E-03,1.16101E-03,1.31100E-03,1.48100E-03,
			1.48101E-03,1.50000E-03,1.61400E-03,1.61401E-03,1.70400E-03,1.80000E-03,1.80001E-03,2.00000E-03,3.00000E-03,4.00000E-03,
			5.00000E-03,6.00000E-03,6.97700E-03,6.97710E-03,7.29000E-03,7.61700E-03,7.61710E-03,8.00000E-03,8.05200E-03,8.05210E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,4.85200E-02,4.85210E-02,5.00000E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {9.8950E+00,9.8360E+00,9.7680E+00,9.7680E+00,9.7530E+00,9.7370E+00,9.7370E+00,9.5880E+00,9.4240E+00,9.4240E+00,9.4040E+00,9.2850E+00,9.2850E+00,9.1960E+00,9.1030E+00,9.1030E+00,8.8930E+00,7.8820E+00,6.9430E+00,6.1190E+00,5.4210E+00,4.8390E+00,4.8390E+00,4.6710E+00,4.5060E+00,4.5060E+00,4.3230E+00,4.3000E+00,4.3000E+00,3.5190E+00,2.2840E+00,1.6340E+00,9.5940E-01,6.2450E-01,4.6400E-01,4.6400E-01,4.4260E-01,3.3270E-01,2.0770E-01,1.4130E-01,6.8830E-02,4.0940E-02,1.9280E-02,1.1150E-02,7.2520E-03,5.0920E-03,2.9020E-03,1.8700E-03,1.7920E-03,1.2040E-03,8.3810E-04,4.7280E-04,4.5300E-04,2.1070E-04,1.1860E-04,7.5970E-05,5.2750E-05,3.8770E-05,2.9690E-05,2.3460E-05,1.9000E-05,1.5700E-05,1.3200E-05,1.1240E-05,9.6930E-06,8.4450E-06,7.4220E-06,5.8650E-06,4.7510E-06,3.9260E-06,3.2990E-06,2.8110E-06,2.4240E-06,2.1110E-06,1.1880E-06,7.6010E-07,5.2790E-07,2.9690E-07,1.9000E-07,8.4450E-08,4.7510E-08,2.1110E-08,1.1880E-08,7.6010E-09,5.2790E-09,2.9690E-09,1.9000E-09,8.4450E-10,4.7510E-10,2.1110E-10,1.1880E-10,7.6010E-11,5.2790E-11,2.9690E-11,1.9000E-11,8.4450E-12,4.7510E-12,2.1110E-12,1.1880E-12,7.6010E-13,5.2790E-13,2.9690E-13,1.9000E-13};
	final static double[] Incoh= {5.8100E-03,6.2950E-03,6.8080E-03,6.8080E-03,6.9190E-03,7.0300E-03,7.0300E-03,8.1240E-03,9.3520E-03,9.3520E-03,9.4950E-03,1.0330E-02,1.0330E-02,1.0980E-02,1.1670E-02,1.1670E-02,1.3110E-02,2.0150E-02,2.6670E-02,3.2630E-02,3.7960E-02,4.2640E-02,4.2640E-02,4.4060E-02,4.5450E-02,4.5450E-02,4.7040E-02,4.7280E-02,4.7280E-02,5.4730E-02,6.9940E-02,8.1040E-02,9.4430E-02,1.0150E-01,1.0490E-01,1.0490E-01,1.0530E-01,1.0730E-01,1.0830E-01,1.0730E-01,1.0160E-01,9.5500E-02,8.5120E-02,7.7200E-02,7.0970E-02,6.5940E-02,5.8210E-02,5.2470E-02,5.1910E-02,4.7000E-02,4.2760E-02,3.6520E-02,3.6070E-02,2.8760E-02,2.4000E-02,2.0730E-02,1.8320E-02,1.6470E-02,1.4990E-02,1.3780E-02,1.2770E-02,1.1910E-02,1.1170E-02,1.0520E-02,9.9550E-03,9.4510E-03,9.0000E-03,8.2270E-03,7.5850E-03,7.0460E-03,6.5860E-03,6.1820E-03,5.8330E-03,5.5240E-03,4.3910E-03,3.6640E-03,3.1560E-03,2.4890E-03,2.0660E-03,1.4710E-03,1.1540E-03,8.1790E-04,6.4040E-04,5.3020E-04,4.5370E-04,3.5450E-04,2.9170E-04,2.0370E-04,1.5760E-04,1.0960E-04,8.4610E-05,6.9190E-05,5.8650E-05,4.5180E-05,3.6900E-05,2.5500E-05,1.9600E-05,1.3520E-05,1.0380E-05,8.4530E-06,7.1450E-06,5.4810E-06,4.4580E-06};
	final static double[] PE= {2.2060E+03,1.9660E+03,1.7530E+03,2.3290E+03,3.5280E+03,5.3460E+03,6.4670E+03,5.7000E+03,5.0210E+03,5.8020E+03,5.6150E+03,4.7630E+03,5.0570E+03,4.4800E+03,3.9710E+03,4.1490E+03,3.2690E+03,1.2480E+03,6.1230E+02,3.4810E+02,2.1790E+02,1.4730E+02,4.0780E+02,3.6440E+02,3.2570E+02,4.4460E+02,3.9460E+02,3.8780E+02,4.4820E+02,2.5940E+02,8.8530E+01,4.0700E+01,1.3350E+01,5.9920E+00,3.4830E+00,1.9440E+01,1.7950E+01,1.1110E+01,5.1400E+00,2.7920E+00,9.0550E-01,4.0620E-01,1.3360E-01,6.2570E-02,3.5670E-02,2.3000E-02,1.2010E-02,7.5180E-03,7.1970E-03,4.8510E-03,3.4640E-03,2.1030E-03,2.0280E-03,1.1090E-03,7.3110E-04,5.3860E-04,4.2400E-04,3.4830E-04,2.9500E-04,2.5560E-04,2.2520E-04,2.0120E-04,1.8180E-04,1.6570E-04,1.5220E-04,1.4070E-04,1.3080E-04,1.1460E-04,1.0200E-04,9.1900E-05,8.3580E-05,7.6640E-05,7.0740E-05,6.5700E-05,4.8390E-05,3.8310E-05,3.1690E-05,2.3550E-05,1.8740E-05,1.2400E-05,9.2650E-06,6.1540E-06,4.6090E-06,3.6810E-06,3.0660E-06,2.2970E-06,1.8360E-06,1.2230E-06,9.1740E-07,6.1150E-07,4.5850E-07,3.6660E-07,3.0550E-07,2.2910E-07,1.8330E-07,1.2220E-07,9.1620E-08,6.1070E-08,4.5810E-08,3.6650E-08,3.0540E-08,2.2910E-08,1.8320E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {2.2160E+03,1.9760E+03,1.7630E+03,2.3390E+03,3.5370E+03,5.3560E+03,6.4770E+03,5.7090E+03,5.0300E+03,5.8110E+03,5.6250E+03,4.7730E+03,5.0660E+03,4.4900E+03,3.9800E+03,4.1580E+03,3.2780E+03,1.2560E+03,6.1920E+02,3.5420E+02,2.2340E+02,1.5220E+02,4.1270E+02,3.6910E+02,3.3020E+02,4.4920E+02,3.9900E+02,3.9210E+02,4.5250E+02,2.6290E+02,9.0880E+01,4.2410E+01,1.4410E+01,6.7180E+00,4.0510E+00,2.0010E+01,1.8500E+01,1.1550E+01,5.4560E+00,3.0400E+00,1.0760E+00,5.4260E-01,2.3800E-01,1.5090E-01,1.1390E-01,9.4040E-02,7.3120E-02,6.1860E-02,6.0900E-02,5.3300E-02,4.8220E-02,4.2850E-02,4.2550E-02,3.9130E-02,3.8450E-02,3.8850E-02,3.9670E-02,4.0710E-02,4.1850E-02,4.3030E-02,4.4220E-02,4.5400E-02,4.6560E-02,4.7690E-02,4.8770E-02,4.9800E-02,5.0790E-02,5.2580E-02,5.4230E-02,5.5790E-02,5.7260E-02,5.8580E-02,5.9810E-02,6.0990E-02,6.5830E-02,6.9590E-02,7.2550E-02,7.6980E-02,8.0200E-02,8.5400E-02,8.8540E-02,9.2180E-02,9.4320E-02,9.5720E-02,9.6740E-02,9.8110E-02,9.8990E-02,1.0030E-01,1.0090E-01,1.0170E-01,1.0210E-01,1.0240E-01,1.0250E-01,1.0280E-01,1.0290E-01,1.0310E-01,1.0320E-01,1.0330E-01,1.0340E-01,1.0350E-01,1.0350E-01,1.0350E-01,1.0350E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
