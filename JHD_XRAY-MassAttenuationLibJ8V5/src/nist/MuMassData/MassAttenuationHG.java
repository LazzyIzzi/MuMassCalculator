package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationHG {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.29500E-03,2.29501E-03,2.33900E-03,2.38500E-03,2.38501E-03,2.60600E-03,
			2.84700E-03,2.84701E-03,3.00000E-03,3.27800E-03,3.27810E-03,3.41700E-03,3.56200E-03,3.56210E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.22800E-02,1.22801E-02,1.32100E-02,1.42100E-02,1.42101E-02,1.45200E-02,1.48400E-02,
			1.48401E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,8.31000E-02,8.31010E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.2340E+01,1.1870E+01,1.1320E+01,1.0980E+01,1.0980E+01,1.0920E+01,1.0870E+01,1.0870E+01,1.0620E+01,1.0340E+01,1.0340E+01,1.0170E+01,9.8500E+00,9.8500E+00,9.6950E+00,9.5350E+00,9.5350E+00,9.0640E+00,8.0880E+00,7.2410E+00,5.8930E+00,4.8820E+00,3.9990E+00,3.9990E+00,3.7050E+00,3.4230E+00,3.4230E+00,3.3410E+00,3.2600E+00,3.2600E+00,3.2210E+00,2.2710E+00,1.3400E+00,8.9260E-01,6.3350E-01,4.7400E-01,2.9800E-01,2.7990E-01,2.7990E-01,2.0560E-01,1.0120E-01,6.0310E-02,2.8760E-02,1.6790E-02,1.0980E-02,7.7370E-03,4.4310E-03,2.8670E-03,2.7470E-03,1.8500E-03,1.2910E-03,7.3010E-04,6.9950E-04,3.2600E-04,1.8370E-04,1.1770E-04,8.1750E-05,6.0070E-05,4.5990E-05,3.6360E-05,2.9450E-05,2.4340E-05,2.0450E-05,1.7430E-05,1.5030E-05,1.3090E-05,1.1510E-05,9.0910E-06,7.3640E-06,6.0850E-06,5.1160E-06,4.3590E-06,3.7590E-06,3.2720E-06,1.8410E-06,1.1780E-06,8.1840E-07,4.6020E-07,2.9460E-07,1.3090E-07,7.3640E-08,3.2720E-08,1.8410E-08,1.1780E-08,8.1840E-09,4.6020E-09,2.9460E-09,1.3090E-09,7.3640E-10,3.2720E-10,1.8410E-10,1.1780E-10,8.1840E-11,4.6020E-11,2.9460E-11,1.3090E-11,7.3640E-12,3.2720E-12,1.8410E-12,1.1780E-12,8.1840E-13,4.6020E-13,2.9460E-13};
	final static double[] Incoh= {3.5640E-03,6.4640E-03,9.3220E-03,1.0980E-02,1.0980E-02,1.1230E-02,1.1480E-02,1.1480E-02,1.2680E-02,1.3980E-02,1.3980E-02,1.4800E-02,1.6270E-02,1.6270E-02,1.7000E-02,1.7750E-02,1.7750E-02,2.0010E-02,2.4970E-02,2.9710E-02,3.8460E-02,4.5900E-02,5.3020E-02,5.3020E-02,5.5470E-02,5.7970E-02,5.7970E-02,5.8750E-02,5.9500E-02,5.9500E-02,5.9860E-02,6.9890E-02,8.3490E-02,9.1450E-02,9.6010E-02,9.8560E-02,1.0040E-01,1.0040E-01,1.0040E-01,1.0000E-01,9.5800E-02,9.0520E-02,8.1090E-02,7.3700E-02,6.7880E-02,6.3170E-02,5.5810E-02,5.0350E-02,4.9840E-02,4.5120E-02,4.1070E-02,3.5100E-02,3.4680E-02,2.7650E-02,2.3080E-02,1.9940E-02,1.7620E-02,1.5840E-02,1.4420E-02,1.3250E-02,1.2280E-02,1.1460E-02,1.0740E-02,1.0120E-02,9.5770E-03,9.0910E-03,8.6580E-03,7.9140E-03,7.2980E-03,6.7790E-03,6.3350E-03,5.9470E-03,5.6110E-03,5.3140E-03,4.2210E-03,3.5250E-03,3.0380E-03,2.3950E-03,1.9880E-03,1.4160E-03,1.1100E-03,7.8660E-04,6.1610E-04,5.1010E-04,4.3680E-04,3.4110E-04,2.8060E-04,1.9600E-04,1.5170E-04,1.0540E-04,8.1390E-05,6.6560E-05,5.6440E-05,4.3470E-05,3.5490E-05,2.4530E-05,1.8860E-05,1.3010E-05,9.9850E-06,8.1330E-06,6.8750E-06,5.2720E-06,4.2870E-06};
	final static double[] PE= {4.8190E+03,2.1620E+03,1.1720E+03,8.6640E+02,9.7810E+02,1.4390E+03,2.1170E+03,2.2830E+03,2.1730E+03,2.0680E+03,2.3880E+03,2.1070E+03,1.6940E+03,1.7980E+03,1.6300E+03,1.4770E+03,1.5400E+03,1.1700E+03,6.7880E+02,4.3140E+02,2.0810E+02,1.1720E+02,6.8600E+01,1.7390E+02,1.4290E+02,1.1740E+02,1.6280E+02,1.5460E+02,1.4670E+02,1.6980E+02,1.6480E+02,7.8900E+01,2.6990E+01,1.2440E+01,6.7730E+00,4.1100E+00,1.8600E+00,1.6750E+00,8.0850E+00,4.9720E+00,1.7120E+00,7.9470E-01,2.7360E-01,1.3190E-01,7.6650E-02,5.0110E-02,2.6550E-02,1.6720E-02,1.6000E-02,1.0790E-02,7.6890E-03,4.6500E-03,4.4850E-03,2.4340E-03,1.5940E-03,1.1690E-03,9.1660E-04,7.5090E-04,6.3440E-04,5.4850E-04,4.8250E-04,4.3050E-04,3.8820E-04,3.5370E-04,3.2450E-04,2.9970E-04,2.7840E-04,2.4370E-04,2.1660E-04,1.9490E-04,1.7710E-04,1.6230E-04,1.4980E-04,1.3900E-04,1.0220E-04,8.0820E-05,6.6800E-05,4.9600E-05,3.9450E-05,2.6080E-05,1.9480E-05,1.2930E-05,9.6790E-06,7.7340E-06,6.4400E-06,4.8250E-06,3.8580E-06,2.5690E-06,1.9260E-06,1.2830E-06,9.6250E-07,7.6980E-07,6.4160E-07,4.8100E-07,3.8490E-07,2.5650E-07,1.9240E-07,1.2830E-07,9.6190E-08,7.6950E-08,6.4130E-08,4.8100E-08,3.8490E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {4.8310E+03,2.1740E+03,1.1840E+03,8.7740E+02,9.8910E+02,1.4500E+03,2.1280E+03,2.2940E+03,2.1840E+03,2.0780E+03,2.3990E+03,2.1170E+03,1.7040E+03,1.8080E+03,1.6390E+03,1.4870E+03,1.5490E+03,1.1790E+03,6.8690E+02,4.3870E+02,2.1400E+02,1.2210E+02,7.2650E+01,1.7800E+02,1.4660E+02,1.2090E+02,1.6630E+02,1.5800E+02,1.5010E+02,1.7310E+02,1.6810E+02,8.1240E+01,2.8410E+01,1.3420E+01,7.5020E+00,4.6830E+00,2.2590E+00,2.0550E+00,8.4650E+00,5.2770E+00,1.9090E+00,9.4550E-01,3.8340E-01,2.2230E-01,1.5550E-01,1.2100E-01,8.6790E-02,6.9930E-02,6.8590E-02,5.8130E-02,5.1790E-02,4.5750E-02,4.5440E-02,4.2070E-02,4.1720E-02,4.2460E-02,4.3620E-02,4.4980E-02,4.6430E-02,4.7880E-02,4.9370E-02,5.0800E-02,5.2210E-02,5.3560E-02,5.4870E-02,5.6130E-02,5.7320E-02,5.9530E-02,6.1540E-02,6.3380E-02,6.5110E-02,6.6720E-02,6.8210E-02,6.9610E-02,7.5380E-02,7.9790E-02,8.3290E-02,8.8500E-02,9.2210E-02,9.8140E-02,1.0170E-01,1.0590E-01,1.0830E-01,1.0980E-01,1.1100E-01,1.1250E-01,1.1350E-01,1.1490E-01,1.1560E-01,1.1650E-01,1.1690E-01,1.1720E-01,1.1740E-01,1.1760E-01,1.1780E-01,1.1810E-01,1.1820E-01,1.1830E-01,1.1840E-01,1.1840E-01,1.1840E-01,1.1850E-01,1.1850E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
