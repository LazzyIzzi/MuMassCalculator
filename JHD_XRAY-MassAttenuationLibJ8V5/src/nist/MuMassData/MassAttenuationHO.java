package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationHO {

	final static double[] MeV= {1.00000E-03,1.16200E-03,1.35100E-03,1.35101E-03,1.37100E-03,1.39100E-03,1.39101E-03,1.50000E-03,1.74100E-03,
			1.74101E-03,1.83000E-03,1.92300E-03,1.92301E-03,2.00000E-03,2.12800E-03,2.12801E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,8.07100E-03,8.07110E-03,8.48400E-03,8.91800E-03,8.91810E-03,9.15300E-03,9.39400E-03,9.39410E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,5.56200E-02,5.56210E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.0370E+01,1.0210E+01,1.0030E+01,1.0030E+01,1.0010E+01,9.9940E+00,9.9940E+00,9.8800E+00,9.6390E+00,9.6390E+00,9.5470E+00,9.4500E+00,9.4500E+00,9.3690E+00,9.2340E+00,9.2340E+00,8.3620E+00,7.4160E+00,6.5720E+00,5.8380E+00,4.6770E+00,4.6410E+00,4.6410E+00,4.4420E+00,4.2500E+00,4.2500E+00,4.1500E+00,4.0490E+00,4.0490E+00,3.8120E+00,2.4650E+00,1.7540E+00,1.0360E+00,6.7700E-01,4.7910E-01,4.0530E-01,4.0530E-01,3.5970E-01,2.2540E-01,1.5390E-01,7.5030E-02,4.4660E-02,2.1100E-02,1.2220E-02,7.9640E-03,5.5940E-03,3.1910E-03,2.0590E-03,1.9720E-03,1.3250E-03,9.2340E-04,5.2140E-04,4.9910E-04,2.3240E-04,1.3080E-04,8.3760E-05,5.8200E-05,4.2760E-05,3.2750E-05,2.5870E-05,2.0960E-05,1.7320E-05,1.4550E-05,1.2400E-05,1.0690E-05,9.3150E-06,8.1860E-06,6.4700E-06,5.2400E-06,4.3300E-06,3.6390E-06,3.1010E-06,2.6740E-06,2.3290E-06,1.3100E-06,8.3830E-07,5.8240E-07,3.2750E-07,2.0960E-07,9.3180E-08,5.2400E-08,2.3290E-08,1.3100E-08,8.3830E-09,5.8240E-09,3.2750E-09,2.0960E-09,9.3180E-10,5.2400E-10,2.3290E-10,1.3100E-10,8.3830E-11,5.8240E-11,3.2750E-11,2.0960E-11,9.3180E-12,5.2400E-12,2.3290E-12,1.3100E-12,8.3830E-13,5.8240E-13,3.2750E-13,2.0960E-13};
	final static double[] Incoh= {5.1370E-03,6.2190E-03,7.4850E-03,7.4850E-03,7.6170E-03,7.7520E-03,7.7520E-03,8.4780E-03,1.0060E-02,1.0060E-02,1.0650E-02,1.1260E-02,1.1260E-02,1.1770E-02,1.2610E-02,1.2610E-02,1.8280E-02,2.4390E-02,3.0010E-02,3.5110E-02,4.3890E-02,4.4180E-02,4.4180E-02,4.5830E-02,4.7470E-02,4.7470E-02,4.8320E-02,4.9180E-02,4.9180E-02,5.1300E-02,6.6020E-02,7.6930E-02,9.0660E-02,9.7930E-02,1.0190E-01,1.0330E-01,1.0330E-01,1.0400E-01,1.0520E-01,1.0440E-01,9.9130E-02,9.3250E-02,8.3210E-02,7.5510E-02,6.9450E-02,6.4560E-02,5.7000E-02,5.1370E-02,5.0830E-02,4.6010E-02,4.1880E-02,3.5780E-02,3.5340E-02,2.8180E-02,2.3510E-02,2.0310E-02,1.7950E-02,1.6140E-02,1.4690E-02,1.3500E-02,1.2510E-02,1.1670E-02,1.0940E-02,1.0310E-02,9.7560E-03,9.2600E-03,8.8180E-03,8.0620E-03,7.4340E-03,6.9050E-03,6.4520E-03,6.0580E-03,5.7140E-03,5.4110E-03,4.3010E-03,3.5900E-03,3.0930E-03,2.4390E-03,2.0250E-03,1.4420E-03,1.1300E-03,8.0150E-04,6.2770E-04,5.1960E-04,4.4470E-04,3.4740E-04,2.8580E-04,1.9960E-04,1.5450E-04,1.0740E-04,8.2920E-05,6.7770E-05,5.7470E-05,4.4290E-05,3.6160E-05,2.4990E-05,1.9210E-05,1.3250E-05,1.0170E-05,8.2850E-06,7.0030E-06,5.3670E-06,4.3670E-06};
	final static double[] PE= {2.6060E+03,1.9450E+03,1.4530E+03,2.0580E+03,3.0370E+03,4.4770E+03,5.1810E+03,5.8380E+03,4.0270E+03,4.6660E+03,4.1520E+03,3.6950E+03,3.9250E+03,3.5810E+03,3.1190E+03,3.2570E+03,1.4560E+03,7.1890E+02,4.1040E+02,2.5770E+02,1.2230E+02,1.1950E+02,3.2370E+02,2.8430E+02,2.4970E+02,3.4210E+02,3.2090E+02,3.0100E+02,3.4790E+02,2.9730E+02,1.0350E+02,4.7980E+01,1.5880E+01,7.1640E+00,3.8450E+00,2.8520E+00,1.5410E+01,1.2630E+01,5.9110E+00,3.2340E+00,1.0620E+00,4.7980E-01,1.5960E-01,7.5220E-02,4.3050E-02,2.7850E-02,1.4580E-02,9.1430E-03,8.7490E-03,5.8970E-03,4.2100E-03,2.5530E-03,2.4620E-03,1.3430E-03,8.8440E-04,6.5070E-04,5.1160E-04,4.2030E-04,3.5560E-04,3.0790E-04,2.7120E-04,2.4220E-04,2.1870E-04,1.9930E-04,1.8300E-04,1.6920E-04,1.5730E-04,1.3780E-04,1.2260E-04,1.1040E-04,1.0040E-04,9.2010E-05,8.4930E-05,7.8870E-05,5.8090E-05,4.5970E-05,3.8010E-05,2.8240E-05,2.2470E-05,1.4860E-05,1.1110E-05,7.3760E-06,5.5210E-06,4.4110E-06,3.6730E-06,2.7530E-06,2.2010E-06,1.4660E-06,1.0990E-06,7.3250E-07,5.4920E-07,4.3930E-07,3.6620E-07,2.7450E-07,2.1960E-07,1.4640E-07,1.0980E-07,7.3210E-08,5.4880E-08,4.3930E-08,3.6590E-08,2.7450E-08,2.1960E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,9.8480E-06,4.0160E-05,7.9890E-05,1.2250E-04,1.6490E-04,2.0590E-04,2.4510E-04,2.8230E-04,3.1740E-04,3.5050E-04,3.8160E-04,4.1110E-04,4.3930E-04,4.6590E-04,5.1480E-04,5.5970E-04,6.0030E-04,6.3790E-04,6.7220E-04,7.0430E-04,7.3390E-04,8.5620E-04,9.4820E-04,1.0210E-03,1.1300E-03,1.2090E-03,1.3380E-03,1.4190E-03,1.5160E-03,1.5750E-03,1.6150E-03,1.6440E-03,1.6840E-03,1.7110E-03,1.7510E-03,1.7730E-03,1.7980E-03,1.8130E-03,1.8220E-03,1.8280E-03,1.8360E-03,1.8410E-03,1.8490E-03,1.8530E-03,1.8570E-03,1.8590E-03,1.8610E-03,1.8620E-03,1.8630E-03,1.8640E-03};
	final static double[] TotAttn= {2.6160E+03,1.9560E+03,1.4630E+03,2.0680E+03,3.0470E+03,4.4870E+03,5.1910E+03,5.8480E+03,4.0370E+03,4.6760E+03,4.1610E+03,3.7050E+03,3.9350E+03,3.5910E+03,3.1280E+03,3.2660E+03,1.4650E+03,7.2640E+02,4.1700E+02,2.6360E+02,1.2700E+02,1.2420E+02,3.2830E+02,2.8880E+02,2.5400E+02,3.4640E+02,3.2510E+02,3.0510E+02,3.5200E+02,3.0120E+02,1.0600E+02,4.9810E+01,1.7010E+01,7.9390E+00,4.4260E+00,3.3610E+00,1.5920E+01,1.3090E+01,6.2420E+00,3.4930E+00,1.2360E+00,6.1770E-01,2.6390E-01,1.6300E-01,1.2050E-01,9.8000E-02,7.4770E-02,6.2580E-02,6.1550E-02,5.3500E-02,4.8290E-02,4.2890E-02,4.2600E-02,3.9300E-02,3.8770E-02,3.9270E-02,4.0200E-02,4.1320E-02,4.2530E-02,4.3780E-02,4.5040E-02,4.6270E-02,4.7490E-02,4.8660E-02,4.9800E-02,5.0880E-02,5.1910E-02,5.3780E-02,5.5520E-02,5.7130E-02,5.8640E-02,6.0020E-02,6.1310E-02,6.2530E-02,6.7580E-02,7.1440E-02,7.4510E-02,7.9140E-02,8.2420E-02,8.7720E-02,9.0920E-02,9.4700E-02,9.6850E-02,9.8280E-02,9.9290E-02,1.0070E-01,1.0160E-01,1.0280E-01,1.0350E-01,1.0430E-01,1.0470E-01,1.0500E-01,1.0510E-01,1.0540E-01,1.0550E-01,1.0580E-01,1.0590E-01,1.0600E-01,1.0600E-01,1.0610E-01,1.0610E-01,1.0610E-01,1.0610E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
