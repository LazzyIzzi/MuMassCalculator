package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationZR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.22200E-03,2.22201E-03,2.26400E-03,2.30700E-03,2.30701E-03,2.41700E-03,
			2.53200E-03,2.53201E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,1.80000E-02,
			1.80001E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {6.5470E+00,6.1260E+00,5.7050E+00,5.5230E+00,5.5230E+00,5.4900E+00,5.4560E+00,5.4560E+00,5.3740E+00,5.2900E+00,5.2900E+00,4.9440E+00,4.2970E+00,3.7580E+00,3.3140E+00,2.6410E+00,2.1500E+00,1.3530E+00,1.0630E+00,1.0630E+00,9.2220E-01,5.2150E-01,3.3840E-01,2.3580E-01,1.7350E-01,1.0580E-01,7.1630E-02,3.4570E-02,2.0230E-02,9.3410E-03,5.3540E-03,3.4640E-03,2.4210E-03,1.3720E-03,8.8060E-04,8.4370E-04,5.6520E-04,3.9300E-04,2.2130E-04,2.1200E-04,9.8490E-05,5.5410E-05,3.5470E-05,2.4640E-05,1.8100E-05,1.3860E-05,1.0950E-05,8.8720E-06,7.3280E-06,6.1600E-06,5.2480E-06,4.5250E-06,3.9420E-06,3.4650E-06,2.7380E-06,2.2170E-06,1.8330E-06,1.5400E-06,1.3120E-06,1.1310E-06,9.8560E-07,5.5440E-07,3.5480E-07,2.4640E-07,1.3860E-07,8.8720E-08,3.9420E-08,2.2170E-08,9.8560E-09,5.5430E-09,3.5480E-09,2.4640E-09,1.3860E-09,8.8720E-10,3.9420E-10,2.2170E-10,9.8560E-11,5.5430E-11,3.5480E-11,2.4640E-11,1.3860E-11,8.8720E-12,3.9420E-12,2.2170E-12,9.8560E-13,5.5430E-13,3.5480E-13,2.4640E-13,1.3860E-13,8.8720E-14};
	final static double[] Incoh= {8.1000E-03,1.3380E-02,1.8140E-02,2.0170E-02,2.0170E-02,2.0550E-02,2.0940E-02,2.0940E-02,2.1910E-02,2.2910E-02,2.2910E-02,2.6910E-02,3.4840E-02,4.2060E-02,4.8610E-02,5.9620E-02,6.8460E-02,8.4960E-02,9.2350E-02,9.2350E-02,9.6450E-02,1.1000E-01,1.1680E-01,1.2010E-01,1.2140E-01,1.2070E-01,1.1840E-01,1.1060E-01,1.0330E-01,9.1360E-02,8.2450E-02,7.5650E-02,7.0170E-02,6.1790E-02,5.5630E-02,5.5050E-02,4.9790E-02,4.5280E-02,3.8660E-02,3.8190E-02,3.0430E-02,2.5390E-02,2.1930E-02,1.9380E-02,1.7420E-02,1.5860E-02,1.4580E-02,1.3510E-02,1.2600E-02,1.1820E-02,1.1130E-02,1.0530E-02,9.9950E-03,9.5190E-03,8.7010E-03,8.0210E-03,7.4530E-03,6.9650E-03,6.5400E-03,6.1690E-03,5.8420E-03,4.6420E-03,3.8750E-03,3.3390E-03,2.6330E-03,2.1860E-03,1.5570E-03,1.2200E-03,8.6480E-04,6.7730E-04,5.6070E-04,4.8010E-04,3.7500E-04,3.0850E-04,2.1540E-04,1.6680E-04,1.1590E-04,8.9520E-05,7.3140E-05,6.2050E-05,4.7800E-05,3.9030E-05,2.6970E-05,2.0740E-05,1.4300E-05,1.0980E-05,8.9380E-06,7.5590E-06,5.7950E-06,4.7150E-06};
	final static double[] PE= {4.2030E+03,1.6250E+03,8.0600E+02,6.2030E+02,2.3860E+03,2.2460E+03,2.1140E+03,2.9480E+03,2.6330E+03,2.3530E+03,2.6850E+03,1.7670E+03,8.4630E+02,4.7180E+02,2.9010E+02,1.3300E+02,7.1960E+01,2.3180E+01,1.3860E+01,9.3540E+01,7.1360E+01,2.4220E+01,1.0930E+01,5.8180E+00,3.4490E+00,1.4950E+00,7.7570E-01,2.3380E-01,1.0010E-01,3.1070E-02,1.4030E-02,7.8160E-03,4.9620E-03,2.5490E-03,1.5880E-03,1.5100E-03,1.0190E-03,7.3210E-04,4.4790E-04,4.3230E-04,2.3980E-04,1.6000E-04,1.1890E-04,9.4200E-05,7.7770E-05,6.6150E-05,5.7520E-05,5.0840E-05,4.5530E-05,4.1210E-05,3.7640E-05,3.4620E-05,3.2060E-05,2.9840E-05,2.6210E-05,2.3360E-05,2.1070E-05,1.9180E-05,1.7610E-05,1.6270E-05,1.5120E-05,1.1180E-05,8.8590E-06,7.3410E-06,5.4620E-06,4.3500E-06,2.8820E-06,2.1550E-06,1.4320E-06,1.0720E-06,8.5690E-07,7.1360E-07,5.3490E-07,4.2780E-07,2.8500E-07,2.1370E-07,1.4240E-07,1.0680E-07,8.5420E-08,7.1160E-08,5.3380E-08,4.2700E-08,2.8470E-08,2.1350E-08,1.4230E-08,1.0670E-08,8.5420E-09,7.1160E-09,5.3370E-09,4.2700E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.2410E-04,5.9530E-04,2.1300E-03,2.2830E-03,5.6600E-03,8.8660E-03,1.1660E-02,1.4110E-02,1.6290E-02,1.8250E-02,2.0040E-02,2.1670E-02,2.3160E-02,2.4530E-02,2.5790E-02,2.6950E-02,2.8040E-02,2.9050E-02,3.0900E-02,3.2560E-02,3.4070E-02,3.5440E-02,3.6690E-02,3.7830E-02,3.8890E-02,4.3190E-02,4.6370E-02,4.8840E-02,5.2510E-02,5.5120E-02,5.9250E-02,6.1740E-02,6.4620E-02,6.6280E-02,6.7400E-02,6.8190E-02,6.9180E-02,6.9910E-02,7.0830E-02,7.1430E-02,7.1960E-02,7.2290E-02,7.2480E-02,7.2620E-02,7.2810E-02,7.2880E-02,7.3080E-02,7.3140E-02,7.3210E-02,7.3280E-02,7.3340E-02,7.3340E-02,7.3340E-02,7.3340E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0650E-05,4.3450E-05,8.6550E-05,1.3280E-04,1.7880E-04,2.2350E-04,2.6620E-04,3.0680E-04,3.4530E-04,3.8160E-04,4.1580E-04,4.4830E-04,4.7910E-04,5.0840E-04,5.6270E-04,6.1220E-04,6.5740E-04,6.9910E-04,7.3740E-04,7.7300E-04,8.0670E-04,9.4400E-04,1.0490E-03,1.1320E-03,1.2580E-03,1.3490E-03,1.5020E-03,1.5980E-03,1.7160E-03,1.7880E-03,1.8380E-03,1.8740E-03,1.9240E-03,1.9580E-03,2.0090E-03,2.0380E-03,2.0700E-03,2.0890E-03,2.1010E-03,2.1090E-03,2.1190E-03,2.1260E-03,2.1360E-03,2.1410E-03,2.1460E-03,2.1500E-03,2.1520E-03,2.1530E-03,2.1550E-03,2.1550E-03};
	final static double[] TotAttn= {4.2100E+03,1.6310E+03,8.1180E+02,6.2580E+02,2.3910E+03,2.2510E+03,2.1200E+03,2.9530E+03,2.6390E+03,2.3590E+03,2.6910E+03,1.7720E+03,8.5060E+02,4.7560E+02,2.9350E+02,1.3570E+02,7.4170E+01,2.4620E+01,1.5010E+01,9.4700E+01,7.2380E+01,2.4850E+01,1.1390E+01,6.1740E+00,3.7440E+00,1.7210E+00,9.6570E-01,3.7900E-01,2.2370E-01,1.3180E-01,1.0180E-01,8.6930E-02,7.7560E-02,6.5710E-02,5.8100E-02,5.7400E-02,5.1500E-02,4.7000E-02,4.1460E-02,4.1120E-02,3.6440E-02,3.4510E-02,3.3840E-02,3.3740E-02,3.3990E-02,3.4410E-02,3.4950E-02,3.5540E-02,3.6150E-02,3.6780E-02,3.7380E-02,3.7970E-02,3.8550E-02,3.9110E-02,4.0190E-02,4.1220E-02,4.2200E-02,4.3120E-02,4.3990E-02,4.4790E-02,4.5550E-02,4.8780E-02,5.1300E-02,5.3320E-02,5.6400E-02,5.8660E-02,6.2320E-02,6.4560E-02,6.7200E-02,6.8750E-02,6.9800E-02,7.0550E-02,7.1480E-02,7.2180E-02,7.3060E-02,7.3630E-02,7.4140E-02,7.4460E-02,7.4660E-02,7.4790E-02,7.4980E-02,7.5050E-02,7.5240E-02,7.5310E-02,7.5370E-02,7.5440E-02,7.5500E-02,7.5500E-02,7.5500E-02,7.5500E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
