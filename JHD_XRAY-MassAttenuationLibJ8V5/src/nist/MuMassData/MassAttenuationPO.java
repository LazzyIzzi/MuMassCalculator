package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationPO {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.68300E-03,2.68301E-03,2.74000E-03,2.79800E-03,2.79801E-03,3.00000E-03,
			3.30200E-03,3.30210E-03,3.56700E-03,3.85400E-03,3.85410E-03,4.00000E-03,4.14900E-03,4.14910E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.38100E-02,1.38101E-02,1.50000E-02,1.62400E-02,1.62401E-02,1.65900E-02,1.69400E-02,1.69401E-02,
			2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,9.31000E-02,9.31010E-02,1.00000E-01,1.50000E-01,
			2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,
			2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,
			1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,
			2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,
			3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,
			5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,
			8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.3000E+01,1.2450E+01,1.1840E+01,1.0990E+01,1.0990E+01,1.0920E+01,1.0850E+01,1.0850E+01,1.0610E+01,1.0260E+01,1.0260E+01,9.9650E+00,9.6480E+00,9.6480E+00,9.4890E+00,9.3340E+00,9.3340E+00,8.5070E+00,7.6450E+00,6.2470E+00,5.1930E+00,3.7920E+00,3.7920E+00,3.4670E+00,3.1670E+00,3.1670E+00,3.0910E+00,3.0170E+00,3.0170E+00,2.4590E+00,1.4470E+00,9.6940E-01,6.9130E-01,5.1780E-01,3.2530E-01,2.5340E-01,2.5340E-01,2.2500E-01,1.1130E-01,6.6390E-02,3.1730E-02,1.8570E-02,1.2170E-02,8.5870E-03,4.9250E-03,3.1900E-03,3.0570E-03,2.0600E-03,1.4390E-03,8.1440E-04,7.8010E-04,3.6400E-04,2.0510E-04,1.3140E-04,9.1290E-05,6.7080E-05,5.1380E-05,4.0600E-05,3.2880E-05,2.7180E-05,2.2840E-05,1.9470E-05,1.6790E-05,1.4620E-05,1.2850E-05,1.0150E-05,8.2240E-06,6.7980E-06,5.7110E-06,4.8670E-06,4.1960E-06,3.6570E-06,2.0570E-06,1.3160E-06,9.1410E-07,5.1410E-07,3.2910E-07,1.4620E-07,8.2240E-08,3.6570E-08,2.0560E-08,1.3160E-08,9.1410E-09,5.1410E-09,3.2910E-09,1.4620E-09,8.2240E-10,3.6570E-10,2.0560E-10,1.3160E-10,9.1410E-11,5.1410E-11,3.2910E-11,1.4620E-11,8.2240E-12,3.6570E-12,2.0560E-12,1.3160E-12,9.1410E-13,5.1410E-13,3.2910E-13};
	final static double[] Incoh= {3.4870E-03,6.5560E-03,9.7230E-03,1.3910E-02,1.3910E-02,1.4240E-02,1.4590E-02,1.4590E-02,1.5760E-02,1.7440E-02,1.7440E-02,1.8880E-02,2.0390E-02,2.0390E-02,2.1140E-02,2.1890E-02,2.1890E-02,2.5980E-02,3.0460E-02,3.8730E-02,4.6050E-02,5.7110E-02,5.7110E-02,6.0000E-02,6.2730E-02,6.2730E-02,6.3450E-02,6.4170E-02,6.4170E-02,6.9760E-02,8.3050E-02,9.1060E-02,9.5760E-02,9.8410E-02,1.0040E-01,1.0040E-01,1.0040E-01,1.0010E-01,9.6100E-02,9.0920E-02,8.1520E-02,7.4170E-02,6.8320E-02,6.3600E-02,5.6220E-02,5.0720E-02,5.0200E-02,4.5470E-02,4.1380E-02,3.5360E-02,3.4930E-02,2.7870E-02,2.3260E-02,2.0090E-02,1.7760E-02,1.5970E-02,1.4530E-02,1.3360E-02,1.2380E-02,1.1550E-02,1.0830E-02,1.0200E-02,9.6510E-03,9.1640E-03,8.7260E-03,7.9760E-03,7.3540E-03,6.8320E-03,6.3830E-03,5.9940E-03,5.6540E-03,5.3540E-03,4.2560E-03,3.5530E-03,3.0600E-03,2.4140E-03,2.0030E-03,1.4270E-03,1.1190E-03,7.9270E-04,6.2100E-04,5.1410E-04,4.4000E-04,3.4380E-04,2.8280E-04,1.9750E-04,1.5280E-04,1.0630E-04,8.2040E-05,6.7080E-05,5.6880E-05,4.3830E-05,3.5790E-05,2.4720E-05,1.9010E-05,1.3110E-05,1.0070E-05,8.1950E-06,6.9270E-06,5.3110E-06,4.3220E-06};
	final static double[] PE= {5.7110E+03,2.5910E+03,1.4110E+03,7.3710E+02,2.1950E+03,1.9670E+03,1.7640E+03,2.7010E+03,2.1440E+03,1.6830E+03,1.9460E+03,1.6080E+03,1.3300E+03,1.4090E+03,1.2900E+03,1.1810E+03,1.2320E+03,7.8470E+02,5.0080E+02,2.4310E+02,1.3750E+02,5.9510E+01,1.4750E+02,1.1840E+02,9.5270E+01,1.3280E+02,1.2630E+02,1.2010E+02,1.3890E+02,9.1000E+01,3.1500E+01,1.4630E+01,8.0140E+00,4.8820E+00,2.2230E+00,1.4660E+00,6.7860E+00,5.6650E+00,1.9620E+00,9.2010E-01,3.2020E-01,1.5550E-01,9.0860E-02,5.9620E-02,3.1700E-02,2.0010E-02,1.9150E-02,1.2920E-02,9.2010E-03,5.5640E-03,5.3630E-03,2.9080E-03,1.9020E-03,1.3930E-03,1.0910E-03,8.9330E-04,7.5440E-04,6.5180E-04,5.7320E-04,5.1120E-04,4.6110E-04,4.1960E-04,3.8500E-04,3.5560E-04,3.3020E-04,2.8900E-04,2.5680E-04,2.3110E-04,2.0990E-04,1.9230E-04,1.7750E-04,1.6470E-04,1.2110E-04,9.5700E-05,7.9100E-05,5.8700E-05,4.6680E-05,3.0860E-05,2.3050E-05,1.5300E-05,1.1450E-05,9.1490E-06,7.6160E-06,5.7060E-06,4.5620E-06,3.0400E-06,2.2790E-06,1.5180E-06,1.1390E-06,9.1060E-07,7.5870E-07,5.6910E-07,4.5530E-07,3.0340E-07,2.2760E-07,1.5170E-07,1.1380E-07,9.1030E-08,7.5840E-08,5.6880E-08,4.5500E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {5.7240E+03,2.6040E+03,1.4230E+03,7.4810E+02,2.2060E+03,1.9780E+03,1.7750E+03,2.7120E+03,2.1550E+03,1.6930E+03,1.9560E+03,1.6180E+03,1.3390E+03,1.4190E+03,1.2990E+03,1.1900E+03,1.2420E+03,7.9320E+02,5.0850E+02,2.4940E+02,1.4270E+02,6.3360E+01,1.5130E+02,1.2190E+02,9.8500E+01,1.3610E+02,1.2950E+02,1.2320E+02,1.4190E+02,9.3530E+01,3.3030E+01,1.5690E+01,8.8010E+00,5.4980E+00,2.6490E+00,1.8200E+00,7.1400E+00,5.9900E+00,2.1700E+00,1.0770E+00,4.3340E-01,2.4830E-01,1.7140E-01,1.3180E-01,9.2840E-02,7.3910E-02,7.2410E-02,6.0850E-02,5.3940E-02,4.7490E-02,4.7160E-02,4.3620E-02,4.3230E-02,4.3990E-02,4.5230E-02,4.6660E-02,4.8160E-02,4.9710E-02,5.1240E-02,5.2740E-02,5.4220E-02,5.5650E-02,5.7020E-02,5.8350E-02,5.9580E-02,6.1890E-02,6.3990E-02,6.5950E-02,6.7770E-02,6.9470E-02,7.1020E-02,7.2490E-02,7.8550E-02,8.3190E-02,8.6840E-02,9.2270E-02,9.6130E-02,1.0230E-01,1.0610E-01,1.1040E-01,1.1290E-01,1.1460E-01,1.1580E-01,1.1740E-01,1.1840E-01,1.1990E-01,1.2070E-01,1.2160E-01,1.2200E-01,1.2230E-01,1.2250E-01,1.2280E-01,1.2300E-01,1.2320E-01,1.2340E-01,1.2350E-01,1.2360E-01,1.2360E-01,1.2360E-01,1.2370E-01,1.2370E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
