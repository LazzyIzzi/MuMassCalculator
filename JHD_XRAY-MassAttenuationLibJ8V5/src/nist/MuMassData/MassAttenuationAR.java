package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationAR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,3.20300E-03,3.20310E-03,4.00000E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {3.0420E+00,2.8220E+00,2.5700E+00,2.0830E+00,1.9930E+00,1.9930E+00,1.6940E+00,1.4090E+00,1.2010E+00,9.2450E-01,7.4110E-01,4.5560E-01,3.0160E-01,1.6160E-01,1.0210E-01,7.0700E-02,5.1780E-02,3.1070E-02,2.0640E-02,9.6330E-03,5.5490E-03,2.5190E-03,1.4280E-03,9.1790E-04,6.3890E-04,3.6010E-04,2.3080E-04,2.2100E-04,1.4780E-04,1.0270E-04,5.7780E-05,5.5310E-05,2.5690E-05,1.4450E-05,9.2480E-06,6.4220E-06,4.7180E-06,3.6130E-06,2.8550E-06,2.3120E-06,1.9120E-06,1.6050E-06,1.3680E-06,1.1800E-06,1.0280E-06,9.0310E-07,7.1360E-07,5.7800E-07,4.7770E-07,4.0140E-07,3.4210E-07,2.9490E-07,2.5690E-07,1.4450E-07,9.2480E-08,6.4220E-08,3.6120E-08,2.3120E-08,1.0280E-08,5.7800E-09,2.5690E-09,1.4450E-09,9.2480E-10,6.4220E-10,3.6120E-10,2.3120E-10,1.0280E-10,5.7800E-11,2.5690E-11,1.4450E-11,9.2480E-12,6.4220E-12,3.6120E-12,2.3120E-12,1.0280E-12,5.7800E-13,2.5690E-13,1.4450E-13,9.2480E-14,6.4220E-14,3.6120E-14,2.3120E-14};
	final static double[] Incoh= {7.0790E-03,1.4200E-02,2.2040E-02,3.7170E-02,4.0010E-02,4.0010E-02,5.0230E-02,6.0990E-02,6.9710E-02,8.2930E-02,9.2880E-02,1.1050E-01,1.2130E-01,1.3160E-01,1.3510E-01,1.3590E-01,1.3530E-01,1.3220E-01,1.2800E-01,1.1760E-01,1.0870E-01,9.5180E-02,8.5540E-02,7.8220E-02,7.2440E-02,6.3690E-02,5.7300E-02,5.6700E-02,5.1250E-02,4.6580E-02,3.9770E-02,3.9270E-02,3.1300E-02,2.6090E-02,2.2540E-02,1.9930E-02,1.7910E-02,1.6300E-02,1.4980E-02,1.3880E-02,1.2950E-02,1.2140E-02,1.1440E-02,1.0820E-02,1.0270E-02,9.7840E-03,8.9420E-03,8.2460E-03,7.6600E-03,7.1580E-03,6.7200E-03,6.3390E-03,6.0030E-03,4.7700E-03,3.9830E-03,3.4310E-03,2.7060E-03,2.2460E-03,1.5990E-03,1.2540E-03,8.8880E-04,6.9600E-04,5.7620E-04,4.9340E-04,3.8530E-04,3.1700E-04,2.2150E-04,1.7140E-04,1.1910E-04,9.1960E-05,7.5190E-05,6.3750E-05,4.9130E-05,4.0100E-05,2.7720E-05,2.1320E-05,1.4700E-05,1.1280E-05,9.1880E-06,7.7670E-06,5.9550E-06,4.8450E-06};
	final static double[] PE= {3.1810E+03,1.1020E+03,5.0940E+02,1.6820E+02,1.4040E+02,1.2730E+03,7.5540E+02,4.2100E+02,2.5810E+02,1.1700E+02,6.2320E+01,1.9270E+01,8.2070E+00,2.4030E+00,9.9090E-01,4.9460E-01,2.7930E-01,1.1270E-01,5.5640E-02,1.5440E-02,6.2800E-03,1.8320E-03,7.9790E-04,4.3450E-04,2.7210E-04,1.3810E-04,8.5870E-05,8.1240E-05,5.5040E-05,3.9780E-05,2.4710E-05,2.3880E-05,1.3550E-05,9.1970E-06,6.9190E-06,5.5310E-06,4.6010E-06,3.9350E-06,3.4360E-06,3.0480E-06,2.7390E-06,2.4860E-06,2.2750E-06,2.0970E-06,1.9450E-06,1.8140E-06,1.5960E-06,1.4270E-06,1.2890E-06,1.1750E-06,1.0800E-06,9.9930E-07,9.2970E-07,6.8940E-07,5.4770E-07,4.5440E-07,3.3870E-07,2.7000E-07,1.7920E-07,1.3410E-07,8.9170E-08,6.6800E-08,5.3400E-08,4.4490E-08,3.3350E-08,2.6670E-08,1.7770E-08,1.3320E-08,8.8790E-09,6.6590E-09,5.3260E-09,4.4380E-09,3.3290E-09,2.6620E-09,1.7760E-09,1.3310E-09,8.8760E-10,6.6570E-10,5.3260E-10,4.4380E-10,3.3290E-10,2.6620E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,4.2600E-05,2.2720E-04,8.8640E-04,9.5510E-04,2.4990E-03,4.0250E-03,5.3790E-03,6.5890E-03,7.6670E-03,8.6360E-03,9.5140E-03,1.0310E-02,1.1030E-02,1.1690E-02,1.2310E-02,1.2880E-02,1.3410E-02,1.3910E-02,1.4830E-02,1.5650E-02,1.6390E-02,1.7060E-02,1.7670E-02,1.8240E-02,1.8770E-02,2.0920E-02,2.2540E-02,2.3790E-02,2.5660E-02,2.7000E-02,2.9190E-02,3.0510E-02,3.2090E-02,3.3010E-02,3.3620E-02,3.4050E-02,3.4640E-02,3.5020E-02,3.5580E-02,3.5880E-02,3.6210E-02,3.6390E-02,3.6500E-02,3.6570E-02,3.6680E-02,3.6740E-02,3.6830E-02,3.6890E-02,3.6930E-02,3.6960E-02,3.6980E-02,3.6980E-02,3.6990E-02,3.7010E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0950E-05,4.4700E-05,8.9060E-05,1.3680E-04,1.8440E-04,2.3060E-04,2.7480E-04,3.1700E-04,3.5700E-04,3.9470E-04,4.3040E-04,4.6430E-04,4.9660E-04,5.2720E-04,5.8430E-04,6.3630E-04,6.8430E-04,7.2840E-04,7.6930E-04,8.0740E-04,8.4280E-04,9.9150E-04,1.1060E-03,1.1980E-03,1.3390E-03,1.4430E-03,1.6210E-03,1.7340E-03,1.8770E-03,1.9630E-03,2.0230E-03,2.0680E-03,2.1290E-03,2.1710E-03,2.2310E-03,2.2660E-03,2.3050E-03,2.3280E-03,2.3410E-03,2.3500E-03,2.3640E-03,2.3710E-03,2.3820E-03,2.3890E-03,2.3950E-03,2.3980E-03,2.4010E-03,2.4030E-03,2.4040E-03,2.4060E-03};
	final static double[] TotAttn= {3.1840E+03,1.1050E+03,5.1200E+02,1.7040E+02,1.4240E+02,1.2750E+03,7.5710E+02,4.2250E+02,2.5940E+02,1.1800E+02,6.3150E+01,1.9830E+01,8.6300E+00,2.6960E+00,1.2280E+00,7.0120E-01,4.6640E-01,2.7600E-01,2.0430E-01,1.4270E-01,1.2050E-01,9.9530E-02,8.7760E-02,7.9580E-02,7.3350E-02,6.4190E-02,5.7620E-02,5.7000E-02,5.1500E-02,4.6950E-02,4.0740E-02,4.0300E-02,3.3850E-02,3.0190E-02,2.8020E-02,2.6670E-02,2.5770E-02,2.5170E-02,2.4780E-02,2.4510E-02,2.4340E-02,2.4230E-02,2.4180E-02,2.4170E-02,2.4190E-02,2.4230E-02,2.4360E-02,2.4530E-02,2.4730E-02,2.4950E-02,2.5160E-02,2.5390E-02,2.5620E-02,2.6690E-02,2.7630E-02,2.8420E-02,2.9700E-02,3.0690E-02,3.2410E-02,3.3500E-02,3.4860E-02,3.5670E-02,3.6220E-02,3.6620E-02,3.7160E-02,3.7510E-02,3.8030E-02,3.8320E-02,3.8630E-02,3.8810E-02,3.8910E-02,3.8990E-02,3.9090E-02,3.9150E-02,3.9240E-02,3.9300E-02,3.9340E-02,3.9370E-02,3.9390E-02,3.9390E-02,3.9400E-02,3.9420E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
