package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationW {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.80900E-03,1.80901E-03,1.84000E-03,1.87200E-03,1.87201E-03,2.00000E-03,2.28100E-03,
			2.28101E-03,2.42300E-03,2.57500E-03,2.57501E-03,2.69400E-03,2.82000E-03,2.82001E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.02100E-02,1.02101E-02,1.08500E-02,1.15400E-02,1.15401E-02,1.18200E-02,1.21000E-02,
			1.21001E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,6.95300E-02,6.95310E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1440E+01,1.0960E+01,1.0640E+01,1.0640E+01,1.0600E+01,1.0570E+01,1.0570E+01,1.0430E+01,1.0120E+01,1.0120E+01,9.9720E+00,9.8170E+00,9.8170E+00,9.6900E+00,9.5550E+00,9.5550E+00,9.3620E+00,8.3690E+00,7.4810E+00,6.6950E+00,5.4180E+00,4.4480E+00,4.3630E+00,4.3630E+00,4.1080E+00,3.8590E+00,3.8590E+00,3.7660E+00,3.6750E+00,3.6750E+00,2.8860E+00,2.0360E+00,1.2040E+00,7.9370E-01,5.6140E-01,4.2060E-01,3.3180E-01,3.3180E-01,2.6420E-01,1.8150E-01,8.8770E-02,5.2900E-02,2.5120E-02,1.4610E-02,9.5350E-03,6.7080E-03,3.8360E-03,2.4770E-03,2.3730E-03,1.5970E-03,1.1130E-03,6.2920E-04,6.0240E-04,2.8060E-04,1.5800E-04,1.0120E-04,7.0330E-05,5.1660E-05,3.9570E-05,3.1270E-05,2.5330E-05,2.0930E-05,1.7590E-05,1.4990E-05,1.2930E-05,1.1260E-05,9.8950E-06,7.8190E-06,6.3320E-06,5.2340E-06,4.3990E-06,3.7470E-06,3.2310E-06,2.8150E-06,1.5830E-06,1.0130E-06,7.0360E-07,3.9570E-07,2.5330E-07,1.1260E-07,6.3320E-08,2.8150E-08,1.5830E-08,1.0130E-08,7.0360E-09,3.9570E-09,2.5330E-09,1.1260E-09,6.3320E-10,2.8150E-10,1.5830E-10,1.0130E-10,7.0360E-11,3.9570E-11,2.5330E-11,1.1260E-11,6.3320E-12,2.8150E-12,1.5830E-12,1.0130E-12,7.0360E-13,3.9570E-13,2.5330E-13};
	final static double[] Incoh= {4.3400E-03,7.5140E-03,9.3810E-03,9.3810E-03,9.5660E-03,9.7550E-03,9.7550E-03,1.0520E-02,1.2190E-02,1.2190E-02,1.3020E-02,1.3890E-02,1.3890E-02,1.4570E-02,1.5290E-02,1.5290E-02,1.6330E-02,2.1860E-02,2.7110E-02,3.2030E-02,4.0680E-02,4.7920E-02,4.8610E-02,4.8610E-02,5.0700E-02,5.2800E-02,5.2800E-02,5.3600E-02,5.4410E-02,5.4410E-02,6.1970E-02,7.2460E-02,8.6440E-02,9.4270E-02,9.8630E-02,1.0100E-01,1.0220E-01,1.0220E-01,1.0260E-01,1.0200E-01,9.7380E-02,9.1850E-02,8.2120E-02,7.4580E-02,6.8660E-02,6.3840E-02,5.6410E-02,5.0870E-02,5.0310E-02,4.5560E-02,4.1470E-02,3.5440E-02,3.5020E-02,2.7910E-02,2.3300E-02,2.0120E-02,1.7790E-02,1.5990E-02,1.4550E-02,1.3380E-02,1.2400E-02,1.1560E-02,1.0850E-02,1.0220E-02,9.6660E-03,9.1750E-03,8.7390E-03,7.9860E-03,7.3630E-03,6.8430E-03,6.3940E-03,6.0040E-03,5.6630E-03,5.3620E-03,4.2620E-03,3.5570E-03,3.0650E-03,2.4170E-03,2.0060E-03,1.4290E-03,1.1200E-03,7.9400E-04,6.2170E-04,5.1460E-04,4.4060E-04,3.4430E-04,2.8320E-04,1.9770E-04,1.5310E-04,1.0640E-04,8.2150E-05,6.7150E-05,5.6960E-05,4.3890E-05,3.5830E-05,2.4760E-05,1.9030E-05,1.3130E-05,1.0080E-05,8.2090E-06,6.9380E-06,5.3200E-06,4.3270E-06};
	final static double[] PE= {3.6720E+03,1.6330E+03,1.0970E+03,1.3050E+03,1.9310E+03,2.8540E+03,3.1120E+03,3.9110E+03,2.8180E+03,3.2690E+03,2.8220E+03,2.4360E+03,2.5890E+03,2.3290E+03,2.0940E+03,2.1840E+03,1.8930E+03,9.4800E+02,5.4570E+02,3.4460E+02,1.6510E+02,9.2400E+01,8.7590E+01,2.2900E+02,1.9430E+02,1.6500E+02,2.2730E+02,2.1470E+02,2.0280E+02,2.3440E+02,1.3590E+02,6.3610E+01,2.1440E+01,9.7810E+00,5.2900E+00,3.1910E+00,2.1180E+00,1.0800E+01,7.4420E+00,4.1530E+00,1.3950E+00,6.3970E-01,2.1660E-01,1.0330E-01,5.9620E-02,3.8750E-02,2.0420E-02,1.2830E-02,1.2280E-02,8.2810E-03,5.9060E-03,3.5740E-03,3.4490E-03,1.8750E-03,1.2310E-03,9.0440E-04,7.0980E-04,5.8210E-04,4.9230E-04,4.2580E-04,3.7470E-04,3.3440E-04,3.0190E-04,2.7500E-04,2.5240E-04,2.3330E-04,2.1670E-04,1.8980E-04,1.6880E-04,1.5190E-04,1.3810E-04,1.2660E-04,1.1680E-04,1.0840E-04,7.9790E-05,6.3120E-05,5.2180E-05,3.8750E-05,3.0820E-05,2.0390E-05,1.5230E-05,1.0110E-05,7.5700E-06,6.0470E-06,5.0350E-06,3.7730E-06,3.0160E-06,2.0100E-06,1.5060E-06,1.0040E-06,7.5270E-07,6.0200E-07,5.0180E-07,3.7640E-07,3.0100E-07,2.0070E-07,1.5050E-07,1.0030E-07,7.5240E-08,6.0200E-08,5.0150E-08,3.7600E-08,3.0090E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {3.6830E+03,1.6440E+03,1.1080E+03,1.3150E+03,1.9420E+03,2.8650E+03,3.1230E+03,3.9210E+03,2.8280E+03,3.2790E+03,2.8320E+03,2.4460E+03,2.5990E+03,2.3380E+03,2.1040E+03,2.1940E+03,1.9020E+03,9.5630E+02,5.5320E+02,3.5130E+02,1.7050E+02,9.6900E+01,9.2000E+01,2.3340E+02,1.9850E+02,1.6890E+02,2.3120E+02,2.1850E+02,2.0650E+02,2.3820E+02,1.3890E+02,6.5720E+01,2.2730E+01,1.0670E+01,5.9500E+00,3.7130E+00,2.5520E+00,1.1230E+01,7.8090E+00,4.4370E+00,1.5810E+00,7.8450E-01,3.2380E-01,1.9250E-01,1.3780E-01,1.0930E-01,8.0660E-02,6.6180E-02,6.4970E-02,5.5760E-02,5.0000E-02,4.4330E-02,4.4040E-02,4.0750E-02,4.0380E-02,4.1030E-02,4.2100E-02,4.3370E-02,4.4720E-02,4.6100E-02,4.7470E-02,4.8820E-02,5.0160E-02,5.1440E-02,5.2690E-02,5.3840E-02,5.4990E-02,5.7040E-02,5.8930E-02,6.0690E-02,6.2330E-02,6.3830E-02,6.5240E-02,6.6530E-02,7.2010E-02,7.6190E-02,7.9490E-02,8.4440E-02,8.7960E-02,9.3630E-02,9.7020E-02,1.0100E-01,1.0330E-01,1.0480E-01,1.0590E-01,1.0730E-01,1.0820E-01,1.0960E-01,1.1030E-01,1.1110E-01,1.1150E-01,1.1180E-01,1.1200E-01,1.1220E-01,1.1240E-01,1.1260E-01,1.1280E-01,1.1290E-01,1.1290E-01,1.1300E-01,1.1300E-01,1.1310E-01,1.1310E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
