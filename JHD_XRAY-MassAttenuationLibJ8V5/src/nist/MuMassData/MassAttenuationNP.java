package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationNP {

	final static double[] MeV= {1.00000E-03,1.04200E-03,1.08700E-03,1.08701E-03,1.20100E-03,1.32800E-03,1.32801E-03,1.50000E-03,1.50100E-03,
			1.50101E-03,2.00000E-03,3.00000E-03,3.66600E-03,3.66610E-03,3.75700E-03,3.85000E-03,3.85010E-03,4.00000E-03,4.43500E-03,
			4.43510E-03,5.00000E-03,5.36600E-03,5.36610E-03,5.54200E-03,5.72300E-03,5.72310E-03,6.00000E-03,8.00000E-03,1.00000E-02,
			1.50000E-02,1.76100E-02,1.76101E-02,2.00000E-02,2.16000E-02,2.16001E-02,2.20100E-02,2.24300E-02,2.24301E-02,3.00000E-02,
			4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.18700E-01,1.18701E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.3940E+01,1.3880E+01,1.3830E+01,1.3830E+01,1.3720E+01,1.3540E+01,1.3540E+01,1.3310E+01,1.3310E+01,1.3310E+01,1.2650E+01,1.1340E+01,1.0530E+01,1.0530E+01,1.0420E+01,1.0310E+01,1.0310E+01,1.0140E+01,9.6660E+00,9.6660E+00,9.0920E+00,8.7440E+00,8.7440E+00,8.5860E+00,8.4270E+00,8.4270E+00,8.1900E+00,6.7470E+00,5.6500E+00,3.8440E+00,3.2190E+00,3.2190E+00,2.7720E+00,2.5220E+00,2.5220E+00,2.4640E+00,2.4070E+00,2.4070E+00,1.6350E+00,1.0990E+00,7.9310E-01,5.9730E-01,3.7520E-01,2.6040E-01,1.9530E-01,1.9530E-01,1.3040E-01,7.8120E-02,3.7520E-02,2.2090E-02,1.4540E-02,1.0290E-02,5.9320E-03,3.8510E-03,3.6910E-03,2.4930E-03,1.7450E-03,9.8980E-04,9.4810E-04,4.4330E-04,2.5010E-04,1.6030E-04,1.1140E-04,8.1880E-05,6.2720E-05,4.9560E-05,4.0160E-05,3.3200E-05,2.7890E-05,2.3770E-05,2.0500E-05,1.7850E-05,1.5690E-05,1.2400E-05,1.0050E-05,8.3020E-06,6.9760E-06,5.9450E-06,5.1270E-06,4.4640E-06,2.5120E-06,1.6070E-06,1.1160E-06,6.2800E-07,4.0190E-07,1.7860E-07,1.0050E-07,4.4660E-08,2.5120E-08,1.6070E-08,1.1160E-08,6.2800E-09,4.0190E-09,1.7860E-09,1.0050E-09,4.4660E-10,2.5120E-10,1.6070E-10,1.1160E-10,6.2800E-11,4.0190E-11,1.7860E-11,1.0050E-11,4.4660E-12,2.5120E-12,1.6070E-12,1.1160E-12,6.2800E-13,4.0190E-13};
	final static double[] Incoh= {4.5190E-03,4.7790E-03,5.0450E-03,5.0450E-03,5.6930E-03,6.4500E-03,6.4500E-03,7.4690E-03,7.4720E-03,7.4720E-03,1.0380E-02,1.6030E-02,1.9570E-02,1.9570E-02,2.0040E-02,2.0510E-02,2.0510E-02,2.1260E-02,2.3400E-02,2.3400E-02,2.6010E-02,2.7640E-02,2.7640E-02,2.8380E-02,2.9140E-02,2.9140E-02,3.0280E-02,3.7780E-02,4.4380E-02,5.7670E-02,6.2930E-02,6.2930E-02,6.7070E-02,6.9510E-02,6.9510E-02,7.0100E-02,7.0700E-02,7.0700E-02,7.9290E-02,8.6830E-02,9.1510E-02,9.4250E-02,9.6440E-02,9.6410E-02,9.5450E-02,9.5450E-02,9.2850E-02,8.8050E-02,7.9190E-02,7.2120E-02,6.6480E-02,6.1910E-02,5.4770E-02,4.9440E-02,4.8930E-02,4.4330E-02,4.0370E-02,3.4500E-02,3.4090E-02,2.7180E-02,2.2700E-02,1.9610E-02,1.7330E-02,1.5580E-02,1.4180E-02,1.3040E-02,1.2080E-02,1.1270E-02,1.0570E-02,9.9560E-03,9.4200E-03,8.9420E-03,8.5160E-03,7.7840E-03,7.1790E-03,6.6690E-03,6.2320E-03,5.8510E-03,5.5200E-03,5.2260E-03,4.1540E-03,3.4680E-03,2.9880E-03,2.3560E-03,1.9550E-03,1.3920E-03,1.0920E-03,7.7380E-04,6.0620E-04,5.0170E-04,4.2960E-04,3.3560E-04,2.7590E-04,1.9270E-04,1.4920E-04,1.0370E-04,8.0080E-05,6.5470E-05,5.5510E-05,4.2780E-05,3.4930E-05,2.4130E-05,1.8550E-05,1.2800E-05,9.8240E-06,8.0000E-06,6.7630E-06,5.1850E-06,4.2170E-06};
	final static double[] PE= {6.9380E+03,6.4420E+03,5.9830E+03,6.3660E+03,5.2740E+03,4.3700E+03,4.4280E+03,3.4750E+03,3.4730E+03,3.5390E+03,1.9490E+03,7.9770E+02,5.0430E+02,1.2050E+03,1.1340E+03,1.0670E+03,1.5120E+03,1.3800E+03,1.0700E+03,1.2460E+03,9.2320E+02,7.7080E+02,8.1800E+02,7.5530E+02,6.9740E+02,7.2710E+02,6.4860E+02,3.1810E+02,1.8170E+02,6.4480E+01,4.2580E+01,1.0140E+02,7.1620E+01,5.8230E+01,8.2950E+01,7.8960E+01,7.5150E+01,8.6710E+01,4.1440E+01,1.9590E+01,1.0880E+01,6.6940E+00,3.0940E+00,1.6960E+00,1.0690E+00,4.4790E+00,2.4720E+00,1.1860E+00,4.2450E-01,2.0990E-01,1.2420E-01,8.2210E-02,4.4200E-02,2.8000E-02,2.6830E-02,1.8130E-02,1.2890E-02,7.7870E-03,7.5050E-03,4.0550E-03,2.6450E-03,1.9340E-03,1.5120E-03,1.2360E-03,1.0430E-03,8.9980E-04,7.9080E-04,7.0470E-04,6.3510E-04,5.7800E-04,5.2990E-04,4.8930E-04,4.5420E-04,3.9730E-04,3.5290E-04,3.1730E-04,2.8810E-04,2.6400E-04,2.4350E-04,2.2590E-04,1.6590E-04,1.3110E-04,1.0830E-04,8.0360E-05,6.3870E-05,4.2200E-05,3.1500E-05,2.0920E-05,1.5650E-05,1.2500E-05,1.0410E-05,7.7990E-06,6.2370E-06,4.1540E-06,3.1150E-06,2.0750E-06,1.5560E-06,1.2450E-06,1.0370E-06,7.7760E-07,6.2220E-07,4.1460E-07,3.1100E-07,2.0730E-07,1.5550E-07,1.2440E-07,1.0370E-07,7.7740E-08,6.2190E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {6.9520E+03,6.4560E+03,5.9970E+03,6.3800E+03,5.2880E+03,4.3830E+03,4.4420E+03,3.4890E+03,3.4860E+03,3.5520E+03,1.9620E+03,8.0910E+02,5.1480E+02,1.2160E+03,1.1440E+03,1.0770E+03,1.5220E+03,1.3900E+03,1.0790E+03,1.2560E+03,9.3230E+02,7.7960E+02,8.2680E+02,7.6390E+02,7.0580E+02,7.3550E+02,6.5680E+02,3.2490E+02,1.8740E+02,6.8380E+01,4.5860E+01,1.0460E+02,7.4450E+01,6.0820E+01,8.5540E+01,8.1490E+01,7.7620E+01,8.9180E+01,4.3150E+01,2.0780E+01,1.1760E+01,7.3860E+00,3.5660E+00,2.0530E+00,1.3590E+00,4.7700E+00,2.6960E+00,1.3530E+00,5.4120E-01,3.0410E-01,2.0520E-01,1.5440E-01,1.0490E-01,8.1280E-02,7.9450E-02,6.5420E-02,5.7280E-02,4.9930E-02,4.9570E-02,4.5460E-02,4.4870E-02,4.5590E-02,4.6790E-02,4.8260E-02,4.9810E-02,5.1410E-02,5.3040E-02,5.4640E-02,5.6180E-02,5.7670E-02,5.9120E-02,6.0500E-02,6.1840E-02,6.4270E-02,6.6510E-02,6.8590E-02,7.0520E-02,7.2300E-02,7.3960E-02,7.5510E-02,8.1930E-02,8.6810E-02,9.0670E-02,9.6410E-02,1.0050E-01,1.0710E-01,1.1100E-01,1.1560E-01,1.1830E-01,1.2000E-01,1.2130E-01,1.2300E-01,1.2400E-01,1.2560E-01,1.2650E-01,1.2740E-01,1.2790E-01,1.2820E-01,1.2850E-01,1.2880E-01,1.2900E-01,1.2920E-01,1.2930E-01,1.2950E-01,1.2960E-01,1.2960E-01,1.2960E-01,1.2970E-01,1.2970E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
