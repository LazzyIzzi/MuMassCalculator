package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTE {

	final static double[] MeV= {1.00000E-03,1.00300E-03,1.00600E-03,1.00601E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,4.34100E-03,
			4.34110E-03,4.47500E-03,4.61200E-03,4.61210E-03,4.77300E-03,4.93900E-03,4.93910E-03,5.00000E-03,6.00000E-03,8.00000E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,3.18100E-02,3.18110E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {8.0520E+00,8.0490E+00,8.0470E+00,8.0470E+00,7.6080E+00,7.1220E+00,6.1970E+00,5.4040E+00,5.1630E+00,5.1630E+00,5.0740E+00,4.9840E+00,4.9840E+00,4.8780E+00,4.7710E+00,4.7710E+00,4.7340E+00,4.1700E+00,3.2900E+00,2.6710E+00,1.7600E+00,1.2480E+00,7.0700E-01,6.4890E-01,6.4890E-01,4.6100E-01,3.2730E-01,2.4400E-01,1.4980E-01,1.0150E-01,4.9320E-02,2.9160E-02,1.3590E-02,7.8250E-03,5.0740E-03,3.5560E-03,2.0210E-03,1.3000E-03,1.2450E-03,8.3540E-04,5.8100E-04,3.2760E-04,3.1370E-04,1.4580E-04,8.2070E-05,5.2580E-05,3.6500E-05,2.6820E-05,2.0530E-05,1.6230E-05,1.3140E-05,1.0860E-05,9.1280E-06,7.7780E-06,6.7060E-06,5.8430E-06,5.1350E-06,4.0560E-06,3.2860E-06,2.7160E-06,2.2820E-06,1.9440E-06,1.6760E-06,1.4610E-06,8.2170E-07,5.2580E-07,3.6510E-07,2.0530E-07,1.3140E-07,5.8430E-08,3.2860E-08,1.4600E-08,8.2170E-09,5.2580E-09,3.6510E-09,2.0530E-09,1.3140E-09,5.8430E-10,3.2860E-10,1.4600E-10,8.2170E-11,5.2580E-11,3.6510E-11,2.0530E-11,1.3140E-11,5.8430E-12,3.2860E-12,1.4600E-12,8.2170E-13,5.2580E-13,3.6510E-13,2.0530E-13,1.3140E-13};
	final static double[] Incoh= {4.7430E-03,4.7670E-03,4.7900E-03,4.7900E-03,8.9480E-03,1.3260E-02,2.1370E-02,2.8450E-02,3.0630E-02,3.0630E-02,3.1460E-02,3.2310E-02,3.2310E-02,3.3270E-02,3.4250E-02,3.4250E-02,3.4610E-02,4.0110E-02,4.9840E-02,5.8240E-02,7.4190E-02,8.4620E-02,9.6990E-02,9.8450E-02,9.8450E-02,1.0350E-01,1.0700E-01,1.0870E-01,1.0910E-01,1.0750E-01,1.0120E-01,9.4860E-02,8.4240E-02,7.6270E-02,7.0040E-02,6.5040E-02,5.7340E-02,5.1630E-02,5.1110E-02,4.6230E-02,4.2050E-02,3.5920E-02,3.5480E-02,2.8270E-02,2.3590E-02,2.0380E-02,1.8010E-02,1.6190E-02,1.4740E-02,1.3550E-02,1.2550E-02,1.1710E-02,1.0980E-02,1.0350E-02,9.7880E-03,9.2930E-03,8.8490E-03,8.0850E-03,7.4570E-03,6.9280E-03,6.4700E-03,6.0790E-03,5.7340E-03,5.4270E-03,4.3140E-03,3.6010E-03,3.1030E-03,2.4470E-03,2.0310E-03,1.4470E-03,1.1340E-03,8.0370E-04,6.2960E-04,5.2100E-04,4.4620E-04,3.4850E-04,2.8670E-04,2.0020E-04,1.5500E-04,1.0770E-04,8.3160E-05,6.8010E-05,5.7670E-05,4.4430E-05,3.6270E-05,2.5070E-05,1.9270E-05,1.3290E-05,1.0200E-05,8.3110E-06,7.0230E-06,5.3850E-06,4.3820E-06};
	final static double[] PE= {8.4240E+03,8.3720E+03,8.3210E+03,8.6750E+03,3.6000E+03,1.8250E+03,6.7300E+02,3.2430E+02,2.6260E+02,7.8300E+02,7.3750E+02,6.9470E+02,9.3970E+02,8.6770E+02,8.0140E+02,9.2460E+02,8.9670E+02,5.6780E+02,2.6680E+02,1.4740E+02,4.8940E+01,2.2080E+01,7.0750E+00,5.9890E+00,3.6450E+01,2.0080E+01,1.1020E+01,6.6880E+00,2.9960E+00,1.5920E+00,4.9890E-01,2.1880E-01,7.0040E-02,3.2240E-02,1.8170E-02,1.1630E-02,6.0170E-03,3.7590E-03,3.5770E-03,2.4130E-03,1.7270E-03,1.0520E-03,1.0140E-03,5.5780E-04,3.6970E-04,2.7350E-04,2.1590E-04,1.7780E-04,1.5090E-04,1.3090E-04,1.1550E-04,1.0330E-04,9.3400E-05,8.5190E-05,7.8340E-05,7.2440E-05,6.7400E-05,5.9140E-05,5.2670E-05,4.7480E-05,4.3180E-05,3.9620E-05,3.6590E-05,3.3990E-05,2.5070E-05,1.9860E-05,1.6440E-05,1.2230E-05,9.7320E-06,6.4420E-06,4.8140E-06,3.2000E-06,2.3960E-06,1.9140E-06,1.5940E-06,1.1950E-06,9.5520E-07,6.3620E-07,4.7710E-07,3.1800E-07,2.3840E-07,1.9070E-07,1.5900E-07,1.1920E-07,9.5330E-08,6.3570E-08,4.7670E-08,3.1780E-08,2.3830E-08,1.9070E-08,1.5890E-08,1.1920E-08,9.5330E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.7790E-04,8.2400E-04,2.7920E-03,2.9830E-03,7.0700E-03,1.0860E-02,1.4130E-02,1.6950E-02,1.9450E-02,2.1710E-02,2.3760E-02,2.5640E-02,2.7360E-02,2.8960E-02,3.0450E-02,3.1820E-02,3.3090E-02,3.4260E-02,3.6420E-02,3.8340E-02,4.0090E-02,4.1670E-02,4.3120E-02,4.4440E-02,4.5670E-02,5.0640E-02,5.4320E-02,5.7150E-02,6.1400E-02,6.4370E-02,6.9140E-02,7.2020E-02,7.5320E-02,7.7260E-02,7.8530E-02,7.9430E-02,8.0610E-02,8.1410E-02,8.2500E-02,8.3110E-02,8.3770E-02,8.4150E-02,8.4390E-02,8.4530E-02,8.4720E-02,8.4860E-02,8.5050E-02,8.5140E-02,8.5230E-02,8.5280E-02,8.5330E-02,8.5330E-02,8.5380E-02,8.5380E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,9.8920E-06,4.0340E-05,8.0280E-05,1.2320E-04,1.6590E-04,2.0720E-04,2.4670E-04,2.8430E-04,3.1980E-04,3.5330E-04,3.8480E-04,4.1480E-04,4.4310E-04,4.7010E-04,5.2010E-04,5.6540E-04,6.0690E-04,6.4520E-04,6.8010E-04,7.1270E-04,7.4290E-04,8.6840E-04,9.6370E-04,1.0390E-03,1.1530E-03,1.2350E-03,1.3710E-03,1.4570E-03,1.5620E-03,1.6240E-03,1.6670E-03,1.6990E-03,1.7420E-03,1.7710E-03,1.8140E-03,1.8380E-03,1.8650E-03,1.8800E-03,1.8900E-03,1.8960E-03,1.9050E-03,1.9110E-03,1.9180E-03,1.9230E-03,1.9270E-03,1.9300E-03,1.9310E-03,1.9330E-03,1.9340E-03,1.9350E-03};
	final static double[] TotAttn= {8.4320E+03,8.3800E+03,8.3290E+03,8.6830E+03,3.6080E+03,1.8320E+03,6.7920E+02,3.2970E+02,2.6780E+02,7.8820E+02,7.4260E+02,6.9970E+02,9.4470E+02,8.7260E+02,8.0620E+02,9.2940E+02,9.0150E+02,5.7200E+02,2.7020E+02,1.5010E+02,5.0780E+01,2.3410E+01,7.8790E+00,6.7360E+00,3.7200E+01,2.0650E+01,1.1450E+01,7.0400E+00,3.2550E+00,1.8010E+00,6.4940E-01,3.4290E-01,1.6790E-01,1.1630E-01,9.3280E-02,8.0220E-02,6.5380E-02,5.6690E-02,5.5940E-02,4.9660E-02,4.5180E-02,4.0090E-02,3.9790E-02,3.6060E-02,3.4940E-02,3.4920E-02,3.5340E-02,3.6020E-02,3.6830E-02,3.7700E-02,3.8600E-02,3.9510E-02,4.0400E-02,4.1270E-02,4.2110E-02,4.2900E-02,4.3660E-02,4.5080E-02,4.6420E-02,4.7670E-02,4.8830E-02,4.9920E-02,5.0930E-02,5.1870E-02,5.5850E-02,5.8910E-02,6.1310E-02,6.5010E-02,6.7650E-02,7.1970E-02,7.4620E-02,7.7690E-02,7.9520E-02,8.0720E-02,8.1580E-02,8.2700E-02,8.3470E-02,8.4510E-02,8.5100E-02,8.5740E-02,8.6110E-02,8.6340E-02,8.6480E-02,8.6670E-02,8.6800E-02,8.6990E-02,8.7080E-02,8.7180E-02,8.7220E-02,8.7270E-02,8.7270E-02,8.7320E-02,8.7320E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
