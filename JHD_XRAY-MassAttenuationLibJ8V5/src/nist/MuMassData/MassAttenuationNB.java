package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationNB {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.37000E-03,2.37001E-03,2.41700E-03,2.46500E-03,2.46501E-03,2.57900E-03,
			2.69800E-03,2.69801E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,1.89900E-02,
			1.89901E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {6.8130E+00,6.4030E+00,5.9730E+00,5.6570E+00,5.6570E+00,5.6220E+00,5.5870E+00,5.5870E+00,5.4960E+00,5.3980E+00,5.3980E+00,5.1610E+00,4.4640E+00,3.8900E+00,3.4240E+00,2.7280E+00,2.2260E+00,1.4110E+00,1.0330E+00,1.0330E+00,9.6190E-01,5.4360E-01,3.5350E-01,2.4680E-01,1.8160E-01,1.1070E-01,7.5000E-02,3.6230E-02,2.1220E-02,9.8070E-03,5.6230E-03,3.6380E-03,2.5440E-03,1.4420E-03,9.2560E-04,8.8670E-04,5.9410E-04,4.1310E-04,2.3270E-04,2.2280E-04,1.0350E-04,5.8250E-05,3.7290E-05,2.5900E-05,1.9020E-05,1.4570E-05,1.1510E-05,9.3210E-06,7.7070E-06,6.4750E-06,5.5170E-06,4.7580E-06,4.1450E-06,3.6420E-06,2.8780E-06,2.3320E-06,1.9260E-06,1.6190E-06,1.3790E-06,1.1890E-06,1.0360E-06,5.8280E-07,3.7300E-07,2.5900E-07,1.4570E-07,9.3280E-08,4.1440E-08,2.3310E-08,1.0360E-08,5.8280E-09,3.7300E-09,2.5900E-09,1.4570E-09,9.3210E-10,4.1440E-10,2.3310E-10,1.0360E-10,5.8280E-11,3.7300E-11,2.5900E-11,1.4570E-11,9.3210E-12,4.1440E-12,2.3310E-12,1.0360E-12,5.8280E-13,3.7300E-13,2.5900E-13,1.4570E-13,9.3210E-14};
	final static double[] Incoh= {6.8380E-03,1.1780E-02,1.6500E-02,1.9890E-02,1.9890E-02,2.0300E-02,2.0720E-02,2.0720E-02,2.1730E-02,2.2780E-02,2.2780E-02,2.5390E-02,3.3520E-02,4.0960E-02,4.7730E-02,5.9170E-02,6.8250E-02,8.4910E-02,9.4440E-02,9.4440E-02,9.6450E-02,1.1010E-01,1.1710E-01,1.2040E-01,1.2170E-01,1.2120E-01,1.1890E-01,1.1120E-01,1.0380E-01,9.1910E-02,8.2970E-02,7.6100E-02,7.0590E-02,6.2180E-02,5.5980E-02,5.5390E-02,5.0110E-02,4.5570E-02,3.8910E-02,3.8430E-02,3.0630E-02,2.5550E-02,2.2070E-02,1.9510E-02,1.7530E-02,1.5960E-02,1.4670E-02,1.3590E-02,1.2680E-02,1.1890E-02,1.1200E-02,1.0600E-02,1.0060E-02,9.5800E-03,8.7570E-03,8.0760E-03,7.5000E-03,7.0070E-03,6.5790E-03,6.2090E-03,5.8790E-03,4.6720E-03,3.9000E-03,3.3600E-03,2.6500E-03,2.1990E-03,1.5670E-03,1.2280E-03,8.7050E-04,6.8190E-04,5.6430E-04,4.8320E-04,3.7740E-04,3.1050E-04,2.1680E-04,1.6780E-04,1.1670E-04,9.0100E-05,7.3630E-05,6.2450E-05,4.8110E-05,3.9280E-05,2.7150E-05,2.0870E-05,1.4390E-05,1.1050E-05,8.9970E-06,7.6030E-06,5.8320E-06,4.7450E-06};
	final static double[] PE= {4.5920E+03,1.7800E+03,8.8350E+02,5.7880E+02,2.1750E+03,2.0480E+03,1.9300E+03,2.6880E+03,2.4070E+03,2.1560E+03,2.4640E+03,1.9010E+03,9.1200E+02,5.0940E+02,3.1370E+02,1.4410E+02,7.8110E+01,2.5220E+01,1.2960E+01,8.6660E+01,7.6030E+01,2.6000E+01,1.1760E+01,6.2760E+00,3.7290E+00,1.6200E+00,8.4270E-01,2.5490E-01,1.0940E-01,3.4020E-02,1.5390E-02,8.5820E-03,5.4520E-03,2.8020E-03,1.7460E-03,1.6610E-03,1.1210E-03,8.0510E-04,4.9210E-04,4.7490E-04,2.6320E-04,1.7550E-04,1.3040E-04,1.0330E-04,8.5240E-05,7.2530E-05,6.3010E-05,5.5690E-05,4.9870E-05,4.5130E-05,4.1210E-05,3.7910E-05,3.5100E-05,3.2670E-05,2.8690E-05,2.5570E-05,2.3060E-05,2.1000E-05,1.9270E-05,1.7810E-05,1.6550E-05,1.2220E-05,9.6910E-06,8.0310E-06,5.9750E-06,4.7580E-06,3.1520E-06,2.3570E-06,1.5660E-06,1.1730E-06,9.3730E-07,7.8040E-07,5.8510E-07,4.6790E-07,3.1170E-07,2.3370E-07,1.5580E-07,1.1680E-07,9.3400E-08,7.7850E-08,5.8380E-08,4.6700E-08,3.1130E-08,2.3350E-08,1.5560E-08,1.1670E-08,9.3400E-09,7.7850E-09,5.8370E-09,4.6700E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.3000E-04,6.2060E-04,2.2120E-03,2.3690E-03,5.8540E-03,9.1530E-03,1.2040E-02,1.4550E-02,1.6790E-02,1.8810E-02,2.0640E-02,2.2320E-02,2.3850E-02,2.5260E-02,2.6560E-02,2.7750E-02,2.8860E-02,2.9910E-02,3.1810E-02,3.3520E-02,3.5070E-02,3.6490E-02,3.7770E-02,3.8950E-02,4.0040E-02,4.4450E-02,4.7710E-02,5.0260E-02,5.4030E-02,5.6700E-02,6.0960E-02,6.3500E-02,6.6440E-02,6.8190E-02,6.9290E-02,7.0130E-02,7.1170E-02,7.1880E-02,7.2860E-02,7.3440E-02,7.4020E-02,7.4350E-02,7.4540E-02,7.4670E-02,7.4870E-02,7.5000E-02,7.5130E-02,7.5260E-02,7.5320E-02,7.5380E-02,7.5380E-02,7.5380E-02,7.5450E-02,7.5450E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0710E-05,4.3730E-05,8.7050E-05,1.3360E-04,1.8000E-04,2.2490E-04,2.6790E-04,3.0870E-04,3.4740E-04,3.8390E-04,4.1830E-04,4.5100E-04,4.8200E-04,5.1150E-04,5.6610E-04,6.1580E-04,6.6120E-04,7.0330E-04,7.4150E-04,7.7780E-04,8.1090E-04,9.4960E-04,1.0550E-03,1.1380E-03,1.2640E-03,1.3560E-03,1.5090E-03,1.6060E-03,1.7240E-03,1.7950E-03,1.8440E-03,1.8800E-03,1.9300E-03,1.9630E-03,2.0130E-03,2.0410E-03,2.0720E-03,2.0900E-03,2.1010E-03,2.1090E-03,2.1200E-03,2.1260E-03,2.1350E-03,2.1400E-03,2.1460E-03,2.1490E-03,2.1510E-03,2.1510E-03,2.1530E-03,2.1540E-03};
	final static double[] TotAttn= {4.5990E+03,1.7860E+03,8.8950E+02,5.8440E+02,2.1810E+03,2.0540E+03,1.9350E+03,2.6940E+03,2.4130E+03,2.1610E+03,2.4700E+03,1.9060E+03,9.1650E+02,5.1330E+02,3.1720E+02,1.4690E+02,8.0400E+01,2.6720E+01,1.4090E+01,8.7790E+01,7.7090E+01,2.6650E+01,1.2240E+01,6.6440E+00,4.0320E+00,1.8520E+00,1.0370E+00,4.0230E-01,2.3440E-01,1.3570E-01,1.0400E-01,8.8320E-02,7.8580E-02,6.6420E-02,5.8660E-02,5.7940E-02,5.1950E-02,4.7410E-02,4.1850E-02,4.1500E-02,3.6860E-02,3.4980E-02,3.4360E-02,3.4320E-02,3.4610E-02,3.5080E-02,3.5650E-02,3.6280E-02,3.6930E-02,3.7590E-02,3.8220E-02,3.8840E-02,3.9450E-02,4.0040E-02,4.1170E-02,4.2240E-02,4.3260E-02,4.4220E-02,4.5110E-02,4.5960E-02,4.6750E-02,5.0080E-02,5.2680E-02,5.4770E-02,5.7950E-02,6.0260E-02,6.4040E-02,6.6340E-02,6.9040E-02,7.0670E-02,7.1700E-02,7.2500E-02,7.3480E-02,7.4160E-02,7.5090E-02,7.5650E-02,7.6210E-02,7.6530E-02,7.6720E-02,7.6840E-02,7.7030E-02,7.7160E-02,7.7290E-02,7.7420E-02,7.7480E-02,7.7540E-02,7.7540E-02,7.7540E-02,7.7610E-02,7.7610E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
