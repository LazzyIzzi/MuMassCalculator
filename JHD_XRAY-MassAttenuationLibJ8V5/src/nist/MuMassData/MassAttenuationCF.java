package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationCF {

	final static double[] MeV= {1.00000E-03,1.13100E-03,1.27900E-03,1.27901E-03,1.50000E-03,1.61600E-03,1.61601E-03,1.70500E-03,1.79900E-03,
			1.79901E-03,2.00000E-03,3.00000E-03,4.00000E-03,4.25300E-03,4.25310E-03,4.37300E-03,4.49700E-03,4.49710E-03,5.00000E-03,
			5.10900E-03,5.10910E-03,6.00000E-03,6.35900E-03,6.35910E-03,6.55400E-03,6.75400E-03,6.75410E-03,8.00000E-03,1.00000E-02,
			1.50000E-02,1.99300E-02,1.99301E-02,2.00000E-02,2.52500E-02,2.52501E-02,2.56800E-02,2.61100E-02,2.61101E-02,3.00000E-02,
			4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.36000E-01,1.36001E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.4700E+01,1.4550E+01,1.4380E+01,1.4380E+01,1.4090E+01,1.3940E+01,1.3940E+01,1.3830E+01,1.3710E+01,1.3710E+01,1.3430E+01,1.2100E+01,1.0830E+01,1.0530E+01,1.0530E+01,1.0390E+01,1.0250E+01,1.0250E+01,9.7000E+00,9.5870E+00,9.5870E+00,8.7210E+00,8.4040E+00,8.4040E+00,8.2390E+00,8.0730E+00,8.0730E+00,7.1570E+00,5.9890E+00,4.0920E+00,2.9860E+00,2.9860E+00,2.9740E+00,2.2120E+00,2.2120E+00,2.1640E+00,2.1170E+00,2.1170E+00,1.7600E+00,1.1800E+00,8.5670E-01,6.4780E-01,4.0730E-01,2.8280E-01,1.6890E-01,1.6890E-01,1.4250E-01,8.5550E-02,4.1180E-02,2.4320E-02,1.6060E-02,1.1390E-02,6.5790E-03,4.2810E-03,4.1040E-03,2.7750E-03,1.9440E-03,1.1050E-03,1.0590E-03,4.9580E-04,2.7990E-04,1.7950E-04,1.2480E-04,9.1720E-05,7.0250E-05,5.5530E-05,4.5000E-05,3.7200E-05,3.1250E-05,2.6620E-05,2.2970E-05,2.0010E-05,1.7590E-05,1.3900E-05,1.1260E-05,9.3040E-06,7.8170E-06,6.6610E-06,5.7440E-06,5.0030E-06,2.8160E-06,1.8020E-06,1.2510E-06,7.0370E-07,4.5040E-07,2.0020E-07,1.1260E-07,5.0030E-08,2.8160E-08,1.8020E-08,1.2510E-08,7.0370E-09,4.5040E-09,2.0020E-09,1.1260E-09,5.0030E-10,2.8160E-10,1.8020E-10,1.2510E-10,7.0370E-11,4.5040E-11,2.0020E-11,1.1260E-11,5.0030E-12,2.8160E-12,1.8020E-12,1.2510E-12,7.0370E-13,4.5040E-13};
	final static double[] Incoh= {4.0800E-03,4.7810E-03,5.5880E-03,5.5880E-03,6.8000E-03,7.4400E-03,7.4400E-03,7.9310E-03,8.4480E-03,8.4480E-03,9.5530E-03,1.4920E-02,1.9910E-02,2.1100E-02,2.1100E-02,2.1660E-02,2.2230E-02,2.2230E-02,2.4460E-02,2.4940E-02,2.4940E-02,2.8640E-02,3.0050E-02,3.0050E-02,3.0800E-02,3.1560E-02,3.1560E-02,3.6050E-02,4.2570E-02,5.5930E-02,6.5410E-02,6.5410E-02,6.5500E-02,7.2770E-02,7.2770E-02,7.3280E-02,7.3780E-02,7.3780E-02,7.7810E-02,8.5270E-02,8.9920E-02,9.2750E-02,9.5100E-02,9.5200E-02,9.2850E-02,9.2850E-02,9.1690E-02,8.7210E-02,7.8530E-02,7.1570E-02,6.6030E-02,6.1500E-02,5.4420E-02,4.9150E-02,4.8640E-02,4.4080E-02,4.0130E-02,3.4320E-02,3.3890E-02,2.7060E-02,2.2580E-02,1.9500E-02,1.7250E-02,1.5500E-02,1.4110E-02,1.2970E-02,1.2020E-02,1.1210E-02,1.0520E-02,9.9060E-03,9.3710E-03,8.8980E-03,8.4740E-03,7.7450E-03,7.1430E-03,6.6340E-03,6.1980E-03,5.8210E-03,5.4900E-03,5.2000E-03,4.1330E-03,3.4490E-03,2.9720E-03,2.3440E-03,1.9450E-03,1.3850E-03,1.0860E-03,7.6990E-04,6.0300E-04,4.9910E-04,4.2740E-04,3.3390E-04,2.7460E-04,1.9180E-04,1.4840E-04,1.0320E-04,7.9650E-05,6.5120E-05,5.5240E-05,4.2550E-05,3.4730E-05,2.4010E-05,1.8460E-05,1.2730E-05,9.7740E-06,7.9580E-06,6.7280E-06,5.1590E-06,4.1970E-06};
	final static double[] PE= {7.8790E+03,6.3930E+03,5.1880E+03,5.5210E+03,4.0490E+03,3.4830E+03,3.5230E+03,3.1540E+03,2.8230E+03,2.8730E+03,2.2980E+03,9.4210E+02,4.8620E+02,4.2120E+02,9.4430E+02,8.9290E+02,8.4430E+02,1.1740E+03,9.1770E+02,8.6920E+02,1.0140E+03,6.7660E+02,5.8160E+02,6.1670E+02,5.7210E+02,5.3080E+02,5.5290E+02,3.6430E+02,2.0870E+02,7.4710E+01,3.6000E+01,8.3010E+01,8.2720E+01,4.4350E+01,6.3730E+01,6.1020E+01,5.8430E+01,6.7350E+01,4.7390E+01,2.2780E+01,1.2760E+01,7.9030E+00,3.6890E+00,2.0360E+00,8.9700E-01,3.5470E+00,2.7920E+00,1.3500E+00,4.9170E-01,2.4580E-01,1.4670E-01,9.7670E-02,5.2860E-02,3.3600E-02,3.2190E-02,2.1780E-02,1.5480E-02,9.3450E-03,9.0060E-03,4.8590E-03,3.1660E-03,2.3110E-03,1.8050E-03,1.4750E-03,1.2430E-03,1.0730E-03,9.4210E-04,8.3920E-04,7.5620E-04,6.8790E-04,6.3060E-04,5.8210E-04,5.4040E-04,4.7230E-04,4.1950E-04,3.7700E-04,3.4250E-04,3.1350E-04,2.8930E-04,2.6820E-04,1.9690E-04,1.5550E-04,1.2850E-04,9.5290E-05,7.5740E-05,5.0030E-05,3.7370E-05,2.4800E-05,1.8550E-05,1.4820E-05,1.2340E-05,9.2460E-06,7.3920E-06,4.9240E-06,3.6910E-06,2.4580E-06,1.8440E-06,1.4750E-06,1.2290E-06,9.2170E-07,7.3730E-07,4.9150E-07,3.6860E-07,2.4560E-07,1.8430E-07,1.4740E-07,1.2290E-07,9.2150E-08,7.3710E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {7.8940E+03,6.4080E+03,5.2020E+03,5.5360E+03,4.0630E+03,3.4970E+03,3.5370E+03,3.1670E+03,2.8370E+03,2.8870E+03,2.3110E+03,9.5420E+02,4.9700E+02,4.3170E+02,9.5480E+02,9.0330E+02,8.5450E+02,1.1840E+03,9.2740E+02,8.7880E+02,1.0240E+03,6.8540E+02,5.9010E+02,6.2510E+02,5.8040E+02,5.3890E+02,5.6100E+02,3.7150E+02,2.1470E+02,7.8860E+01,3.9050E+01,8.6060E+01,8.5760E+01,4.6630E+01,6.6010E+01,6.3260E+01,6.0620E+01,6.9540E+01,4.9230E+01,2.4040E+01,1.3700E+01,8.6440E+00,4.1910E+00,2.4140E+00,1.1590E+00,3.8090E+00,3.0260E+00,1.5230E+00,6.1140E-01,3.4170E-01,2.2880E-01,1.7060E-01,1.1390E-01,8.7030E-02,8.4930E-02,6.9130E-02,6.0040E-02,5.1960E-02,5.1530E-02,4.6970E-02,4.6150E-02,4.6780E-02,4.7860E-02,4.9320E-02,5.0900E-02,5.2540E-02,5.4190E-02,5.5830E-02,5.7420E-02,5.8980E-02,6.0470E-02,6.1890E-02,6.3270E-02,6.5800E-02,6.8110E-02,7.0260E-02,7.2270E-02,7.4150E-02,7.5860E-02,7.7470E-02,8.4140E-02,8.9230E-02,9.3260E-02,9.9240E-02,1.0350E-01,1.1030E-01,1.1440E-01,1.1910E-01,1.2190E-01,1.2370E-01,1.2500E-01,1.2670E-01,1.2780E-01,1.2940E-01,1.3030E-01,1.3120E-01,1.3180E-01,1.3220E-01,1.3240E-01,1.3270E-01,1.3290E-01,1.3310E-01,1.3330E-01,1.3340E-01,1.3350E-01,1.3360E-01,1.3360E-01,1.3360E-01,1.3360E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
