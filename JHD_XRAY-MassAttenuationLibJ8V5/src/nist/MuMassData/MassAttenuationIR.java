package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationIR {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.04000E-03,2.04001E-03,2.07800E-03,2.11600E-03,2.11601E-03,2.32300E-03,
			2.55100E-03,2.55101E-03,2.72400E-03,2.90900E-03,2.90901E-03,3.00000E-03,3.17400E-03,3.17410E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.12200E-02,1.12201E-02,1.19900E-02,1.28200E-02,1.28201E-02,1.31200E-02,1.34200E-02,
			1.34201E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,7.61100E-02,7.61110E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1890E+01,1.1410E+01,1.0870E+01,1.0820E+01,1.0820E+01,1.0780E+01,1.0730E+01,1.0730E+01,1.0510E+01,1.0250E+01,1.0250E+01,1.0050E+01,9.8440E+00,9.8440E+00,9.7430E+00,9.5550E+00,9.5550E+00,8.6970E+00,7.7700E+00,6.9610E+00,5.6580E+00,4.6680E+00,4.1820E+00,4.1820E+00,3.9010E+00,3.6310E+00,3.6310E+00,3.5440E+00,3.4590E+00,3.4590E+00,3.0530E+00,2.1510E+00,1.2710E+00,8.4280E-01,5.9680E-01,4.4680E-01,3.0480E-01,3.0480E-01,2.8090E-01,1.9340E-01,9.4830E-02,5.6520E-02,2.6900E-02,1.5670E-02,1.0240E-02,7.2090E-03,4.1260E-03,2.6670E-03,2.5550E-03,1.7200E-03,1.2000E-03,6.7830E-04,6.4950E-04,3.0260E-04,1.7050E-04,1.0920E-04,7.5850E-05,5.5730E-05,4.2700E-05,3.3740E-05,2.7330E-05,2.2590E-05,1.8980E-05,1.6170E-05,1.3940E-05,1.2150E-05,1.0680E-05,8.4370E-06,6.8330E-06,5.6490E-06,4.7460E-06,4.0450E-06,3.4870E-06,3.0370E-06,1.7080E-06,1.0930E-06,7.5940E-07,4.2700E-07,2.7330E-07,1.2150E-07,6.8330E-08,3.0370E-08,1.7080E-08,1.0930E-08,7.5940E-09,4.2700E-09,2.7330E-09,1.2150E-09,6.8330E-10,3.0370E-10,1.7080E-10,1.0930E-10,7.5940E-11,4.2700E-11,2.7330E-11,1.2150E-11,6.8330E-12,3.0370E-12,1.7080E-12,1.0930E-12,7.5940E-13,4.2700E-13,2.7330E-13};
	final static double[] Incoh= {3.9320E-03,6.9990E-03,9.9660E-03,1.0200E-02,1.0200E-02,1.0420E-02,1.0650E-02,1.0650E-02,1.1840E-02,1.3120E-02,1.3120E-02,1.4090E-02,1.5130E-02,1.5130E-02,1.5630E-02,1.6590E-02,1.6590E-02,2.1030E-02,2.6130E-02,3.0980E-02,3.9690E-02,4.6990E-02,5.0910E-02,5.0910E-02,5.3130E-02,5.5390E-02,5.5390E-02,5.6190E-02,5.6990E-02,5.6990E-02,6.0870E-02,7.1090E-02,8.4900E-02,9.2830E-02,9.7280E-02,9.9750E-02,1.0130E-01,1.0130E-01,1.0140E-01,1.0100E-01,9.6560E-02,9.1170E-02,8.1580E-02,7.4130E-02,6.8270E-02,6.3500E-02,5.6110E-02,5.0600E-02,5.0060E-02,4.5330E-02,4.1260E-02,3.5280E-02,3.4840E-02,2.7780E-02,2.3180E-02,2.0030E-02,1.7700E-02,1.5910E-02,1.4480E-02,1.3310E-02,1.2340E-02,1.1510E-02,1.0790E-02,1.0170E-02,9.6180E-03,9.1330E-03,8.6970E-03,7.9480E-03,7.3310E-03,6.8080E-03,6.3630E-03,5.9750E-03,5.6360E-03,5.3350E-03,4.2420E-03,3.5400E-03,3.0500E-03,2.4050E-03,1.9970E-03,1.4220E-03,1.1150E-03,7.9010E-04,6.1880E-04,5.1220E-04,4.3860E-04,3.4240E-04,2.8180E-04,1.9680E-04,1.5230E-04,1.0590E-04,8.1770E-05,6.6860E-05,5.6670E-05,4.3670E-05,3.5650E-05,2.4640E-05,1.8940E-05,1.3060E-05,1.0030E-05,8.1680E-06,6.9050E-06,5.2950E-06,4.3080E-06};
	final static double[] PE= {4.2290E+03,1.8870E+03,1.0210E+03,9.7750E+02,1.0520E+03,1.6010E+03,2.4340E+03,2.5660E+03,2.4880E+03,2.4130E+03,2.7890E+03,2.3800E+03,2.0310E+03,2.1560E+03,2.0020E+03,1.7580E+03,1.8330E+03,1.0540E+03,6.1000E+02,3.8660E+02,1.8570E+02,1.0430E+02,7.7320E+01,1.9960E+02,1.6650E+02,1.3890E+02,1.9230E+02,1.8190E+02,1.7210E+02,1.9890E+02,1.4990E+02,7.0960E+01,2.4100E+01,1.1050E+01,6.0000E+00,3.6280E+00,1.8780E+00,9.3200E+00,8.2020E+00,4.5620E+00,1.5490E+00,7.1490E-01,2.4410E-01,1.1700E-01,6.7770E-02,4.4170E-02,2.3340E-02,1.4680E-02,1.4050E-02,9.4770E-03,6.7550E-03,4.0880E-03,3.9410E-03,2.1410E-03,1.4040E-03,1.0300E-03,8.0830E-04,6.6260E-04,5.6020E-04,4.8440E-04,4.2610E-04,3.8030E-04,3.4310E-04,3.1250E-04,2.8680E-04,2.6500E-04,2.4620E-04,2.1550E-04,1.9160E-04,1.7240E-04,1.5670E-04,1.4360E-04,1.3260E-04,1.2300E-04,9.0510E-05,7.1560E-05,5.9180E-05,4.3960E-05,3.4930E-05,2.3110E-05,1.7260E-05,1.1460E-05,8.5780E-06,6.8550E-06,5.7080E-06,4.2760E-06,3.4180E-06,2.2770E-06,1.7070E-06,1.1380E-06,8.5310E-07,6.8240E-07,5.6860E-07,4.2640E-07,3.4120E-07,2.2740E-07,1.7050E-07,1.1370E-07,8.5250E-08,6.8200E-08,5.6830E-08,4.2640E-08,3.4090E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {4.2410E+03,1.8980E+03,1.0320E+03,9.8830E+02,1.0630E+03,1.6120E+03,2.4450E+03,2.5770E+03,2.4990E+03,2.4240E+03,2.7990E+03,2.3900E+03,2.0410E+03,2.1660E+03,2.0110E+03,1.7670E+03,1.8430E+03,1.0630E+03,6.1780E+02,3.9360E+02,1.9140E+02,1.0900E+02,8.1550E+01,2.0380E+02,1.7050E+02,1.4260E+02,1.9600E+02,1.8550E+02,1.7560E+02,2.0250E+02,1.5300E+02,7.3180E+01,2.5460E+01,1.1990E+01,6.6940E+00,4.1740E+00,2.2840E+00,9.7270E+00,8.5840E+00,4.8560E+00,1.7400E+00,8.6260E-01,3.5250E-01,2.0680E-01,1.4630E-01,1.1490E-01,8.3570E-02,6.7940E-02,6.6670E-02,5.6870E-02,5.0840E-02,4.5020E-02,4.4700E-02,4.1390E-02,4.1040E-02,4.1740E-02,4.2860E-02,4.4180E-02,4.5580E-02,4.7000E-02,4.8440E-02,4.9820E-02,5.1190E-02,5.2510E-02,5.3780E-02,5.5020E-02,5.6160E-02,5.8300E-02,6.0240E-02,6.2060E-02,6.3730E-02,6.5300E-02,6.6740E-02,6.8090E-02,7.3720E-02,7.8040E-02,8.1430E-02,8.6480E-02,9.0120E-02,9.5920E-02,9.9380E-02,1.0350E-01,1.0580E-01,1.0730E-01,1.0840E-01,1.0990E-01,1.1090E-01,1.1220E-01,1.1300E-01,1.1380E-01,1.1420E-01,1.1450E-01,1.1470E-01,1.1500E-01,1.1510E-01,1.1530E-01,1.1550E-01,1.1560E-01,1.1560E-01,1.1570E-01,1.1570E-01,1.1580E-01,1.1580E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
