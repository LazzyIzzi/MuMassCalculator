package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationSC {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,4.49300E-03,4.49310E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {3.5530E+00,3.2440E+00,2.9520E+00,2.4550E+00,2.0500E+00,1.8770E+00,1.8770E+00,1.7200E+00,1.4630E+00,1.1070E+00,8.8370E-01,5.6220E-01,3.8200E-01,2.0630E-01,1.3040E-01,9.0620E-02,6.6750E-02,4.0410E-02,2.6970E-02,1.2660E-02,7.3140E-03,3.3310E-03,1.8930E-03,1.2180E-03,8.4810E-04,4.7840E-04,3.0660E-04,2.9360E-04,1.9640E-04,1.3650E-04,7.6800E-05,7.3530E-05,3.4150E-05,1.9210E-05,1.2290E-05,8.5370E-06,6.2730E-06,4.8020E-06,3.7950E-06,3.0730E-06,2.5400E-06,2.1340E-06,1.8190E-06,1.5690E-06,1.3660E-06,1.2010E-06,9.4870E-07,7.6840E-07,6.3510E-07,5.3370E-07,4.5460E-07,3.9210E-07,3.4160E-07,1.9210E-07,1.2290E-07,8.5380E-08,4.8020E-08,3.0730E-08,1.3660E-08,7.6840E-09,3.4150E-09,1.9210E-09,1.2290E-09,8.5370E-10,4.8020E-10,3.0730E-10,1.3660E-10,7.6840E-11,3.4150E-11,1.9210E-11,1.2290E-11,8.5370E-12,4.8020E-12,3.0730E-12,1.3660E-12,7.6840E-13,3.4150E-13,1.9210E-13,1.2290E-13,8.5370E-14,4.8020E-14,3.0730E-14};
	final static double[] Incoh= {1.3010E-02,2.1030E-02,2.7960E-02,4.0620E-02,5.1990E-02,5.7090E-02,5.7090E-02,6.1980E-02,7.0690E-02,8.4580E-02,9.4800E-02,1.1190E-01,1.2270E-01,1.3380E-01,1.3780E-01,1.3890E-01,1.3850E-01,1.3570E-01,1.3170E-01,1.2140E-01,1.1230E-01,9.8500E-02,8.8570E-02,8.1030E-02,7.5040E-02,6.6010E-02,5.9380E-02,5.8750E-02,5.3110E-02,4.8290E-02,4.1220E-02,4.0710E-02,3.2430E-02,2.7060E-02,2.3360E-02,2.0660E-02,1.8570E-02,1.6890E-02,1.5530E-02,1.4390E-02,1.3420E-02,1.2590E-02,1.1860E-02,1.1220E-02,1.0650E-02,1.0140E-02,9.2700E-03,8.5490E-03,7.9410E-03,7.4200E-03,6.9670E-03,6.5720E-03,6.2240E-03,4.9460E-03,4.1290E-03,3.5570E-03,2.8050E-03,2.3280E-03,1.6580E-03,1.3000E-03,9.2140E-04,7.2160E-04,5.9730E-04,5.1140E-04,3.9950E-04,3.2860E-04,2.2950E-04,1.7760E-04,1.2350E-04,9.5340E-05,7.7950E-05,6.6090E-05,5.0930E-05,4.1580E-05,2.8730E-05,2.2090E-05,1.5230E-05,1.1700E-05,9.5240E-06,8.0510E-06,6.1740E-06,5.0220E-06};
	final static double[] PE= {5.2340E+03,1.8540E+03,8.6750E+02,2.8970E+02,1.3110E+02,9.4950E+01,8.1280E+02,6.2880E+02,3.9180E+02,1.8160E+02,9.8540E+01,3.1350E+01,1.3580E+01,4.0680E+00,1.7010E+00,8.5770E-01,4.8800E-01,1.9910E-01,9.9060E-02,2.7850E-02,1.1410E-02,3.3600E-03,1.4710E-03,8.0370E-04,5.0430E-04,2.5630E-04,1.5940E-04,1.5100E-04,1.0220E-04,7.3820E-05,4.5720E-05,4.4170E-05,2.4970E-05,1.6890E-05,1.2690E-05,1.0130E-05,8.4150E-06,7.1910E-06,6.2750E-06,5.5630E-06,4.9950E-06,4.5320E-06,4.1460E-06,3.8220E-06,3.5430E-06,3.3020E-06,2.9070E-06,2.5960E-06,2.3460E-06,2.1380E-06,1.9650E-06,1.8160E-06,1.6910E-06,1.2520E-06,9.9480E-07,8.2500E-07,6.1500E-07,4.9010E-07,3.2520E-07,2.4330E-07,1.6180E-07,1.2120E-07,9.6880E-08,8.0700E-08,6.0480E-08,4.8370E-08,3.2230E-08,2.4170E-08,1.6100E-08,1.2080E-08,9.6620E-09,8.0520E-09,6.0390E-09,4.8300E-09,3.2200E-09,2.4150E-09,1.6100E-09,1.2070E-09,9.6600E-10,8.0490E-10,6.0370E-10,4.8290E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,5.3350E-05,2.7900E-04,1.0860E-03,1.1700E-03,3.0370E-03,4.8760E-03,6.5060E-03,7.9620E-03,9.2560E-03,1.0420E-02,1.1480E-02,1.2430E-02,1.3300E-02,1.4090E-02,1.4830E-02,1.5510E-02,1.6160E-02,1.6760E-02,1.7860E-02,1.8830E-02,1.9720E-02,2.0520E-02,2.1260E-02,2.1940E-02,2.2570E-02,2.5140E-02,2.7060E-02,2.8560E-02,3.0780E-02,3.2390E-02,3.4990E-02,3.6580E-02,3.8460E-02,3.9540E-02,4.0280E-02,4.0800E-02,4.1510E-02,4.1970E-02,4.2640E-02,4.3000E-02,4.3390E-02,4.3600E-02,4.3750E-02,4.3840E-02,4.3960E-02,4.4040E-02,4.4150E-02,4.4210E-02,4.4270E-02,4.4300E-02,4.4330E-02,4.4340E-02,4.4350E-02,4.4370E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1350E-05,4.6340E-05,9.2320E-05,1.4170E-04,1.9120E-04,2.3900E-04,2.8480E-04,3.2850E-04,3.6970E-04,4.0880E-04,4.4570E-04,4.8090E-04,5.1410E-04,5.4590E-04,6.0480E-04,6.5870E-04,7.0810E-04,7.5360E-04,7.9580E-04,8.3510E-04,8.7170E-04,1.0250E-03,1.1420E-03,1.2370E-03,1.3810E-03,1.4880E-03,1.6690E-03,1.7860E-03,1.9300E-03,2.0200E-03,2.0830E-03,2.1290E-03,2.1940E-03,2.2370E-03,2.3040E-03,2.3430E-03,2.3840E-03,2.4100E-03,2.4250E-03,2.4370E-03,2.4510E-03,2.4610E-03,2.4730E-03,2.4810E-03,2.4880E-03,2.4930E-03,2.4960E-03,2.4970E-03,2.4980E-03,2.5010E-03};
	final static double[] TotAttn= {5.2370E+03,1.8570E+03,8.7050E+02,2.9220E+02,1.3320E+02,9.6880E+01,8.1480E+02,6.3060E+02,3.9340E+02,1.8280E+02,9.9520E+01,3.2020E+01,1.4090E+01,4.4080E+00,1.9700E+00,1.0870E+00,6.9330E-01,3.7520E-01,2.5770E-01,1.6190E-01,1.3110E-01,1.0520E-01,9.1940E-02,8.3050E-02,7.6390E-02,6.6750E-02,5.9850E-02,5.9200E-02,5.3470E-02,4.8780E-02,4.2430E-02,4.2000E-02,3.5540E-02,3.2020E-02,2.9990E-02,2.8780E-02,2.8030E-02,2.7560E-02,2.7300E-02,2.7160E-02,2.7100E-02,2.7090E-02,2.7140E-02,2.7220E-02,2.7330E-02,2.7450E-02,2.7730E-02,2.8050E-02,2.8370E-02,2.8700E-02,2.9020E-02,2.9350E-02,2.9670E-02,3.1120E-02,3.2330E-02,3.3350E-02,3.4970E-02,3.6210E-02,3.8320E-02,3.9670E-02,4.1310E-02,4.2290E-02,4.2960E-02,4.3440E-02,4.4110E-02,4.4530E-02,4.5170E-02,4.5520E-02,4.5900E-02,4.6110E-02,4.6250E-02,4.6350E-02,4.6470E-02,4.6550E-02,4.6650E-02,4.6710E-02,4.6780E-02,4.6800E-02,4.6830E-02,4.6840E-02,4.6860E-02,4.6870E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
