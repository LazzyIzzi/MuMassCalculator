package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationY {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.08000E-03,2.08001E-03,2.11700E-03,2.15500E-03,2.15501E-03,2.26100E-03,
			2.37300E-03,2.37301E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,1.70400E-02,
			1.70401E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,
			3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,
			2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,
			1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,
			2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,
			4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,
			6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,
			1.00000E+05};
	final static double[] Coh= {6.3650E+00,5.9530E+00,5.5500E+00,5.4870E+00,5.4870E+00,5.4570E+00,5.4280E+00,5.4280E+00,5.3460E+00,5.2620E+00,5.2620E+00,4.8230E+00,4.1970E+00,3.6730E+00,3.2400E+00,2.5800E+00,2.0930E+00,1.3080E+00,1.1080E+00,1.1080E+00,8.9010E-01,5.0380E-01,3.2610E-01,2.2680E-01,1.6680E-01,1.0170E-01,6.8820E-02,3.3180E-02,1.9410E-02,8.9550E-03,5.1320E-03,3.3180E-03,2.3190E-03,1.3130E-03,8.4330E-04,8.0810E-04,5.4110E-04,3.7620E-04,2.1190E-04,2.0290E-04,9.4290E-05,5.3040E-05,3.3960E-05,2.3580E-05,1.7330E-05,1.3260E-05,1.0480E-05,8.4870E-06,7.0170E-06,5.8960E-06,5.0240E-06,4.3320E-06,3.7740E-06,3.3160E-06,2.6210E-06,2.1230E-06,1.7540E-06,1.4740E-06,1.2560E-06,1.0830E-06,9.4360E-07,5.3060E-07,3.3960E-07,2.3590E-07,1.3260E-07,8.4870E-08,3.7740E-08,2.1220E-08,9.4360E-09,5.3060E-09,3.3960E-09,2.3590E-09,1.3260E-09,8.4870E-10,3.7740E-10,2.1220E-10,9.4360E-11,5.3060E-11,3.3960E-11,2.3590E-11,1.3260E-11,8.4870E-12,3.7740E-12,2.1220E-12,9.4360E-13,5.3060E-13,3.3960E-13,2.3590E-13,1.3260E-13,8.4870E-14};
	final static double[] Incoh= {8.3990E-03,1.3600E-02,1.8290E-02,1.9020E-02,1.9020E-02,1.9360E-02,1.9700E-02,1.9700E-02,2.0660E-02,2.1650E-02,2.1650E-02,2.7050E-02,3.5030E-02,4.2300E-02,4.8840E-02,5.9800E-02,6.8620E-02,8.5420E-02,9.0630E-02,9.0630E-02,9.7000E-02,1.1070E-01,1.1750E-01,1.2060E-01,1.2190E-01,1.2110E-01,1.1870E-01,1.1090E-01,1.0340E-01,9.1440E-02,8.2570E-02,7.5660E-02,7.0170E-02,6.1820E-02,5.5660E-02,5.5080E-02,4.9810E-02,4.5300E-02,3.8680E-02,3.8200E-02,3.0450E-02,2.5400E-02,2.1940E-02,1.9390E-02,1.7430E-02,1.5860E-02,1.4580E-02,1.3510E-02,1.2610E-02,1.1820E-02,1.1140E-02,1.0530E-02,1.0000E-02,9.5240E-03,8.7040E-03,8.0270E-03,7.4580E-03,6.9700E-03,6.5430E-03,6.1720E-03,5.8440E-03,4.6440E-03,3.8770E-03,3.3400E-03,2.6340E-03,2.1870E-03,1.5570E-03,1.2210E-03,8.6500E-04,6.7740E-04,5.6100E-04,4.8030E-04,3.7510E-04,3.0860E-04,2.1550E-04,1.6680E-04,1.1600E-04,8.9550E-05,7.3220E-05,6.2070E-05,4.7820E-05,3.9040E-05,2.6990E-05,2.0750E-05,1.4310E-05,1.0990E-05,8.9410E-06,7.5590E-06,5.7980E-06,4.7160E-06};
	final static double[] PE= {3.8580E+03,1.4870E+03,7.3630E+02,6.6840E+02,2.6200E+03,2.4740E+03,2.3360E+03,3.2570E+03,2.9050E+03,2.5930E+03,2.9560E+03,1.6490E+03,7.8910E+02,4.3870E+02,2.6930E+02,1.2310E+02,6.6550E+01,2.1390E+01,1.4920E+01,1.0170E+02,6.7570E+01,2.2690E+01,1.0200E+01,5.4160E+00,3.2040E+00,1.3850E+00,7.1730E-01,2.1550E-01,9.2050E-02,2.8490E-02,1.2850E-02,7.1460E-03,4.5360E-03,2.3280E-03,1.4510E-03,1.3800E-03,9.3140E-04,6.6910E-04,4.0940E-04,3.9520E-04,2.1940E-04,1.4640E-04,1.0890E-04,8.6300E-05,7.1260E-05,6.0650E-05,5.2730E-05,4.6620E-05,4.1750E-05,3.7800E-05,3.4520E-05,3.1760E-05,2.9400E-05,2.7370E-05,2.4050E-05,2.1440E-05,1.9330E-05,1.7600E-05,1.6160E-05,1.4940E-05,1.3880E-05,1.0260E-05,8.1350E-06,6.7380E-06,5.0150E-06,3.9940E-06,2.6460E-06,1.9790E-06,1.3150E-06,9.8490E-07,7.8710E-07,6.5550E-07,4.9120E-07,3.9280E-07,2.6170E-07,1.9620E-07,1.3080E-07,9.8080E-08,7.8440E-08,6.5370E-08,4.9020E-08,3.9220E-08,2.6140E-08,1.9610E-08,1.3070E-08,9.8010E-09,7.8440E-09,6.5350E-09,4.9010E-09,3.9210E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1940E-04,5.7470E-04,2.0650E-03,2.2140E-03,5.5060E-03,8.6360E-03,1.1380E-02,1.3770E-02,1.5900E-02,1.7830E-02,1.9580E-02,2.1170E-02,2.2630E-02,2.3970E-02,2.5200E-02,2.6330E-02,2.7390E-02,2.8370E-02,3.0190E-02,3.1820E-02,3.3300E-02,3.4640E-02,3.5870E-02,3.6980E-02,3.8020E-02,4.2230E-02,4.5340E-02,4.7770E-02,5.1360E-02,5.3910E-02,5.7970E-02,6.0390E-02,6.3220E-02,6.4850E-02,6.5920E-02,6.6690E-02,6.7710E-02,6.8350E-02,6.9290E-02,6.9840E-02,7.0450E-02,7.0720E-02,7.0920E-02,7.1060E-02,7.1190E-02,7.1330E-02,7.1460E-02,7.1530E-02,7.1660E-02,7.1660E-02,7.1730E-02,7.1730E-02,7.1730E-02,7.1800E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0650E-05,4.3470E-05,8.6570E-05,1.3280E-04,1.7900E-04,2.2370E-04,2.6640E-04,3.0700E-04,3.4550E-04,3.8180E-04,4.1610E-04,4.4870E-04,4.7950E-04,5.0880E-04,5.6320E-04,6.1270E-04,6.5810E-04,6.9970E-04,7.3830E-04,7.7420E-04,8.0740E-04,9.4560E-04,1.0510E-03,1.1340E-03,1.2600E-03,1.3520E-03,1.5050E-03,1.6010E-03,1.7200E-03,1.7920E-03,1.8420E-03,1.8780E-03,1.9290E-03,1.9630E-03,2.0140E-03,2.0430E-03,2.0750E-03,2.0940E-03,2.1060E-03,2.1140E-03,2.1250E-03,2.1320E-03,2.1420E-03,2.1470E-03,2.1530E-03,2.1560E-03,2.1580E-03,2.1590E-03,2.1610E-03,2.1620E-03};
	final static double[] TotAttn= {3.8640E+03,1.4930E+03,7.4190E+02,6.7390E+02,2.6260E+03,2.4800E+03,2.3420E+03,3.2630E+03,2.9100E+03,2.5980E+03,2.9610E+03,1.6540E+03,7.9340E+02,4.4240E+02,2.7250E+02,1.2580E+02,6.8710E+01,2.2780E+01,1.6110E+01,1.0290E+02,6.8550E+01,2.3310E+01,1.0640E+01,5.7640E+00,3.4930E+00,1.6070E+00,9.0480E-01,3.5950E-01,2.1490E-01,1.2890E-01,1.0060E-01,8.6130E-02,7.7030E-02,6.5460E-02,5.7950E-02,5.7260E-02,5.1410E-02,4.6920E-02,4.1370E-02,4.1010E-02,3.6280E-02,3.4280E-02,3.3550E-02,3.3410E-02,3.3600E-02,3.3990E-02,3.4490E-02,3.5040E-02,3.5630E-02,3.6210E-02,3.6790E-02,3.7350E-02,3.7900E-02,3.8440E-02,3.9480E-02,4.0490E-02,4.1440E-02,4.2330E-02,4.3160E-02,4.3950E-02,4.4690E-02,4.7830E-02,5.0280E-02,5.2260E-02,5.5260E-02,5.7450E-02,6.1030E-02,6.3220E-02,6.5800E-02,6.7320E-02,6.8320E-02,6.9050E-02,7.0010E-02,7.0620E-02,7.1520E-02,7.2050E-02,7.2640E-02,7.2900E-02,7.3100E-02,7.3230E-02,7.3360E-02,7.3500E-02,7.3630E-02,7.3700E-02,7.3830E-02,7.3830E-02,7.3900E-02,7.3900E-02,7.3900E-02,7.3970E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
