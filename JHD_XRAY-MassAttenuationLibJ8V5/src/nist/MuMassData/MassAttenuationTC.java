package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTC {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.67700E-03,2.67701E-03,2.73400E-03,2.79300E-03,2.79301E-03,3.00000E-03,
			3.04300E-03,3.04301E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,2.10400E-02,
			2.10401E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {7.1170E+00,6.6920E+00,6.2430E+00,5.6640E+00,5.6640E+00,5.6160E+00,5.5680E+00,5.5680E+00,5.4000E+00,5.3670E+00,5.3670E+00,4.6730E+00,4.0700E+00,3.5770E+00,2.8440E+00,2.3270E+00,1.4970E+00,1.0250E+00,9.5650E-01,9.5650E-01,5.7800E-01,3.7700E-01,2.6420E-01,1.9480E-01,1.1880E-01,8.0450E-02,3.8930E-02,2.2850E-02,1.0570E-02,6.0670E-03,3.9270E-03,2.7470E-03,1.5570E-03,1.0010E-03,9.5830E-04,6.4210E-04,4.4660E-04,2.5160E-04,2.4090E-04,1.1190E-04,6.2980E-05,4.0330E-05,2.8000E-05,2.0570E-05,1.5750E-05,1.2450E-05,1.0080E-05,8.3340E-06,7.0000E-06,5.9660E-06,5.1450E-06,4.4820E-06,3.9390E-06,3.1120E-06,2.5210E-06,2.0830E-06,1.7510E-06,1.4920E-06,1.2860E-06,1.1210E-06,6.3050E-07,4.0340E-07,2.8010E-07,1.5750E-07,1.0080E-07,4.4820E-08,2.5210E-08,1.1210E-08,6.3050E-09,4.0340E-09,2.8010E-09,1.5760E-09,1.0080E-09,4.4820E-10,2.5210E-10,1.1210E-10,6.3050E-11,4.0340E-11,2.8010E-11,1.5760E-11,1.0080E-11,4.4820E-12,2.5210E-12,1.1210E-12,6.3050E-13,4.0340E-13,2.8010E-13,1.5760E-13,1.0080E-13};
	final static double[] Incoh= {7.0240E-03,1.2090E-02,1.6740E-02,2.2570E-02,2.2570E-02,2.3050E-02,2.3540E-02,2.3540E-02,2.5240E-02,2.5580E-02,2.5580E-02,3.2970E-02,4.0070E-02,4.6630E-02,5.8030E-02,6.7230E-02,8.3710E-02,9.4970E-02,9.6810E-02,9.6810E-02,1.0860E-01,1.1550E-01,1.1900E-01,1.2040E-01,1.2010E-01,1.1790E-01,1.1040E-01,1.0310E-01,9.1340E-02,8.2480E-02,7.5660E-02,7.0180E-02,6.1880E-02,5.5700E-02,5.5120E-02,4.9860E-02,4.5340E-02,3.8720E-02,3.8250E-02,3.0480E-02,2.5430E-02,2.1960E-02,1.9420E-02,1.7450E-02,1.5880E-02,1.4600E-02,1.3530E-02,1.2620E-02,1.1830E-02,1.1150E-02,1.0550E-02,1.0010E-02,9.5340E-03,8.7160E-03,8.0390E-03,7.4670E-03,6.9750E-03,6.5510E-03,6.1820E-03,5.8510E-03,4.6490E-03,3.8810E-03,3.3440E-03,2.6370E-03,2.1890E-03,1.5590E-03,1.2220E-03,8.6600E-04,6.7840E-04,5.6160E-04,4.8090E-04,3.7560E-04,3.0900E-04,2.1580E-04,1.6700E-04,1.1610E-04,8.9620E-05,7.3260E-05,6.2120E-05,4.7880E-05,3.9090E-05,2.7010E-05,2.0770E-05,1.4330E-05,1.1000E-05,8.9560E-06,7.5720E-06,5.8050E-06,4.7230E-06};
	final static double[] PE= {5.3490E+03,2.0850E+03,1.0380E+03,5.0150E+02,1.8060E+03,1.6980E+03,1.5970E+03,2.2180E+03,1.8570E+03,1.7950E+03,2.0540E+03,1.0310E+03,5.7950E+02,3.5820E+02,1.6540E+02,8.9930E+01,2.9190E+01,1.2980E+01,1.1240E+01,7.3750E+01,2.9240E+01,1.3310E+01,7.1410E+00,4.2560E+00,1.8600E+00,9.7060E-01,2.9560E-01,1.2740E-01,3.9840E-02,1.8080E-02,1.0090E-02,6.4210E-03,3.3050E-03,2.0610E-03,1.9610E-03,1.3230E-03,9.4970E-04,5.7990E-04,5.5970E-04,3.0970E-04,2.0620E-04,1.5310E-04,1.2120E-04,1.0000E-04,8.5000E-05,7.3870E-05,6.5260E-05,5.8410E-05,5.2860E-05,4.8260E-05,4.4380E-05,4.1090E-05,3.8240E-05,3.3580E-05,2.9920E-05,2.6980E-05,2.4570E-05,2.2540E-05,2.0830E-05,1.9360E-05,1.4290E-05,1.1330E-05,9.3860E-06,6.9810E-06,5.5600E-06,3.6830E-06,2.7540E-06,1.8300E-06,1.3700E-06,1.0950E-06,9.1220E-07,6.8340E-07,5.4650E-07,3.6410E-07,2.7300E-07,1.8190E-07,1.3640E-07,1.0910E-07,9.0910E-08,6.8210E-08,5.4560E-08,3.6370E-08,2.7270E-08,1.8180E-08,1.3640E-08,1.0910E-08,9.0910E-09,6.8210E-09,5.4550E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.3960E-04,6.6180E-04,2.3370E-03,2.5030E-03,6.1450E-03,9.5770E-03,1.2570E-02,1.5170E-02,1.7490E-02,1.9580E-02,2.1480E-02,2.3210E-02,2.4810E-02,2.6270E-02,2.7620E-02,2.8870E-02,3.0020E-02,3.1100E-02,3.3070E-02,3.4840E-02,3.6460E-02,3.7910E-02,3.9250E-02,4.0470E-02,4.1600E-02,4.6170E-02,4.9560E-02,5.2190E-02,5.6090E-02,5.8860E-02,6.3290E-02,6.5880E-02,6.8950E-02,7.0730E-02,7.1900E-02,7.2760E-02,7.3870E-02,7.4550E-02,7.5590E-02,7.6210E-02,7.6820E-02,7.7130E-02,7.7320E-02,7.7500E-02,7.7690E-02,7.7810E-02,7.7930E-02,7.8050E-02,7.8120E-02,7.8180E-02,7.8240E-02,7.8240E-02,7.8240E-02,7.8300E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0670E-05,4.3510E-05,8.6600E-05,1.3290E-04,1.7910E-04,2.2380E-04,2.6650E-04,3.0710E-04,3.4560E-04,3.8180E-04,4.1600E-04,4.4850E-04,4.7930E-04,5.0860E-04,5.6280E-04,6.1210E-04,6.5750E-04,6.9870E-04,7.3750E-04,7.7250E-04,8.0580E-04,9.4290E-04,1.0470E-03,1.1300E-03,1.2550E-03,1.3460E-03,1.4970E-03,1.5920E-03,1.7090E-03,1.7790E-03,1.8280E-03,1.8640E-03,1.9130E-03,1.9460E-03,1.9950E-03,2.0230E-03,2.0540E-03,2.0720E-03,2.0830E-03,2.0910E-03,2.1010E-03,2.1080E-03,2.1170E-03,2.1220E-03,2.1270E-03,2.1300E-03,2.1320E-03,2.1330E-03,2.1340E-03,2.1360E-03};
	final static double[] TotAttn= {5.3570E+03,2.0920E+03,1.0440E+03,5.0720E+02,1.8120E+03,1.7040E+03,1.6020E+03,2.2240E+03,1.8620E+03,1.8000E+03,2.0590E+03,1.0360E+03,5.8360E+02,3.6190E+02,1.6830E+02,9.2320E+01,3.0770E+01,1.4100E+01,1.2290E+01,7.4800E+01,2.9930E+01,1.3800E+01,7.5240E+00,4.5720E+00,2.0990E+00,1.1690E+00,4.4500E-01,2.5340E-01,1.4180E-01,1.0660E-01,8.9680E-02,7.9350E-02,6.6740E-02,5.8760E-02,5.8040E-02,5.1960E-02,4.7400E-02,4.1890E-02,4.1550E-02,3.7050E-02,3.5320E-02,3.4820E-02,3.4870E-02,3.5240E-02,3.5780E-02,3.6430E-02,3.7120E-02,3.7830E-02,3.8550E-02,3.9240E-02,3.9910E-02,4.0550E-02,4.1180E-02,4.2390E-02,4.3530E-02,4.4610E-02,4.5610E-02,4.6560E-02,4.7450E-02,4.8280E-02,5.1780E-02,5.4500E-02,5.6670E-02,5.9990E-02,6.2400E-02,6.6350E-02,6.8690E-02,7.1530E-02,7.3190E-02,7.4290E-02,7.5110E-02,7.6160E-02,7.6800E-02,7.7800E-02,7.8400E-02,7.8990E-02,7.9290E-02,7.9470E-02,7.9650E-02,7.9830E-02,7.9960E-02,8.0070E-02,8.0200E-02,8.0260E-02,8.0320E-02,8.0380E-02,8.0380E-02,8.0380E-02,8.0440E-02};

	//******************************************************************************

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
