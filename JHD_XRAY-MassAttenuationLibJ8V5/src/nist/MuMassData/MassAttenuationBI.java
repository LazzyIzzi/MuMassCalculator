package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationBI {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.58000E-03,2.58001E-03,2.63300E-03,2.68800E-03,2.68801E-03,3.00000E-03,
			3.17700E-03,3.17710E-03,3.42700E-03,3.69600E-03,3.69610E-03,3.84500E-03,3.99900E-03,3.99910E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.34200E-02,1.34201E-02,1.50000E-02,1.57100E-02,1.57101E-02,1.60500E-02,1.63900E-02,
			1.63901E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,9.05300E-02,9.05310E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.2700E+01,1.2170E+01,1.1580E+01,1.0890E+01,1.0890E+01,1.0830E+01,1.0760E+01,1.0760E+01,1.0390E+01,1.0190E+01,1.0190E+01,9.9450E+00,9.6160E+00,9.6160E+00,9.4030E+00,9.2960E+00,9.2960E+00,9.2960E+00,8.3220E+00,7.4720E+00,6.0980E+00,5.0660E+00,3.8070E+00,3.8070E+00,3.3720E+00,3.2020E+00,3.2020E+00,3.1250E+00,3.0490E+00,3.0490E+00,2.3880E+00,1.4060E+00,9.4060E-01,6.7000E-01,5.0170E-01,3.1530E-01,2.5720E-01,2.5720E-01,2.1790E-01,1.0760E-01,6.4200E-02,3.0660E-02,1.7940E-02,1.1750E-02,8.2850E-03,4.7520E-03,3.0750E-03,2.9480E-03,1.9860E-03,1.3870E-03,7.8470E-04,7.5150E-04,3.5070E-04,1.9760E-04,1.2660E-04,8.7950E-05,6.4640E-05,4.9480E-05,3.9100E-05,3.1670E-05,2.6190E-05,2.2000E-05,1.8750E-05,1.6170E-05,1.4090E-05,1.2380E-05,9.7800E-06,7.9250E-06,6.5470E-06,5.5010E-06,4.6880E-06,4.0430E-06,3.5210E-06,1.9810E-06,1.2680E-06,8.8040E-07,4.9540E-07,3.1700E-07,1.4090E-07,7.9250E-08,3.5210E-08,1.9810E-08,1.2680E-08,8.8040E-09,4.9540E-09,3.1700E-09,1.4090E-09,7.9250E-10,3.5210E-10,1.9810E-10,1.2680E-10,8.8040E-11,4.9540E-11,3.1700E-11,1.4090E-11,7.9250E-12,3.5210E-12,1.9810E-12,1.2680E-12,8.8040E-13,4.9540E-13,3.1700E-13};
	final static double[] Incoh= {3.4980E-03,6.4900E-03,9.5470E-03,1.2980E-02,1.2980E-02,1.3290E-02,1.3610E-02,1.3610E-02,1.5370E-02,1.6330E-02,1.6330E-02,1.7700E-02,1.9070E-02,1.9070E-02,1.9760E-02,2.0610E-02,2.0610E-02,2.0620E-02,2.5410E-02,2.9910E-02,3.8210E-02,4.5500E-02,5.5470E-02,5.5470E-02,5.9330E-02,6.0920E-02,6.0920E-02,6.1640E-02,6.2360E-02,6.2360E-02,6.9070E-02,8.2300E-02,9.0250E-02,9.4860E-02,9.7460E-02,9.9390E-02,9.9420E-02,9.9420E-02,9.9130E-02,9.5070E-02,8.9910E-02,8.0600E-02,7.3310E-02,6.7550E-02,6.2850E-02,5.5560E-02,5.0110E-02,4.9590E-02,4.4930E-02,4.0890E-02,3.4950E-02,3.4520E-02,2.7530E-02,2.2980E-02,1.9850E-02,1.7550E-02,1.5780E-02,1.4360E-02,1.3200E-02,1.2230E-02,1.1410E-02,1.0700E-02,1.0080E-02,9.5350E-03,9.0540E-03,8.6220E-03,7.8810E-03,7.2680E-03,6.7520E-03,6.3080E-03,5.9250E-03,5.5880E-03,5.2910E-03,4.2040E-03,3.5100E-03,3.0230E-03,2.3850E-03,1.9790E-03,1.4100E-03,1.1050E-03,7.8350E-04,6.1350E-04,5.0780E-04,4.3480E-04,3.3970E-04,2.7940E-04,1.9510E-04,1.5100E-04,1.0500E-04,8.1060E-05,6.6280E-05,5.6190E-05,4.3310E-05,3.5360E-05,2.4430E-05,1.8780E-05,1.2950E-05,9.9450E-06,8.0980E-06,6.8470E-06,5.2500E-06,4.2710E-06};
	final static double[] PE= {5.4290E+03,2.4550E+03,1.3360E+03,7.6160E+02,1.7710E+03,1.8080E+03,1.8460E+03,2.5710E+03,2.0430E+03,1.7640E+03,2.0380E+03,1.6920E+03,1.4050E+03,1.4890E+03,1.3550E+03,1.2340E+03,1.2880E+03,1.2870E+03,7.4950E+02,4.7810E+02,2.3170E+02,1.3090E+02,6.1030E+01,1.5220E+02,1.1250E+02,9.9420E+01,1.3830E+02,1.3160E+02,1.2510E+02,1.4460E+02,8.7060E+01,3.0030E+01,1.3920E+01,7.6130E+00,4.6340E+00,2.1070E+00,1.5000E+00,7.0230E+00,5.4200E+00,1.8800E+00,8.7920E-01,3.0520E-01,1.4790E-01,8.6280E-02,5.6540E-02,3.0060E-02,1.8950E-02,1.8140E-02,1.2240E-02,8.7170E-03,5.2710E-03,5.0800E-03,2.7550E-03,1.8030E-03,1.3210E-03,1.0350E-03,8.4720E-04,7.1550E-04,6.1840E-04,5.4410E-04,4.8500E-04,4.3740E-04,3.9820E-04,3.6540E-04,3.3740E-04,3.1350E-04,2.7440E-04,2.4380E-04,2.1940E-04,1.9930E-04,1.8260E-04,1.6850E-04,1.5640E-04,1.1500E-04,9.0890E-05,7.5130E-05,5.5760E-05,4.4350E-05,2.9310E-05,2.1890E-05,1.4530E-05,1.0880E-05,8.6910E-06,7.2360E-06,5.4200E-06,4.3340E-06,2.8870E-06,2.1640E-06,1.4420E-06,1.0810E-06,8.6510E-07,7.2100E-07,5.4060E-07,4.3250E-07,2.8820E-07,2.1620E-07,1.4410E-07,1.0810E-07,8.6480E-08,7.2070E-08,5.4030E-08,4.3230E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {5.4420E+03,2.4680E+03,1.3480E+03,7.7250E+02,1.7820E+03,1.8190E+03,1.8570E+03,2.5820E+03,2.0530E+03,1.7740E+03,2.0480E+03,1.7020E+03,1.4140E+03,1.4980E+03,1.3640E+03,1.2430E+03,1.2970E+03,1.2960E+03,7.5790E+02,4.8560E+02,2.3790E+02,1.3600E+02,6.4900E+01,1.5600E+02,1.1600E+02,1.0270E+02,1.4160E+02,1.3480E+02,1.2820E+02,1.4770E+02,8.9510E+01,3.1520E+01,1.4950E+01,8.3780E+00,5.2330E+00,2.5220E+00,1.8560E+00,7.3790E+00,5.7370E+00,2.0820E+00,1.0330E+00,4.1640E-01,2.3910E-01,1.6560E-01,1.2770E-01,9.0370E-02,7.2140E-02,7.0680E-02,5.9540E-02,5.2850E-02,4.6590E-02,4.6260E-02,4.2800E-02,4.2420E-02,4.3170E-02,4.4380E-02,4.5780E-02,4.7250E-02,4.8760E-02,5.0250E-02,5.1740E-02,5.3170E-02,5.4580E-02,5.5930E-02,5.7210E-02,5.8450E-02,6.0710E-02,6.2760E-02,6.4670E-02,6.6460E-02,6.8110E-02,6.9640E-02,7.1060E-02,7.6990E-02,8.1520E-02,8.5090E-02,9.0410E-02,9.4220E-02,1.0030E-01,1.0390E-01,1.0820E-01,1.1070E-01,1.1230E-01,1.1340E-01,1.1500E-01,1.1600E-01,1.1740E-01,1.1820E-01,1.1910E-01,1.1950E-01,1.1990E-01,1.2000E-01,1.2030E-01,1.2050E-01,1.2070E-01,1.2080E-01,1.2100E-01,1.2100E-01,1.2110E-01,1.2110E-01,1.2120E-01,1.2120E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
