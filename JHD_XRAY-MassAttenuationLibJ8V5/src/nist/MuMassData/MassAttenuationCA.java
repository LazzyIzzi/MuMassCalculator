package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationCA {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,4.03800E-03,4.03810E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {3.5820E+00,3.2590E+00,2.9630E+00,2.4630E+00,2.0510E+00,2.0360E+00,2.0360E+00,1.7200E+00,1.4650E+00,1.1160E+00,8.9540E-01,5.6710E-01,3.8230E-01,2.0590E-01,1.3020E-01,9.0400E-02,6.6480E-02,4.0120E-02,2.6730E-02,1.2520E-02,7.2280E-03,3.2880E-03,1.8680E-03,1.2010E-03,8.3600E-04,4.7150E-04,3.0220E-04,2.8940E-04,1.9350E-04,1.3450E-04,7.5670E-05,7.2460E-05,3.3640E-05,1.8930E-05,1.2110E-05,8.4130E-06,6.1800E-06,4.7320E-06,3.7380E-06,3.0290E-06,2.5030E-06,2.1040E-06,1.7930E-06,1.5450E-06,1.3460E-06,1.1830E-06,9.3480E-07,7.5720E-07,6.2580E-07,5.2580E-07,4.4810E-07,3.8630E-07,3.3660E-07,1.8930E-07,1.2120E-07,8.4130E-08,4.7320E-08,3.0290E-08,1.3460E-08,7.5720E-09,3.3640E-09,1.8930E-09,1.2110E-09,8.4130E-10,4.7320E-10,3.0280E-10,1.3460E-10,7.5720E-11,3.3640E-11,1.8930E-11,1.2110E-11,8.4130E-12,4.7320E-12,3.0280E-12,1.3460E-12,7.5720E-13,3.3640E-13,1.8930E-13,1.2110E-13,8.4130E-14,4.7320E-14,3.0280E-14};
	final static double[] Incoh= {1.4940E-02,2.3560E-02,3.1000E-02,4.4810E-02,5.7160E-02,5.7590E-02,5.7590E-02,6.7950E-02,7.7220E-02,9.1730E-02,1.0240E-01,1.2060E-01,1.3220E-01,1.4390E-01,1.4810E-01,1.4910E-01,1.4860E-01,1.4540E-01,1.4110E-01,1.2980E-01,1.2010E-01,1.0530E-01,9.4650E-02,8.6600E-02,8.0190E-02,7.0520E-02,6.3440E-02,6.2780E-02,5.6750E-02,5.1580E-02,4.4030E-02,4.3490E-02,3.4650E-02,2.8910E-02,2.4960E-02,2.2070E-02,1.9830E-02,1.8050E-02,1.6590E-02,1.5370E-02,1.4340E-02,1.3450E-02,1.2670E-02,1.1980E-02,1.1380E-02,1.0840E-02,9.9040E-03,9.1330E-03,8.4820E-03,7.9260E-03,7.4420E-03,7.0220E-03,6.6490E-03,5.2830E-03,4.4100E-03,3.8000E-03,2.9960E-03,2.4870E-03,1.7720E-03,1.3890E-03,9.8440E-04,7.7080E-04,6.3820E-04,5.4630E-04,4.2670E-04,3.5100E-04,2.4520E-04,1.8980E-04,1.3190E-04,1.0180E-04,8.3270E-05,7.0610E-05,5.4410E-05,4.4420E-05,3.0700E-05,2.3610E-05,1.6270E-05,1.2500E-05,1.0180E-05,8.6010E-06,6.5950E-06,5.3660E-06};
	final static double[] PE= {4.8620E+03,1.7100E+03,7.9680E+02,2.6510E+02,1.1970E+02,1.1660E+02,1.0210E+03,6.0070E+02,3.7160E+02,1.7140E+02,9.2410E+01,2.9110E+01,1.2550E+01,3.7290E+00,1.5520E+00,7.8000E-01,4.4280E-01,1.8000E-01,8.9310E-02,2.5000E-02,1.0220E-02,2.9990E-03,1.3120E-03,7.1570E-04,4.4880E-04,2.2790E-04,1.4170E-04,1.3420E-04,9.0860E-05,6.5650E-05,4.0690E-05,3.9320E-05,2.2270E-05,1.5070E-05,1.1330E-05,9.0470E-06,7.5190E-06,6.4280E-06,5.6090E-06,4.9740E-06,4.4670E-06,4.0540E-06,3.7100E-06,3.4180E-06,3.1700E-06,2.9560E-06,2.6010E-06,2.3230E-06,2.0990E-06,1.9140E-06,1.7580E-06,1.6270E-06,1.5130E-06,1.1220E-06,8.9090E-07,7.3880E-07,5.5090E-07,4.3910E-07,2.9140E-07,2.1790E-07,1.4490E-07,1.0860E-07,8.6810E-08,7.2290E-08,5.4180E-08,4.3340E-08,2.8880E-08,2.1650E-08,1.4430E-08,1.0820E-08,8.6570E-09,7.2140E-09,5.4090E-09,4.3270E-09,2.8850E-09,2.1640E-09,1.4420E-09,1.0820E-09,8.6550E-10,7.2120E-10,5.4090E-10,4.3270E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,5.3630E-05,2.8220E-04,1.1000E-03,1.1860E-03,3.0850E-03,4.9590E-03,6.6190E-03,8.1040E-03,9.4230E-03,1.0610E-02,1.1690E-02,1.2660E-02,1.3550E-02,1.4360E-02,1.5100E-02,1.5810E-02,1.6450E-02,1.7070E-02,1.8200E-02,1.9190E-02,2.0090E-02,2.0920E-02,2.1670E-02,2.2370E-02,2.3000E-02,2.5630E-02,2.7590E-02,2.9120E-02,3.1400E-02,3.3040E-02,3.5700E-02,3.7320E-02,3.9230E-02,4.0360E-02,4.1110E-02,4.1650E-02,4.2370E-02,4.2840E-02,4.3530E-02,4.3910E-02,4.4310E-02,4.4540E-02,4.4670E-02,4.4760E-02,4.4900E-02,4.4970E-02,4.5090E-02,4.5150E-02,4.5210E-02,4.5240E-02,4.5260E-02,4.5270E-02,4.5300E-02,4.5300E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.2130E-05,4.9510E-05,9.8630E-05,1.5150E-04,2.0420E-04,2.5530E-04,3.0430E-04,3.5090E-04,3.9520E-04,4.3680E-04,4.7630E-04,5.1390E-04,5.4950E-04,5.8350E-04,6.4640E-04,7.0400E-04,7.5690E-04,8.0550E-04,8.5080E-04,8.9270E-04,9.3190E-04,1.0960E-03,1.2220E-03,1.3230E-03,1.4780E-03,1.5930E-03,1.7870E-03,1.9110E-03,2.0690E-03,2.1650E-03,2.2330E-03,2.2820E-03,2.3530E-03,2.4010E-03,2.4730E-03,2.5150E-03,2.5620E-03,2.5890E-03,2.6060E-03,2.6180E-03,2.6340E-03,2.6450E-03,2.6580E-03,2.6670E-03,2.6750E-03,2.6790E-03,2.6820E-03,2.6840E-03,2.6870E-03,2.6880E-03};
	final static double[] TotAttn= {4.8660E+03,1.7130E+03,7.9980E+02,2.6760E+02,1.2180E+02,1.1870E+02,1.0230E+03,6.0250E+02,3.7310E+02,1.7270E+02,9.3410E+01,2.9790E+01,1.3060E+01,4.0790E+00,1.8300E+00,1.0190E+00,6.5790E-01,3.6550E-01,2.5710E-01,1.6740E-01,1.3760E-01,1.1160E-01,9.7830E-02,8.8510E-02,8.1480E-02,7.1220E-02,6.3880E-02,6.3200E-02,5.7090E-02,5.2070E-02,4.5240E-02,4.4780E-02,3.7800E-02,3.3950E-02,3.1700E-02,3.0350E-02,2.9480E-02,2.8920E-02,2.8590E-02,2.8390E-02,2.8290E-02,2.8250E-02,2.8250E-02,2.8310E-02,2.8390E-02,2.8490E-02,2.8750E-02,2.9030E-02,2.9330E-02,2.9650E-02,2.9960E-02,3.0290E-02,3.0590E-02,3.2010E-02,3.3220E-02,3.4240E-02,3.5880E-02,3.7120E-02,3.9260E-02,4.0620E-02,4.2290E-02,4.3300E-02,4.3980E-02,4.4480E-02,4.5150E-02,4.5590E-02,4.6250E-02,4.6610E-02,4.7010E-02,4.7230E-02,4.7360E-02,4.7450E-02,4.7590E-02,4.7660E-02,4.7780E-02,4.7840E-02,4.7900E-02,4.7940E-02,4.7950E-02,4.7970E-02,4.8000E-02,4.8000E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
