package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationPU {

	final static double[] MeV= {1.00000E-03,1.05600E-03,1.11500E-03,1.11501E-03,1.23700E-03,1.37200E-03,1.37201E-03,1.50000E-03,1.55900E-03,
			1.55901E-03,2.00000E-03,3.00000E-03,3.77800E-03,3.77810E-03,3.87400E-03,3.97300E-03,3.97310E-03,4.00000E-03,4.55700E-03,
			4.55710E-03,5.00000E-03,5.54100E-03,5.54110E-03,5.73400E-03,5.93300E-03,5.93310E-03,6.00000E-03,8.00000E-03,1.00000E-02,
			1.50000E-02,1.80600E-02,1.80601E-02,2.00000E-02,2.22700E-02,2.22701E-02,2.26800E-02,2.31000E-02,2.31001E-02,3.00000E-02,
			4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.21800E-01,1.21801E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.4150E+01,1.4090E+01,1.4020E+01,1.4020E+01,1.3880E+01,1.3710E+01,1.3710E+01,1.3550E+01,1.3470E+01,1.3470E+01,1.2900E+01,1.1580E+01,1.0610E+01,1.0610E+01,1.0500E+01,1.0380E+01,1.0380E+01,1.0350E+01,9.7320E+00,9.7320E+00,9.2710E+00,8.7490E+00,8.7490E+00,8.5740E+00,8.3990E+00,8.3990E+00,8.3410E+00,6.8600E+00,5.7410E+00,3.9100E+00,3.1840E+00,3.1840E+00,2.8240E+00,2.4750E+00,2.4750E+00,2.4190E+00,2.3630E+00,2.3630E+00,1.6660E+00,1.1190E+00,8.0890E-01,6.0960E-01,3.8290E-01,2.6580E-01,1.9070E-01,1.9070E-01,1.3330E-01,7.9880E-02,3.8370E-02,2.2610E-02,1.4900E-02,1.0550E-02,6.0810E-03,3.9500E-03,3.7860E-03,2.5570E-03,1.7900E-03,1.0160E-03,9.7320E-04,4.5500E-04,2.5670E-04,1.6460E-04,1.1440E-04,8.4090E-05,6.4420E-05,5.0910E-05,4.1240E-05,3.4080E-05,2.8640E-05,2.4410E-05,2.1050E-05,1.8340E-05,1.6120E-05,1.2740E-05,1.0320E-05,8.5270E-06,7.1650E-06,6.1040E-06,5.2650E-06,4.5850E-06,2.5800E-06,1.6510E-06,1.1460E-06,6.4490E-07,4.1260E-07,1.8340E-07,1.0320E-07,4.5850E-08,2.5800E-08,1.6510E-08,1.1460E-08,6.4490E-09,4.1260E-09,1.8340E-09,1.0320E-09,4.5850E-10,2.5800E-10,1.6510E-10,1.1460E-10,6.4490E-11,4.1260E-11,1.8340E-11,1.0320E-11,4.5850E-12,2.5800E-12,1.6510E-12,1.1460E-12,6.4490E-13,4.1260E-13};
	final static double[] Incoh= {4.4390E-03,4.7670E-03,5.1140E-03,5.1140E-03,5.8140E-03,6.5850E-03,6.5850E-03,7.3280E-03,7.6680E-03,7.6680E-03,1.0210E-02,1.5770E-02,1.9790E-02,1.9790E-02,2.0260E-02,2.0750E-02,2.0750E-02,2.0880E-02,2.3540E-02,2.3540E-02,2.5540E-02,2.7890E-02,2.7890E-02,2.8680E-02,2.9500E-02,2.9500E-02,2.9780E-02,3.7280E-02,4.3880E-02,5.7340E-02,6.3530E-02,6.3530E-02,6.6880E-02,7.0340E-02,7.0340E-02,7.0900E-02,7.1470E-02,7.1470E-02,7.9200E-02,8.6760E-02,9.1450E-02,9.4240E-02,9.6480E-02,9.6460E-02,9.5300E-02,9.5300E-02,9.2960E-02,8.8200E-02,7.9300E-02,7.2250E-02,6.6630E-02,6.2020E-02,5.4890E-02,4.9530E-02,4.9020E-02,4.4410E-02,4.0460E-02,3.4590E-02,3.4160E-02,2.7260E-02,2.2750E-02,1.9650E-02,1.7370E-02,1.5620E-02,1.4220E-02,1.3070E-02,1.2110E-02,1.1290E-02,1.0590E-02,9.9780E-03,9.4420E-03,8.9630E-03,8.5370E-03,7.8020E-03,7.1950E-03,6.6830E-03,6.2450E-03,5.8650E-03,5.5320E-03,5.2370E-03,4.1620E-03,3.4740E-03,2.9950E-03,2.3610E-03,1.9600E-03,1.3960E-03,1.0940E-03,7.7570E-04,6.0740E-04,5.0280E-04,4.3050E-04,3.3630E-04,2.7660E-04,1.9320E-04,1.4950E-04,1.0400E-04,8.0260E-05,6.5620E-05,5.5650E-05,4.2880E-05,3.4990E-05,2.4190E-05,1.8600E-05,1.2830E-05,9.8450E-06,8.0190E-06,6.7770E-06,5.1970E-06,4.2270E-06};
	final static double[] PE= {7.1800E+03,6.5220E+03,5.9250E+03,6.3030E+03,5.1780E+03,4.2520E+03,4.3100E+03,3.6070E+03,3.3400E+03,3.4030E+03,2.0240E+03,8.2780E+02,4.8800E+02,1.1700E+03,1.0930E+03,1.0220E+03,1.3860E+03,1.4160E+03,1.0340E+03,1.2050E+03,9.5550E+02,7.3430E+02,7.7920E+02,7.1620E+02,6.5830E+02,6.8650E+02,6.6760E+02,3.2820E+02,1.8770E+02,6.6680E+01,4.1290E+01,9.7870E+01,7.4190E+01,5.5500E+01,7.9150E+01,7.5450E+01,7.1920E+01,8.2960E+01,4.2780E+01,2.0270E+01,1.1270E+01,6.9480E+00,3.2200E+00,1.7660E+00,1.0380E+00,4.3030E+00,2.5420E+00,1.2230E+00,4.3880E-01,2.1760E-01,1.2890E-01,8.5450E-02,4.6000E-02,2.9150E-02,2.7940E-02,1.8880E-02,1.3420E-02,8.1070E-03,7.8140E-03,4.2200E-03,2.7530E-03,2.0120E-03,1.5730E-03,1.2850E-03,1.0840E-03,9.3560E-04,8.2230E-04,7.3260E-04,6.6030E-04,6.0080E-04,5.5090E-04,5.0860E-04,4.7210E-04,4.1290E-04,3.6680E-04,3.2980E-04,2.9950E-04,2.7430E-04,2.5290E-04,2.3470E-04,1.7240E-04,1.3620E-04,1.1250E-04,8.3460E-05,6.6330E-05,4.3830E-05,3.2720E-05,2.1730E-05,1.6260E-05,1.2990E-05,1.0810E-05,8.1020E-06,6.4770E-06,4.3130E-06,3.2350E-06,2.1550E-06,1.6160E-06,1.2930E-06,1.0770E-06,8.0760E-07,6.4620E-07,4.3080E-07,3.2300E-07,2.1530E-07,1.6150E-07,1.2920E-07,1.0770E-07,8.0740E-08,6.4590E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {7.1940E+03,6.5370E+03,5.9390E+03,6.3170E+03,5.1920E+03,4.2660E+03,4.3240E+03,3.6210E+03,3.3540E+03,3.4170E+03,2.0370E+03,8.3940E+02,4.9860E+02,1.1810E+03,1.1040E+03,1.0320E+03,1.3960E+03,1.4260E+03,1.0430E+03,1.2140E+03,9.6480E+02,7.4310E+02,7.8800E+02,7.2480E+02,6.6670E+02,6.9490E+02,6.7600E+02,3.3510E+02,1.9350E+02,7.0650E+01,4.4540E+01,1.0110E+02,7.7080E+01,5.8040E+01,8.1700E+01,7.7940E+01,7.4360E+01,8.5390E+01,4.4520E+01,2.1470E+01,1.2170E+01,7.6520E+00,3.6990E+00,2.1290E+00,1.3240E+00,4.5890E+00,2.7680E+00,1.3910E+00,5.5650E-01,3.1240E-01,2.1050E-01,1.5800E-01,1.0700E-01,8.2620E-02,8.0750E-02,6.6320E-02,5.8000E-02,5.0490E-02,5.0100E-02,4.5910E-02,4.5280E-02,4.5980E-02,4.7170E-02,4.8640E-02,5.0200E-02,5.1830E-02,5.3450E-02,5.5070E-02,5.6640E-02,5.8130E-02,5.9610E-02,6.1000E-02,6.2320E-02,6.4800E-02,6.7060E-02,6.9160E-02,7.1120E-02,7.2940E-02,7.4610E-02,7.6160E-02,8.2640E-02,8.7590E-02,9.1490E-02,9.7300E-02,1.0150E-01,1.0810E-01,1.1200E-01,1.1670E-01,1.1940E-01,1.2120E-01,1.2240E-01,1.2410E-01,1.2520E-01,1.2680E-01,1.2770E-01,1.2860E-01,1.2910E-01,1.2950E-01,1.2970E-01,1.3000E-01,1.3020E-01,1.3040E-01,1.3050E-01,1.3070E-01,1.3080E-01,1.3080E-01,1.3090E-01,1.3090E-01,1.3090E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
