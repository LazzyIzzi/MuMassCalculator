package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationRA {

	final static double[] MeV= {1.00000E-03,1.02800E-03,1.05800E-03,1.05801E-03,1.13000E-03,1.20800E-03,1.20801E-03,1.50000E-03,2.00000E-03,
			3.00000E-03,3.10500E-03,3.10501E-03,3.17600E-03,3.24800E-03,3.24810E-03,3.51000E-03,3.79200E-03,3.79210E-03,4.00000E-03,
			4.48900E-03,4.48910E-03,4.65300E-03,4.82200E-03,4.82210E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,
			1.54400E-02,1.54401E-02,1.69000E-02,1.84800E-02,1.84801E-02,1.88600E-02,1.92400E-02,1.92401E-02,2.00000E-02,3.00000E-02,
			4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.03900E-01,1.03901E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.3030E+01,1.3000E+01,1.2960E+01,1.2960E+01,1.2880E+01,1.2780E+01,1.2780E+01,1.2430E+01,1.1810E+01,1.0600E+01,1.0470E+01,1.0470E+01,1.0390E+01,1.0310E+01,1.0310E+01,1.0020E+01,9.7090E+00,9.7090E+00,9.4900E+00,9.0000E+00,9.0000E+00,8.8440E+00,8.6860E+00,8.6860E+00,8.5230E+00,7.6870E+00,6.3250E+00,5.2810E+00,3.5600E+00,3.4480E+00,3.4480E+00,3.1120E+00,2.7980E+00,2.7980E+00,2.7320E+00,2.6670E+00,2.6670E+00,2.5440E+00,1.4970E+00,1.0060E+00,7.2120E-01,5.4110E-01,3.4000E-01,2.3560E-01,2.2080E-01,2.2080E-01,1.1710E-01,7.0020E-02,3.3540E-02,1.9680E-02,1.2920E-02,9.1280E-03,5.2460E-03,3.4020E-03,3.2590E-03,2.1990E-03,1.5370E-03,8.7070E-04,8.3420E-04,3.8950E-04,2.1960E-04,1.4070E-04,9.7760E-05,7.1860E-05,5.5020E-05,4.3480E-05,3.5220E-05,2.9120E-05,2.4470E-05,2.0850E-05,1.7980E-05,1.5660E-05,1.3770E-05,1.0880E-05,8.8110E-06,7.2820E-06,6.1200E-06,5.2140E-06,4.4950E-06,3.9170E-06,2.2030E-06,1.4100E-06,9.7920E-07,5.5070E-07,3.5250E-07,1.5670E-07,8.8110E-08,3.9170E-08,2.2030E-08,1.4100E-08,9.7920E-09,5.5070E-09,3.5250E-09,1.5670E-09,8.8110E-10,3.9170E-10,2.2030E-10,1.4100E-10,9.7920E-11,5.5070E-11,3.5250E-11,1.5670E-11,8.8110E-12,3.9170E-12,2.2030E-12,1.4100E-12,9.7920E-13,5.5070E-13,3.5250E-13};
	final static double[] Incoh= {4.7880E-03,4.9580E-03,5.1340E-03,5.1340E-03,5.5710E-03,6.0320E-03,6.0320E-03,7.7130E-03,1.0630E-02,1.6320E-02,1.6890E-02,1.6890E-02,1.7290E-02,1.7690E-02,1.7690E-02,1.9110E-02,2.0570E-02,2.0570E-02,2.1620E-02,2.4000E-02,2.4000E-02,2.4770E-02,2.5550E-02,2.5550E-02,2.6350E-02,3.0560E-02,3.8100E-02,4.4810E-02,5.8030E-02,5.8990E-02,5.8990E-02,6.1880E-02,6.4740E-02,6.4740E-02,6.5380E-02,6.6020E-02,6.6020E-02,6.7280E-02,7.9660E-02,8.7280E-02,9.1890E-02,9.4530E-02,9.6530E-02,9.6400E-02,9.6240E-02,9.6240E-02,9.2670E-02,8.7760E-02,7.8790E-02,7.1720E-02,6.6100E-02,6.1520E-02,5.4410E-02,4.9100E-02,4.8600E-02,4.4020E-02,4.0070E-02,3.4260E-02,3.3840E-02,2.6990E-02,2.2520E-02,1.9460E-02,1.7200E-02,1.5460E-02,1.4080E-02,1.2940E-02,1.1990E-02,1.1180E-02,1.0490E-02,9.8820E-03,9.3490E-03,8.8750E-03,8.4510E-03,7.7240E-03,7.1250E-03,6.6180E-03,6.1840E-03,5.8060E-03,5.4780E-03,5.1880E-03,4.1220E-03,3.4400E-03,2.9650E-03,2.3380E-03,1.9400E-03,1.3820E-03,1.0840E-03,7.6790E-04,6.0130E-04,4.9800E-04,4.2630E-04,3.3300E-04,2.7390E-04,1.9130E-04,1.4810E-04,1.0300E-04,7.9450E-05,6.4960E-05,5.5100E-05,4.2440E-05,3.4660E-05,2.3950E-05,1.8410E-05,1.2700E-05,9.7490E-06,7.9400E-06,6.7120E-06,5.1450E-06,4.1860E-06};
	final static double[] PE= {6.1890E+03,5.8810E+03,5.5900E+03,5.6700E+03,5.0020E+03,4.4120E+03,4.5050E+03,2.9390E+03,1.6090E+03,6.5570E+02,6.0640E+02,1.7040E+03,1.5240E+03,1.3640E+03,2.0280E+03,1.6440E+03,1.3320E+03,1.5480E+03,1.3570E+03,1.0150E+03,1.0770E+03,9.8690E+02,9.0430E+02,9.4350E+02,8.6570E+02,5.5370E+02,2.7040E+02,1.5360E+02,5.3980E+01,5.0040E+01,1.2180E+02,9.5440E+01,7.4790E+01,1.0530E+02,1.0010E+02,9.5250E+01,1.1000E+02,9.9670E+01,3.5060E+01,1.6400E+01,9.0380E+00,5.5310E+00,2.5350E+00,1.3800E+00,1.2430E+00,5.5100E+00,2.1460E+00,1.0140E+00,3.5730E-01,1.7480E-01,1.0270E-01,6.7620E-02,3.6130E-02,2.2840E-02,2.1870E-02,1.4770E-02,1.0510E-02,6.3490E-03,6.1230E-03,3.3120E-03,2.1650E-03,1.5840E-03,1.2400E-03,1.0140E-03,8.5610E-04,7.3940E-04,6.5010E-04,5.7950E-04,5.2250E-04,4.7560E-04,4.3620E-04,4.0290E-04,3.7410E-04,3.2720E-04,2.9070E-04,2.6150E-04,2.3750E-04,2.1760E-04,2.0070E-04,1.8630E-04,1.3690E-04,1.0810E-04,8.9390E-05,6.6340E-05,5.2730E-05,3.4850E-05,2.6030E-05,1.7280E-05,1.2930E-05,1.0330E-05,8.6030E-06,6.4450E-06,5.1530E-06,3.4320E-06,2.5730E-06,1.7150E-06,1.2860E-06,1.0280E-06,8.5690E-07,6.4260E-07,5.1400E-07,3.4260E-07,2.5700E-07,1.7130E-07,1.2850E-07,1.0280E-07,8.5660E-08,6.4240E-08,5.1400E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {6.2020E+03,5.8940E+03,5.6030E+03,5.6830E+03,5.0150E+03,4.4250E+03,4.5180E+03,2.9510E+03,1.6210E+03,6.6630E+02,6.1690E+02,1.7140E+03,1.5350E+03,1.3740E+03,2.0380E+03,1.6540E+03,1.3420E+03,1.5580E+03,1.3670E+03,1.0240E+03,1.0860E+03,9.9580E+02,9.1300E+02,9.5220E+02,8.7420E+02,5.6140E+02,2.7680E+02,1.5890E+02,5.7600E+01,5.3540E+01,1.2530E+02,9.8610E+01,7.7650E+01,1.0810E+02,1.0290E+02,9.7980E+01,1.1280E+02,1.0230E+02,3.6640E+01,1.7500E+01,9.8510E+00,6.1670E+00,2.9710E+00,1.7120E+00,1.5600E+00,5.8270E+00,2.3550E+00,1.1720E+00,4.6960E-01,2.6620E-01,1.8170E-01,1.3830E-01,9.5780E-02,7.5350E-02,7.3730E-02,6.1410E-02,5.4150E-02,4.7510E-02,4.7170E-02,4.3480E-02,4.3040E-02,4.3790E-02,4.5000E-02,4.6420E-02,4.7930E-02,4.9470E-02,5.1020E-02,5.2540E-02,5.4000E-02,5.5450E-02,5.6820E-02,5.8150E-02,5.9400E-02,6.1710E-02,6.3830E-02,6.5810E-02,6.7650E-02,6.9330E-02,7.0910E-02,7.2360E-02,7.8470E-02,8.3120E-02,8.6770E-02,9.2240E-02,9.6140E-02,1.0240E-01,1.0610E-01,1.1050E-01,1.1300E-01,1.1470E-01,1.1590E-01,1.1750E-01,1.1850E-01,1.2000E-01,1.2080E-01,1.2170E-01,1.2220E-01,1.2250E-01,1.2270E-01,1.2300E-01,1.2320E-01,1.2340E-01,1.2350E-01,1.2370E-01,1.2380E-01,1.2380E-01,1.2380E-01,1.2390E-01,1.2390E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
