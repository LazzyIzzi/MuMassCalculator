package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationRE {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.82300E-03,1.82301E-03,1.88500E-03,1.94900E-03,1.94901E-03,2.00000E-03,2.36700E-03,
			2.36701E-03,2.52000E-03,2.68200E-03,2.68201E-03,2.80400E-03,2.93200E-03,2.93201E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.05400E-02,1.05401E-02,1.12200E-02,1.19600E-02,1.19601E-02,1.22400E-02,1.25300E-02,
			1.25301E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,7.16800E-02,7.16810E-02,8.00000E-02,
			1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,
			1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,
			9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,
			2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,
			1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,
			3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,
			5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1620E+01,1.1140E+01,1.0800E+01,1.0800E+01,1.0730E+01,1.0650E+01,1.0650E+01,1.0590E+01,1.0180E+01,1.0180E+01,1.0020E+01,9.8510E+00,9.8510E+00,9.7190E+00,9.5790E+00,9.5790E+00,9.5050E+00,8.4930E+00,7.5900E+00,6.7980E+00,5.5110E+00,4.5340E+00,4.3140E+00,4.3140E+00,4.0500E+00,3.7940E+00,3.7940E+00,3.7020E+00,3.6120E+00,3.6120E+00,2.9480E+00,2.0790E+00,1.2290E+00,8.1180E-01,5.7440E-01,4.3010E-01,3.2370E-01,3.2370E-01,2.7030E-01,1.8580E-01,9.0980E-02,5.4200E-02,2.5760E-02,1.4990E-02,9.7900E-03,6.8890E-03,3.9390E-03,2.5450E-03,2.4390E-03,1.6410E-03,1.1440E-03,6.4680E-04,6.1930E-04,2.8850E-04,1.6250E-04,1.0410E-04,7.2280E-05,5.3140E-05,4.0690E-05,3.2150E-05,2.6040E-05,2.1520E-05,1.8090E-05,1.5410E-05,1.3290E-05,1.1570E-05,1.0170E-05,8.0400E-06,6.5100E-06,5.3820E-06,4.5210E-06,3.8520E-06,3.3210E-06,2.8940E-06,1.6280E-06,1.0420E-06,7.2350E-07,4.0690E-07,2.6050E-07,1.1580E-07,6.5100E-08,2.8940E-08,1.6280E-08,1.0420E-08,7.2350E-09,4.0690E-09,2.6050E-09,1.1580E-09,6.5100E-10,2.8940E-10,1.6280E-10,1.0420E-10,7.2350E-11,4.0690E-11,2.6050E-11,1.1580E-11,6.5100E-12,2.8940E-12,1.6280E-12,1.0420E-12,7.2350E-13,4.0690E-13,2.6050E-13};
	final static double[] Incoh= {4.2080E-03,7.3450E-03,9.2790E-03,9.2790E-03,9.6500E-03,1.0030E-02,1.0030E-02,1.0330E-02,1.2480E-02,1.2480E-02,1.3340E-02,1.4250E-02,1.4250E-02,1.4940E-02,1.5660E-02,1.5660E-02,1.6040E-02,2.1510E-02,2.6720E-02,3.1640E-02,4.0360E-02,4.7670E-02,4.9420E-02,4.9420E-02,5.1580E-02,5.3780E-02,5.3780E-02,5.4590E-02,5.5400E-02,5.5400E-02,6.1710E-02,7.2120E-02,8.6120E-02,9.4020E-02,9.8380E-02,1.0080E-01,1.0210E-01,1.0210E-01,1.0240E-01,1.0190E-01,9.7350E-02,9.1820E-02,8.2110E-02,7.4610E-02,6.8690E-02,6.3870E-02,5.6440E-02,5.0870E-02,5.0360E-02,4.5600E-02,4.1490E-02,3.5450E-02,3.5030E-02,2.7930E-02,2.3310E-02,2.0140E-02,1.7800E-02,1.6000E-02,1.4560E-02,1.3390E-02,1.2410E-02,1.1570E-02,1.0850E-02,1.0220E-02,9.6730E-03,9.1820E-03,8.7450E-03,7.9910E-03,7.3710E-03,6.8470E-03,6.3970E-03,6.0060E-03,5.6660E-03,5.3650E-03,4.2630E-03,3.5610E-03,3.0670E-03,2.4190E-03,2.0070E-03,1.4290E-03,1.1210E-03,7.9460E-04,6.2220E-04,5.1520E-04,4.4110E-04,3.4440E-04,2.8340E-04,1.9790E-04,1.5320E-04,1.0650E-04,8.2210E-05,6.7200E-05,5.6980E-05,4.3920E-05,3.5870E-05,2.4780E-05,1.9050E-05,1.3140E-05,1.0080E-05,8.2110E-06,6.9440E-06,5.3230E-06,4.3300E-06};
	final static double[] PE= {3.8620E+03,1.7180E+03,1.1360E+03,1.1370E+03,1.7380E+03,2.6450E+03,2.7300E+03,3.7610E+03,2.6850E+03,3.1130E+03,2.6750E+03,2.2990E+03,2.4440E+03,2.2010E+03,1.9830E+03,2.0680E+03,1.9620E+03,9.8580E+02,5.6820E+02,3.5900E+02,1.7220E+02,9.6540E+01,8.4220E+01,2.1900E+02,1.8490E+02,1.5610E+02,2.1540E+02,2.0360E+02,1.9250E+02,2.2250E+02,1.4100E+02,6.6200E+01,2.2360E+01,1.0220E+01,5.5340E+00,3.3410E+00,2.0380E+00,1.0310E+01,7.6970E+00,4.2980E+00,1.4490E+00,6.6590E-01,2.2610E-01,1.0800E-01,6.2390E-02,4.0620E-02,2.1420E-02,1.3460E-02,1.2880E-02,8.6870E-03,6.1930E-03,3.7480E-03,3.6160E-03,1.9660E-03,1.2900E-03,9.4730E-04,7.4350E-04,6.0960E-04,5.1520E-04,4.4570E-04,3.9230E-04,3.5030E-04,3.1600E-04,2.8780E-04,2.6420E-04,2.4410E-04,2.2680E-04,1.9860E-04,1.7660E-04,1.5890E-04,1.4450E-04,1.3240E-04,1.2220E-04,1.1340E-04,8.3470E-05,6.6010E-05,5.4560E-05,4.0520E-05,3.2230E-05,2.1320E-05,1.5920E-05,1.0570E-05,7.9140E-06,6.3230E-06,5.2650E-06,3.9460E-06,3.1540E-06,2.1010E-06,1.5750E-06,1.0500E-06,7.8720E-07,6.2970E-07,5.2460E-07,3.9330E-07,3.1470E-07,2.0980E-07,1.5730E-07,1.0490E-07,7.8650E-08,6.2940E-08,5.2460E-08,3.9330E-08,3.1460E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,9.7610E-06,3.9780E-05,7.9140E-05,1.2130E-04,1.6330E-04,2.0380E-04,2.4260E-04,2.7930E-04,3.1410E-04,3.4670E-04,3.7740E-04,4.0690E-04,4.3430E-04,4.6050E-04,5.0900E-04,5.5270E-04,5.9280E-04,6.2970E-04,6.6360E-04,6.9470E-04,7.2380E-04,8.4350E-04,9.3340E-04,1.0040E-03,1.1100E-03,1.1860E-03,1.3110E-03,1.3880E-03,1.4820E-03,1.5370E-03,1.5750E-03,1.6030E-03,1.6400E-03,1.6660E-03,1.7030E-03,1.7240E-03,1.7470E-03,1.7600E-03,1.7680E-03,1.7740E-03,1.7820E-03,1.7870E-03,1.7930E-03,1.7970E-03,1.8010E-03,1.8030E-03,1.8050E-03,1.8060E-03,1.8060E-03,1.8070E-03};
	final static double[] TotAttn= {3.8730E+03,1.7290E+03,1.1470E+03,1.1480E+03,1.7490E+03,2.6560E+03,2.7410E+03,3.7720E+03,2.6950E+03,3.1230E+03,2.6860E+03,2.3090E+03,2.4540E+03,2.2110E+03,1.9920E+03,2.0780E+03,1.9720E+03,9.9430E+02,5.7590E+02,3.6580E+02,1.7780E+02,1.0110E+02,8.8580E+01,2.2340E+02,1.8900E+02,1.6000E+02,2.1920E+02,2.0730E+02,1.9610E+02,2.2620E+02,1.4400E+02,6.8350E+01,2.3680E+01,1.1130E+01,6.2060E+00,3.8720E+00,2.4640E+00,1.0730E+01,8.0700E+00,4.5860E+00,1.6370E+00,8.1190E-01,3.3390E-01,1.9760E-01,1.4090E-01,1.1140E-01,8.1790E-02,6.6880E-02,6.5680E-02,5.6260E-02,5.0380E-02,4.4630E-02,4.4340E-02,4.1050E-02,4.0680E-02,4.1370E-02,4.2460E-02,4.3740E-02,4.5110E-02,4.6520E-02,4.7900E-02,4.9290E-02,5.0630E-02,5.1910E-02,5.3180E-02,5.4370E-02,5.5500E-02,5.7610E-02,5.9530E-02,6.1290E-02,6.2930E-02,6.4470E-02,6.5900E-02,6.7230E-02,7.2750E-02,7.7010E-02,8.0350E-02,8.5330E-02,8.8900E-02,9.4610E-02,9.8030E-02,1.0210E-01,1.0440E-01,1.0590E-01,1.0700E-01,1.0840E-01,1.0940E-01,1.1070E-01,1.1150E-01,1.1230E-01,1.1270E-01,1.1300E-01,1.1320E-01,1.1340E-01,1.1360E-01,1.1380E-01,1.1390E-01,1.1400E-01,1.1410E-01,1.1420E-01,1.1420E-01,1.1420E-01,1.1420E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
