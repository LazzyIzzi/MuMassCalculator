package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationZN {

	final static double[] MeV= {1.00000E-03,1.01000E-03,1.02000E-03,1.02001E-03,1.03100E-03,1.04300E-03,1.04301E-03,1.11600E-03,1.19400E-03,
			1.19401E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,9.65900E-03,9.65910E-03,
			1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,
			2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,
			2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,
			1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,
			2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,
			3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,
			5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,
			8.00000E+04,1.00000E+05};
	final static double[] Coh= {5.2440E+00,5.2390E+00,5.2340E+00,5.2340E+00,5.2280E+00,5.2230E+00,5.2230E+00,5.1850E+00,5.1430E+00,5.1430E+00,4.9750E+00,4.6770E+00,4.0840E+00,3.5380E+00,3.0540E+00,2.6350E+00,1.9870E+00,1.6050E+00,1.6050E+00,1.5420E+00,9.3290E-01,6.4130E-01,3.5790E-01,2.2590E-01,1.5590E-01,1.1480E-01,7.0070E-02,4.7270E-02,2.2480E-02,1.3060E-02,5.9930E-03,3.4210E-03,2.2070E-03,1.5400E-03,8.7000E-04,5.5810E-04,5.3440E-04,3.5780E-04,2.4870E-04,1.4000E-04,1.3400E-04,6.2250E-05,3.5020E-05,2.2420E-05,1.5560E-05,1.1440E-05,8.7570E-06,6.9200E-06,5.6050E-06,4.6320E-06,3.8930E-06,3.3160E-06,2.8600E-06,2.4910E-06,2.1890E-06,1.7300E-06,1.4020E-06,1.1590E-06,9.7350E-07,8.2910E-07,7.1490E-07,6.2280E-07,3.5030E-07,2.2420E-07,1.5570E-07,8.7570E-08,5.6050E-08,2.4910E-08,1.4010E-08,6.2280E-09,3.5030E-09,2.2420E-09,1.5570E-09,8.7570E-10,5.6050E-10,2.4910E-10,1.4010E-10,6.2280E-11,3.5030E-11,2.2420E-11,1.5570E-11,8.7570E-12,5.6050E-12,2.4910E-12,1.4010E-12,6.2280E-13,3.5030E-13,2.2420E-13,1.5570E-13,8.7570E-14,5.6050E-14};
	final static double[] Incoh= {6.5800E-03,6.6830E-03,6.7870E-03,6.7870E-03,6.9070E-03,7.0300E-03,7.0300E-03,7.8020E-03,8.6350E-03,8.6350E-03,1.1920E-02,1.7000E-02,2.6380E-02,3.5230E-02,4.3540E-02,5.1220E-02,6.4760E-02,7.4360E-02,7.4360E-02,7.6140E-02,9.6610E-02,1.0910E-01,1.2280E-01,1.2880E-01,1.3110E-01,1.3150E-01,1.2980E-01,1.2650E-01,1.1750E-01,1.0920E-01,9.6240E-02,8.6670E-02,7.9380E-02,7.3570E-02,6.4750E-02,5.8270E-02,5.7650E-02,5.2140E-02,4.7400E-02,4.0470E-02,3.9970E-02,3.1850E-02,2.6570E-02,2.2950E-02,2.0280E-02,1.8230E-02,1.6600E-02,1.5250E-02,1.4140E-02,1.3180E-02,1.2360E-02,1.1650E-02,1.1010E-02,1.0460E-02,9.9650E-03,9.1050E-03,8.3960E-03,7.7990E-03,7.2880E-03,6.8430E-03,6.4550E-03,6.1120E-03,4.8570E-03,4.0540E-03,3.4930E-03,2.7550E-03,2.2870E-03,1.6280E-03,1.2760E-03,9.0490E-04,7.0880E-04,5.8660E-04,5.0230E-04,3.9230E-04,3.2280E-04,2.2550E-04,1.7440E-04,1.2130E-04,9.3660E-05,7.6560E-05,6.4920E-05,5.0020E-05,4.0840E-05,2.8220E-05,2.1700E-05,1.4970E-05,1.1480E-05,9.3570E-06,7.9070E-06,6.0640E-06,4.9330E-06};
	final static double[] PE= {1.5480E+03,1.5130E+03,1.4790E+03,3.5210E+03,4.7810E+03,6.4880E+03,8.2330E+03,7.7880E+03,7.3680E+03,8.3910E+03,4.8190E+03,2.3700E+03,8.2700E+02,3.8300E+02,2.0870E+02,1.2640E+02,5.6680E+01,3.3380E+01,2.5190E+02,2.3140E+02,8.0140E+01,3.6440E+01,1.1590E+01,5.0290E+00,2.6050E+00,1.5140E+00,6.3670E-01,3.2350E-01,9.4120E-02,3.9440E-02,1.1920E-02,5.2980E-03,2.9200E-03,1.8430E-03,9.4120E-04,5.8550E-04,5.5630E-04,3.7600E-04,2.7080E-04,1.6650E-04,1.6080E-04,9.0010E-05,6.0440E-05,4.5150E-05,3.5900E-05,2.9740E-05,2.5350E-05,2.2080E-05,1.9540E-05,1.7530E-05,1.5880E-05,1.4510E-05,1.3360E-05,1.2390E-05,1.1530E-05,1.0140E-05,9.0480E-06,8.1670E-06,7.4410E-06,6.8340E-06,6.3190E-06,5.8750E-06,4.3470E-06,3.4490E-06,2.8590E-06,2.1290E-06,1.6960E-06,1.1240E-06,8.4120E-07,5.5930E-07,4.1890E-07,3.3480E-07,2.7890E-07,2.0900E-07,1.6720E-07,1.1130E-07,8.3490E-08,5.5640E-08,4.1730E-08,3.3380E-08,2.7810E-08,2.0860E-08,1.6690E-08,1.1130E-08,8.3430E-09,5.5620E-09,4.1710E-09,3.3370E-09,2.7800E-09,2.0860E-09,1.6690E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,8.4530E-05,4.2240E-04,1.5790E-03,1.6960E-03,4.3340E-03,6.8890E-03,9.1400E-03,1.1130E-02,1.2910E-02,1.4510E-02,1.5960E-02,1.7270E-02,1.8460E-02,1.9550E-02,2.0560E-02,2.1500E-02,2.2370E-02,2.3190E-02,2.4700E-02,2.6040E-02,2.7260E-02,2.8360E-02,2.9370E-02,3.0290E-02,3.1150E-02,3.4640E-02,3.7250E-02,3.9290E-02,4.2320E-02,4.4470E-02,4.7920E-02,4.9970E-02,5.2370E-02,5.3740E-02,5.4640E-02,5.5290E-02,5.6150E-02,5.6710E-02,5.7510E-02,5.7960E-02,5.8430E-02,5.8680E-02,5.8840E-02,5.8950E-02,5.9100E-02,5.9190E-02,5.9320E-02,5.9380E-02,5.9460E-02,5.9490E-02,5.9520E-02,5.9540E-02,5.9560E-02,5.9570E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1140E-05,4.5500E-05,9.0610E-05,1.3920E-04,1.8740E-04,2.3430E-04,2.7920E-04,3.2190E-04,3.6230E-04,4.0040E-04,4.3640E-04,4.7080E-04,5.0330E-04,5.3420E-04,5.9160E-04,6.4390E-04,6.9190E-04,7.3610E-04,7.7690E-04,8.1500E-04,8.5030E-04,9.9740E-04,1.1110E-03,1.2000E-03,1.3360E-03,1.4360E-03,1.6020E-03,1.7060E-03,1.8350E-03,1.9110E-03,1.9640E-03,2.0030E-03,2.0560E-03,2.0920E-03,2.1460E-03,2.1760E-03,2.2080E-03,2.2280E-03,2.2400E-03,2.2480E-03,2.2590E-03,2.2660E-03,2.2760E-03,2.2820E-03,2.2870E-03,2.2900E-03,2.2920E-03,2.2940E-03,2.2950E-03,2.2960E-03};
	final static double[] TotAttn= {1.5530E+03,1.5180E+03,1.4840E+03,3.5260E+03,4.7860E+03,6.4930E+03,8.2390E+03,7.7930E+03,7.3730E+03,8.3960E+03,4.8240E+03,2.3740E+03,8.3110E+02,3.8660E+02,2.1180E+02,1.2900E+02,5.8740E+01,3.5060E+01,2.5360E+02,2.3310E+02,8.1170E+01,3.7190E+01,1.2070E+01,5.3840E+00,2.8920E+00,1.7600E+00,8.3650E-01,4.9730E-01,2.3410E-01,1.6170E-01,1.1410E-01,9.5390E-02,8.4500E-02,7.6950E-02,6.6560E-02,5.9410E-02,5.8740E-02,5.2950E-02,4.8340E-02,4.2350E-02,4.1960E-02,3.6340E-02,3.3600E-02,3.2250E-02,3.1600E-02,3.1380E-02,3.1380E-02,3.1520E-02,3.1750E-02,3.2020E-02,3.2330E-02,3.2660E-02,3.3000E-02,3.3350E-02,3.3700E-02,3.4410E-02,3.5100E-02,3.5760E-02,3.6390E-02,3.7000E-02,3.7570E-02,3.8120E-02,4.0500E-02,4.2420E-02,4.3980E-02,4.6410E-02,4.8200E-02,5.1150E-02,5.2950E-02,5.5110E-02,5.6360E-02,5.7190E-02,5.7800E-02,5.8600E-02,5.9130E-02,5.9890E-02,6.0310E-02,6.0760E-02,6.1000E-02,6.1160E-02,6.1260E-02,6.1410E-02,6.1500E-02,6.1620E-02,6.1690E-02,6.1760E-02,6.1800E-02,6.1820E-02,6.1840E-02,6.1860E-02,6.1870E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
