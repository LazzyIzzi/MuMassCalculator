package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationTA {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.73500E-03,1.73501E-03,1.76400E-03,1.79300E-03,1.79301E-03,2.00000E-03,2.19400E-03,
			2.19401E-03,2.32700E-03,2.46900E-03,2.46901E-03,2.58600E-03,2.70800E-03,2.70801E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,9.88100E-03,9.88110E-03,1.00000E-02,1.11400E-02,1.11401E-02,1.14100E-02,1.16800E-02,1.16801E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,6.74200E-02,6.74210E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1300E+01,1.0820E+01,1.0580E+01,1.0580E+01,1.0550E+01,1.0520E+01,1.0520E+01,1.0300E+01,1.0080E+01,1.0080E+01,9.9520E+00,9.8110E+00,9.8110E+00,9.6870E+00,9.5550E+00,9.5550E+00,9.2490E+00,8.2740E+00,7.3880E+00,6.6100E+00,5.3380E+00,4.4260E+00,4.4260E+00,4.3760E+00,3.9340E+00,3.9340E+00,3.8380E+00,3.7440E+00,3.7440E+00,2.8320E+00,1.9990E+00,1.1820E+00,7.7810E-01,5.5010E-01,4.1240E-01,3.4180E-01,3.4180E-01,2.5890E-01,1.7770E-01,8.6860E-02,5.1750E-02,2.4550E-02,1.4270E-02,9.3120E-03,6.5500E-03,3.7440E-03,2.4180E-03,2.3160E-03,1.5580E-03,1.0860E-03,6.1370E-04,5.8770E-04,2.7370E-04,1.5420E-04,9.8710E-05,6.8590E-05,5.0390E-05,3.8610E-05,3.0490E-05,2.4700E-05,2.0420E-05,1.7160E-05,1.4620E-05,1.2610E-05,1.0980E-05,9.6520E-06,7.6250E-06,6.1770E-06,5.1050E-06,4.2900E-06,3.6540E-06,3.1510E-06,2.7450E-06,1.5440E-06,9.8840E-07,6.8630E-07,3.8610E-07,2.4710E-07,1.0980E-07,6.1770E-08,2.7450E-08,1.5440E-08,9.8840E-09,6.8630E-09,3.8610E-09,2.4710E-09,1.0980E-09,6.1770E-10,2.7450E-10,1.5440E-10,9.8840E-11,6.8630E-11,3.8610E-11,2.4710E-11,1.0980E-11,6.1770E-12,2.7450E-12,1.5440E-12,9.8840E-13,6.8630E-13,3.8610E-13,2.4710E-13};
	final static double[] Incoh= {4.4860E-03,7.6980E-03,9.1390E-03,9.1390E-03,9.3140E-03,9.4920E-03,9.4920E-03,1.0750E-02,1.1920E-02,1.1920E-02,1.2720E-02,1.3550E-02,1.3550E-02,1.4240E-02,1.4960E-02,1.4960E-02,1.6660E-02,2.2270E-02,2.7550E-02,3.2460E-02,4.1070E-02,4.7890E-02,4.7890E-02,4.8290E-02,5.1920E-02,5.1920E-02,5.2750E-02,5.3580E-02,5.3580E-02,6.2400E-02,7.3020E-02,8.7060E-02,9.4850E-02,9.9180E-02,1.0150E-01,1.0240E-01,1.0240E-01,1.0300E-01,1.0250E-01,9.7710E-02,9.2120E-02,8.2370E-02,7.4780E-02,6.8860E-02,6.4000E-02,5.6540E-02,5.0990E-02,5.0450E-02,4.5660E-02,4.1570E-02,3.5510E-02,3.5080E-02,2.7980E-02,2.3350E-02,2.0170E-02,1.7830E-02,1.6020E-02,1.4590E-02,1.3410E-02,1.2420E-02,1.1590E-02,1.0870E-02,1.0240E-02,9.6880E-03,9.1990E-03,8.7600E-03,8.0040E-03,7.3820E-03,6.8560E-03,6.4070E-03,6.0170E-03,5.6740E-03,5.3750E-03,4.2700E-03,3.5640E-03,3.0720E-03,2.4230E-03,2.0110E-03,1.4320E-03,1.1230E-03,7.9570E-04,6.2340E-04,5.1590E-04,4.4160E-04,3.4510E-04,2.8380E-04,1.9820E-04,1.5340E-04,1.0670E-04,8.2340E-05,6.7330E-05,5.7080E-05,4.4000E-05,3.5910E-05,2.4820E-05,1.9080E-05,1.3160E-05,1.0100E-05,8.2270E-06,6.9520E-06,5.3320E-06,4.3370E-06};
	final static double[] PE= {3.4980E+03,1.5560E+03,1.1440E+03,1.3930E+03,2.0570E+03,3.0340E+03,3.3710E+03,3.7610E+03,2.9750E+03,3.4550E+03,2.9930E+03,2.5950E+03,2.7580E+03,2.4760E+03,2.2240E+03,2.3200E+03,1.8290E+03,9.1390E+02,5.2550E+02,3.3160E+02,1.5850E+02,9.1520E+01,2.3930E+02,2.3350E+02,1.7510E+02,2.4090E+02,2.2730E+02,2.1450E+02,2.4790E+02,1.3110E+02,6.1270E+01,2.0600E+01,9.3820E+00,5.0690E+00,3.0550E+00,2.2080E+00,1.1360E+01,7.2250E+00,4.0200E+00,1.3460E+00,6.1600E-01,2.0800E-01,9.9010E-02,5.7080E-02,3.7080E-02,1.9520E-02,1.2260E-02,1.1730E-02,7.9140E-03,5.6440E-03,3.4180E-03,3.2950E-03,1.7940E-03,1.1780E-03,8.6530E-04,6.7930E-04,5.5710E-04,4.7130E-04,4.0770E-04,3.5910E-04,3.2040E-04,2.8920E-04,2.6340E-04,2.4180E-04,2.2340E-04,2.0760E-04,1.8180E-04,1.6170E-04,1.4560E-04,1.3230E-04,1.2130E-04,1.1190E-04,1.0390E-04,7.6480E-05,6.0470E-05,5.0020E-05,3.7140E-05,2.9550E-05,1.9540E-05,1.4600E-05,9.6950E-06,7.2550E-06,5.7980E-06,4.8290E-06,3.6180E-06,2.8920E-06,1.9270E-06,1.4440E-06,9.6250E-07,7.2190E-07,5.7740E-07,4.8090E-07,3.6080E-07,2.8860E-07,1.9240E-07,1.4430E-07,9.6180E-08,7.2120E-08,5.7710E-08,4.8090E-08,3.6080E-08,2.8850E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {3.5090E+03,1.5660E+03,1.1540E+03,1.4030E+03,2.0670E+03,3.0440E+03,3.3820E+03,3.7710E+03,2.9850E+03,3.4650E+03,3.0030E+03,2.6040E+03,2.7670E+03,2.4860E+03,2.2330E+03,2.3290E+03,1.8380E+03,9.2220E+02,5.3290E+02,3.3820E+02,1.6390E+02,9.6000E+01,2.4370E+02,2.3790E+02,1.7900E+02,2.4490E+02,2.3120E+02,2.1830E+02,2.5170E+02,1.3400E+02,6.3340E+01,2.1870E+01,1.0250E+01,5.7180E+00,3.5690E+00,2.6520E+00,1.1800E+01,7.5870E+00,4.3000E+00,1.5310E+00,7.5990E-01,3.1490E-01,1.8810E-01,1.3520E-01,1.0760E-01,7.9810E-02,6.5660E-02,6.4510E-02,5.5450E-02,4.9770E-02,4.4140E-02,4.3840E-02,4.0570E-02,4.0180E-02,4.0820E-02,4.1880E-02,4.3120E-02,4.4460E-02,4.5820E-02,4.7170E-02,4.8520E-02,4.9830E-02,5.1100E-02,5.2350E-02,5.3500E-02,5.4600E-02,5.6660E-02,5.8520E-02,6.0250E-02,6.1860E-02,6.3350E-02,6.4760E-02,6.6050E-02,7.1490E-02,7.5620E-02,7.8910E-02,8.3780E-02,8.7300E-02,9.2890E-02,9.6280E-02,1.0020E-01,1.0250E-01,1.0400E-01,1.0510E-01,1.0650E-01,1.0740E-01,1.0870E-01,1.0950E-01,1.1030E-01,1.1070E-01,1.1100E-01,1.1120E-01,1.1140E-01,1.1160E-01,1.1180E-01,1.1190E-01,1.1200E-01,1.1210E-01,1.1210E-01,1.1220E-01,1.1220E-01,1.1220E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
