package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationGA {

	final static double[] MeV= {1.00000E-03,1.05600E-03,1.11500E-03,1.11501E-03,1.12900E-03,1.14200E-03,1.14201E-03,1.21800E-03,1.29800E-03,
			1.29801E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.03700E-02,
			1.03701E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,
			2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,
			2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,
			1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,
			2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,
			3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,
			5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,
			8.00000E+04,1.00000E+05};
	final static double[] Coh= {5.2230E+00,5.1920E+00,5.1590E+00,5.1590E+00,5.1510E+00,5.1430E+00,5.1430E+00,5.1030E+00,5.0600E+00,5.0600E+00,4.9360E+00,4.6310E+00,4.0450E+00,3.5210E+00,3.0590E+00,2.6570E+00,2.0200E+00,1.5730E+00,1.5080E+00,1.5080E+00,9.5010E-01,6.5200E-01,3.6530E-01,2.3100E-01,1.5940E-01,1.1720E-01,7.1590E-02,4.8330E-02,2.3030E-02,1.3390E-02,6.1450E-03,3.5090E-03,2.2650E-03,1.5800E-03,8.9310E-04,5.7310E-04,5.4870E-04,3.6730E-04,2.5530E-04,1.4370E-04,1.3760E-04,6.3920E-05,3.5970E-05,2.3020E-05,1.5990E-05,1.1750E-05,8.9910E-06,7.1070E-06,5.7560E-06,4.7570E-06,3.9970E-06,3.4060E-06,2.9370E-06,2.5580E-06,2.2480E-06,1.7770E-06,1.4390E-06,1.1890E-06,9.9930E-07,8.5150E-07,7.3430E-07,6.3960E-07,3.5970E-07,2.3030E-07,1.5990E-07,8.9910E-08,5.7560E-08,2.5580E-08,1.4390E-08,6.3950E-09,3.5970E-09,2.3030E-09,1.5990E-09,8.9910E-10,5.7560E-10,2.5580E-10,1.4390E-10,6.3950E-11,3.5970E-11,2.3030E-11,1.5990E-11,8.9910E-12,5.7560E-12,2.5580E-12,1.4390E-12,6.3950E-13,3.5970E-13,2.3030E-13,1.5990E-13,8.9910E-14,5.7560E-14};
	final static double[] Incoh= {6.4760E-03,7.0560E-03,7.6780E-03,7.6780E-03,7.8180E-03,7.9610E-03,7.9610E-03,8.7620E-03,9.6220E-03,9.6220E-03,1.1760E-02,1.6870E-02,2.6020E-02,3.4300E-02,4.2020E-02,4.9200E-02,6.1900E-02,7.2660E-02,7.4430E-02,7.4430E-02,9.2420E-02,1.0470E-01,1.1810E-01,1.2410E-01,1.2650E-01,1.2700E-01,1.2540E-01,1.2240E-01,1.1380E-01,1.0570E-01,9.3200E-02,8.3960E-02,7.6910E-02,7.1270E-02,6.2740E-02,5.6460E-02,5.5870E-02,5.0530E-02,4.5940E-02,3.9210E-02,3.8740E-02,3.0860E-02,2.5750E-02,2.2240E-02,1.9660E-02,1.7670E-02,1.6080E-02,1.4780E-02,1.3700E-02,1.2770E-02,1.1980E-02,1.1290E-02,1.0680E-02,1.0140E-02,9.6560E-03,8.8270E-03,8.1360E-03,7.5580E-03,7.0620E-03,6.6320E-03,6.2560E-03,5.9230E-03,4.7070E-03,3.9290E-03,3.3860E-03,2.6700E-03,2.2160E-03,1.5780E-03,1.2380E-03,8.7670E-04,6.8680E-04,5.6860E-04,4.8680E-04,3.8020E-04,3.1280E-04,2.1840E-04,1.6900E-04,1.1760E-04,9.0780E-05,7.4190E-05,6.2910E-05,4.8470E-05,3.9580E-05,2.7350E-05,2.1020E-05,1.4500E-05,1.1130E-05,9.0690E-06,7.6640E-06,5.8760E-06,4.7810E-06};
	final static double[] PE= {1.6920E+03,1.4870E+03,1.3070E+03,3.8140E+03,4.6390E+03,5.6430E+03,7.3380E+03,6.8270E+03,6.3540E+03,7.2000E+03,5.0820E+03,2.5110E+03,8.8190E+02,4.0940E+02,2.2340E+02,1.3550E+02,6.0940E+01,3.2550E+01,2.9420E+01,2.1980E+02,8.4330E+01,3.8520E+01,1.2330E+01,5.3710E+00,2.7900E+00,1.6240E+00,6.8530E-01,3.4900E-01,1.0190E-01,4.2810E-02,1.2960E-02,5.7750E-03,3.1860E-03,2.0120E-03,1.0280E-03,6.3980E-04,6.0780E-04,4.1080E-04,2.9570E-04,1.8180E-04,1.7550E-04,9.8120E-05,6.5850E-05,4.9160E-05,3.9070E-05,3.2360E-05,2.7580E-05,2.4010E-05,2.1250E-05,1.9050E-05,1.7270E-05,1.5780E-05,1.4530E-05,1.3460E-05,1.2530E-05,1.1020E-05,9.8290E-06,8.8700E-06,8.0850E-06,7.4250E-06,6.8640E-06,6.3810E-06,4.7210E-06,3.7460E-06,3.1040E-06,2.3120E-06,1.8420E-06,1.2210E-06,9.1300E-07,6.0720E-07,4.5480E-07,3.6350E-07,3.0270E-07,2.2690E-07,1.8150E-07,1.2090E-07,9.0600E-08,6.0410E-08,4.5300E-08,3.6230E-08,3.0200E-08,2.2650E-08,1.8110E-08,1.2070E-08,9.0600E-09,6.0370E-09,4.5290E-09,3.6220E-09,3.0190E-09,2.2640E-09,1.8110E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,8.5810E-05,4.2700E-04,1.5890E-03,1.7070E-03,4.3500E-03,6.9050E-03,9.1550E-03,1.1140E-02,1.2920E-02,1.4510E-02,1.5960E-02,1.7270E-02,1.8460E-02,1.9550E-02,2.0550E-02,2.1480E-02,2.2350E-02,2.3170E-02,2.4690E-02,2.6020E-02,2.7240E-02,2.8350E-02,2.9350E-02,3.0280E-02,3.1130E-02,3.4620E-02,3.7220E-02,3.9260E-02,4.2270E-02,4.4420E-02,4.7840E-02,4.9880E-02,5.2260E-02,5.3630E-02,5.4530E-02,5.5170E-02,5.6020E-02,5.6570E-02,5.7380E-02,5.7810E-02,5.8280E-02,5.8530E-02,5.8700E-02,5.8810E-02,5.8950E-02,5.9040E-02,5.9170E-02,5.9230E-02,5.9310E-02,5.9350E-02,5.9370E-02,5.9390E-02,5.9410E-02,5.9420E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0810E-05,4.4080E-05,8.7840E-05,1.3480E-04,1.8160E-04,2.2710E-04,2.7050E-04,3.1190E-04,3.5100E-04,3.8800E-04,4.2290E-04,4.5610E-04,4.8760E-04,5.1750E-04,5.7310E-04,6.2370E-04,6.7020E-04,7.1290E-04,7.5250E-04,7.8920E-04,8.2350E-04,9.6560E-04,1.0740E-03,1.1620E-03,1.2930E-03,1.3890E-03,1.5490E-03,1.6490E-03,1.7720E-03,1.8470E-03,1.8980E-03,1.9360E-03,1.9870E-03,2.0220E-03,2.0730E-03,2.1020E-03,2.1340E-03,2.1530E-03,2.1640E-03,2.1720E-03,2.1830E-03,2.1900E-03,2.1990E-03,2.2050E-03,2.2100E-03,2.2140E-03,2.2150E-03,2.2160E-03,2.2180E-03,2.2190E-03};
	final static double[] TotAttn= {1.6970E+03,1.4920E+03,1.3120E+03,3.8190E+03,4.6440E+03,5.6480E+03,7.3430E+03,6.8320E+03,6.3590E+03,7.2050E+03,5.0870E+03,2.5150E+03,8.8590E+02,4.1300E+02,2.2650E+02,1.3820E+02,6.3030E+01,3.4200E+01,3.1000E+01,2.2140E+02,8.5370E+01,3.9280E+01,1.2810E+01,5.7260E+00,3.0760E+00,1.8680E+00,8.8230E-01,5.1980E-01,2.3870E-01,1.6190E-01,1.1230E-01,9.3250E-02,8.2360E-02,7.4870E-02,6.4660E-02,5.7670E-02,5.7020E-02,5.1390E-02,4.6920E-02,4.1130E-02,4.0760E-02,3.5380E-02,3.2800E-02,3.1560E-02,3.0990E-02,3.0820E-02,3.0860E-02,3.1040E-02,3.1300E-02,3.1610E-02,3.1940E-02,3.2280E-02,3.2630E-02,3.3000E-02,3.3360E-02,3.4100E-02,3.4800E-02,3.5480E-02,3.6130E-02,3.6740E-02,3.7330E-02,3.7880E-02,4.0300E-02,4.2230E-02,4.3810E-02,4.6240E-02,4.8030E-02,5.0970E-02,5.2770E-02,5.4900E-02,5.6160E-02,5.6990E-02,5.7590E-02,5.8390E-02,5.8910E-02,5.9670E-02,6.0080E-02,6.0540E-02,6.0780E-02,6.0940E-02,6.1050E-02,6.1180E-02,6.1270E-02,6.1390E-02,6.1460E-02,6.1540E-02,6.1570E-02,6.1600E-02,6.1610E-02,6.1630E-02,6.1640E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
