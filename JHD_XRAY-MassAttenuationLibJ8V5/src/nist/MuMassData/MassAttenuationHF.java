package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationHF {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.66200E-03,1.66201E-03,1.68900E-03,1.71600E-03,1.71601E-03,2.00000E-03,2.10800E-03,
			2.10801E-03,2.23300E-03,2.36500E-03,2.36501E-03,2.48000E-03,2.60100E-03,2.60101E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,9.56100E-03,9.56110E-03,1.00000E-02,1.07400E-02,1.07401E-02,1.10000E-02,1.12700E-02,1.12701E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,6.53500E-02,6.53510E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.1130E+01,1.0660E+01,1.0490E+01,1.0490E+01,1.0460E+01,1.0430E+01,1.0430E+01,1.0150E+01,1.0030E+01,1.0030E+01,9.8950E+00,9.7570E+00,9.7570E+00,9.6490E+00,9.5350E+00,9.5350E+00,9.1230E+00,8.1580E+00,7.2810E+00,6.5080E+00,5.2430E+00,4.4770E+00,4.4770E+00,4.2920E+00,3.9980E+00,3.9980E+00,3.9030E+00,3.8090E+00,3.8090E+00,2.7720E+00,1.9580E+00,1.1570E+00,7.6050E-01,5.3750E-01,4.0280E-01,3.5160E-01,3.5160E-01,2.5300E-01,1.7350E-01,8.4750E-02,5.0470E-02,2.3940E-02,1.3910E-02,9.0730E-03,6.3800E-03,3.6440E-03,2.3530E-03,2.2550E-03,1.5160E-03,1.0570E-03,5.9720E-04,5.7190E-04,2.6630E-04,1.5000E-04,9.6060E-05,6.6700E-05,4.9020E-05,3.7550E-05,2.9660E-05,2.4030E-05,1.9860E-05,1.6690E-05,1.4220E-05,1.2260E-05,1.0680E-05,9.3900E-06,7.4190E-06,6.0090E-06,4.9660E-06,4.1740E-06,3.5560E-06,3.0660E-06,2.6700E-06,1.5020E-06,9.6160E-07,6.6770E-07,3.7550E-07,2.4040E-07,1.0680E-07,6.0090E-08,2.6700E-08,1.5020E-08,9.6120E-09,6.6770E-09,3.7550E-09,2.4040E-09,1.0680E-09,6.0090E-10,2.6700E-10,1.5020E-10,9.6120E-11,6.6770E-11,3.7550E-11,2.4040E-11,1.0680E-11,6.0090E-12,2.6700E-12,1.5020E-12,9.6120E-13,6.6770E-13,3.7550E-13,2.4040E-13};
	final static double[] Incoh= {4.6160E-03,7.8380E-03,8.8530E-03,8.8530E-03,9.0230E-03,9.1940E-03,9.1940E-03,1.0910E-02,1.1570E-02,1.1570E-02,1.2330E-02,1.3130E-02,1.3130E-02,1.3820E-02,1.4540E-02,1.4540E-02,1.6900E-02,2.2570E-02,2.7880E-02,3.2780E-02,4.1360E-02,4.7070E-02,4.7070E-02,4.8550E-02,5.0950E-02,5.0950E-02,5.1770E-02,5.2600E-02,5.2600E-02,6.2760E-02,7.3420E-02,8.7490E-02,9.5210E-02,9.9460E-02,1.0180E-01,1.0250E-01,1.0250E-01,1.0330E-01,1.0260E-01,9.7840E-02,9.2210E-02,8.2390E-02,7.4830E-02,6.8860E-02,6.4040E-02,5.6550E-02,5.0980E-02,5.0440E-02,4.5680E-02,4.1570E-02,3.5530E-02,3.5090E-02,2.7970E-02,2.3350E-02,2.0170E-02,1.7830E-02,1.6030E-02,1.4590E-02,1.3410E-02,1.2420E-02,1.1590E-02,1.0870E-02,1.0240E-02,9.6870E-03,9.1970E-03,8.7590E-03,8.0030E-03,7.3820E-03,6.8560E-03,6.4070E-03,6.0160E-03,5.6750E-03,5.3750E-03,4.2710E-03,3.5660E-03,3.0710E-03,2.4220E-03,2.0110E-03,1.4320E-03,1.1230E-03,7.9560E-04,6.2320E-04,5.1590E-04,4.4160E-04,3.4480E-04,2.8380E-04,1.9820E-04,1.5340E-04,1.0670E-04,8.2320E-05,6.7310E-05,5.7090E-05,4.3960E-05,3.5900E-05,2.4820E-05,1.9080E-05,1.3150E-05,1.0100E-05,8.2260E-06,6.9540E-06,5.3310E-06,4.3390E-06};
	final static double[] PE= {3.3240E+03,1.4780E+03,1.1920E+03,1.4760E+03,2.1830E+03,3.2220E+03,3.6340E+03,3.5860E+03,3.1430E+03,3.6470E+03,3.1730E+03,2.7600E+03,2.9330E+03,2.6280E+03,2.3540E+03,2.4560E+03,1.7590E+03,8.7760E+02,5.0410E+02,3.1790E+02,1.5180E+02,9.5450E+01,2.5120E+02,2.2580E+02,1.8540E+02,2.5490E+02,2.4040E+02,2.2670E+02,2.6210E+02,1.2610E+02,5.8840E+01,1.9740E+01,8.9710E+00,4.8420E+00,2.9150E+00,2.2970E+00,1.1910E+01,6.9940E+00,3.8770E+00,1.2950E+00,5.9110E-01,1.9910E-01,9.4640E-02,5.4490E-02,3.5390E-02,1.8600E-02,1.1680E-02,1.1180E-02,7.5370E-03,5.3750E-03,3.2570E-03,3.1400E-03,1.7100E-03,1.1230E-03,8.2560E-04,6.4810E-04,5.3170E-04,4.4970E-04,3.8940E-04,3.4280E-04,3.0590E-04,2.7610E-04,2.5160E-04,2.3090E-04,2.1340E-04,1.9830E-04,1.7370E-04,1.5450E-04,1.3900E-04,1.2640E-04,1.1590E-04,1.0690E-04,9.9290E-05,7.3080E-05,5.7800E-05,4.7810E-05,3.5490E-05,2.8240E-05,1.8680E-05,1.3950E-05,9.2650E-06,6.9370E-06,5.5430E-06,4.6160E-06,3.4580E-06,2.7640E-06,1.8410E-06,1.3810E-06,9.2010E-07,6.9000E-07,5.5200E-07,4.5990E-07,3.4480E-07,2.7590E-07,1.8390E-07,1.3790E-07,9.1940E-08,6.8960E-08,5.5160E-08,4.5950E-08,3.4480E-08,2.7580E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {3.3350E+03,1.4890E+03,1.2030E+03,1.4870E+03,2.1930E+03,3.2330E+03,3.6440E+03,3.5970E+03,3.1530E+03,3.6570E+03,3.1830E+03,2.7690E+03,2.9430E+03,2.6370E+03,2.3630E+03,2.4650E+03,1.7680E+03,8.8570E+02,5.1140E+02,3.2440E+02,1.5710E+02,9.9970E+01,2.5570E+02,2.3010E+02,1.8940E+02,2.5890E+02,2.4430E+02,2.3060E+02,2.6590E+02,1.2900E+02,6.0870E+01,2.0980E+01,9.8270E+00,5.4790E+00,3.4200E+00,2.7510E+00,1.2360E+01,7.3500E+00,4.1530E+00,1.4770E+00,7.3380E-01,3.0550E-01,1.8340E-01,1.3240E-01,1.0580E-01,7.8790E-02,6.5020E-02,6.3880E-02,5.5050E-02,4.9440E-02,4.3880E-02,4.3570E-02,4.0300E-02,3.9890E-02,4.0520E-02,4.1550E-02,4.2780E-02,4.4090E-02,4.5430E-02,4.6780E-02,4.8090E-02,4.9400E-02,5.0660E-02,5.1870E-02,5.3010E-02,5.4100E-02,5.6100E-02,5.7960E-02,5.9690E-02,6.1250E-02,6.2740E-02,6.4110E-02,6.5420E-02,7.0750E-02,7.4840E-02,7.8080E-02,8.2930E-02,8.6400E-02,9.1940E-02,9.5280E-02,9.9200E-02,1.0140E-01,1.0290E-01,1.0400E-01,1.0540E-01,1.0630E-01,1.0770E-01,1.0840E-01,1.0920E-01,1.0960E-01,1.0990E-01,1.1000E-01,1.1030E-01,1.1040E-01,1.1060E-01,1.1080E-01,1.1090E-01,1.1090E-01,1.1100E-01,1.1100E-01,1.1100E-01,1.1110E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
