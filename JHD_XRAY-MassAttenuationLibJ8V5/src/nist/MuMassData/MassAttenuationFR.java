package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationFR {

	final static double[] MeV= {1.00000E-03,1.07400E-03,1.15300E-03,1.15301E-03,1.50000E-03,2.00000E-03,3.00000E-03,3.00001E-03,3.00000E-03,
			3.13600E-03,3.13601E-03,3.38900E-03,3.66300E-03,3.66310E-03,4.00000E-03,4.32700E-03,4.32710E-03,4.48700E-03,4.65200E-03,
			4.65210E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,1.50300E-02,1.50301E-02,1.64100E-02,1.79100E-02,
			1.79101E-02,1.82700E-02,1.86400E-02,1.86401E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,
			1.00000E-01,1.01100E-01,1.01101E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,
			1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,
			7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,
			1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,
			8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,
			1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,
			3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.2960E+01,1.2880E+01,1.2790E+01,1.2790E+01,1.2400E+01,1.1790E+01,1.0560E+01,1.0560E+01,1.0560E+01,1.0400E+01,1.0400E+01,1.0070E+01,9.8020E+00,9.8020E+00,9.4430E+00,9.1130E+00,9.1130E+00,8.9570E+00,8.7970E+00,8.7970E+00,8.4760E+00,7.6390E+00,6.2750E+00,5.2300E+00,3.5180E+00,3.5100E+00,3.5100E+00,3.1790E+00,2.8680E+00,2.8680E+00,2.7990E+00,2.7330E+00,2.7330E+00,2.5090E+00,1.4760E+00,9.9100E-01,7.0960E-01,5.3220E-01,3.3430E-01,2.3160E-01,2.2720E-01,2.2720E-01,1.1500E-01,6.8690E-02,3.2890E-02,1.9290E-02,1.2660E-02,8.9380E-03,5.1360E-03,3.3270E-03,3.1890E-03,2.1510E-03,1.5030E-03,8.5140E-04,8.1550E-04,3.8070E-04,2.1460E-04,1.3750E-04,9.5560E-05,7.0230E-05,5.3790E-05,4.2500E-05,3.4430E-05,2.8460E-05,2.3910E-05,2.0380E-05,1.7570E-05,1.5310E-05,1.3450E-05,1.0630E-05,8.6110E-06,7.1180E-06,5.9810E-06,5.0950E-06,4.3930E-06,3.8260E-06,2.1530E-06,1.3780E-06,9.5700E-07,5.3820E-07,3.4460E-07,1.5310E-07,8.6110E-08,3.8260E-08,2.1530E-08,1.3780E-08,9.5700E-09,5.3820E-09,3.4460E-09,1.5310E-09,8.6110E-10,3.8260E-10,2.1530E-10,1.3780E-10,9.5700E-11,5.3820E-11,3.4460E-11,1.5310E-11,8.6110E-12,3.8260E-12,2.1530E-12,1.3780E-12,9.5700E-13,5.3820E-13,3.4460E-13};
	final static double[] Incoh= {4.0940E-03,4.5010E-03,4.9500E-03,4.9500E-03,6.9500E-03,9.9320E-03,1.5800E-02,1.5800E-02,1.5800E-02,1.6570E-02,1.6570E-02,1.8160E-02,1.9470E-02,1.9470E-02,2.1220E-02,2.2830E-02,2.2830E-02,2.3600E-02,2.4380E-02,2.4380E-02,2.5980E-02,3.0240E-02,3.7940E-02,4.4770E-02,5.8140E-02,5.8190E-02,5.8190E-02,6.0870E-02,6.3860E-02,6.3860E-02,6.4510E-02,6.5160E-02,6.5160E-02,6.7450E-02,7.9980E-02,8.7680E-02,9.2270E-02,9.4890E-02,9.6890E-02,9.6720E-02,9.6700E-02,9.6700E-02,9.2940E-02,8.8000E-02,7.8980E-02,7.1880E-02,6.6260E-02,6.1650E-02,5.4520E-02,4.9200E-02,4.8690E-02,4.4100E-02,4.0150E-02,3.4320E-02,3.3890E-02,2.7030E-02,2.2570E-02,1.9500E-02,1.7240E-02,1.5490E-02,1.4100E-02,1.2960E-02,1.2010E-02,1.1210E-02,1.0510E-02,9.9020E-03,9.3670E-03,8.8920E-03,8.4680E-03,7.7420E-03,7.1400E-03,6.6290E-03,6.1940E-03,5.8190E-03,5.4870E-03,5.1980E-03,4.1290E-03,3.4480E-03,2.9700E-03,2.3420E-03,1.9440E-03,1.3850E-03,1.0860E-03,7.6960E-04,6.0270E-04,4.9870E-04,4.2720E-04,3.3350E-04,2.7430E-04,1.9170E-04,1.4840E-04,1.0320E-04,7.9600E-05,6.5100E-05,5.5190E-05,4.2530E-05,3.4730E-05,2.4000E-05,1.8450E-05,1.2720E-05,9.7670E-06,7.9550E-06,6.7240E-06,5.1550E-06,4.1940E-06};
	final static double[] PE= {6.0700E+03,5.3200E+03,4.6630E+03,4.7610E+03,2.8330E+03,1.5500E+03,6.3080E+02,1.9850E+03,1.9840E+03,1.4390E+03,2.2440E+03,1.7760E+03,1.4060E+03,1.6310E+03,1.3120E+03,1.0770E+03,1.1440E+03,1.0470E+03,9.5780E+02,9.9910E+02,8.4030E+02,5.3740E+02,2.6210E+02,1.4860E+02,5.2170E+01,5.1870E+01,1.2680E+02,1.0000E+02,7.8900E+01,1.1080E+02,1.0540E+02,1.0030E+02,1.1590E+02,9.6750E+01,3.3940E+01,1.5860E+01,8.7220E+00,5.3330E+00,2.4400E+00,1.3270E+00,1.2860E+00,5.7650E+00,2.0860E+00,9.8450E-01,3.4590E-01,1.6890E-01,9.9100E-02,6.5180E-02,3.4780E-02,2.1980E-02,2.1050E-02,1.4210E-02,1.0110E-02,6.1110E-03,5.8920E-03,3.1890E-03,2.0840E-03,1.5260E-03,1.1940E-03,9.7720E-04,8.2490E-04,7.1260E-04,6.2650E-04,5.5870E-04,5.0360E-04,4.5850E-04,4.2040E-04,3.8830E-04,3.6050E-04,3.1540E-04,2.8030E-04,2.5210E-04,2.2910E-04,2.0980E-04,1.9360E-04,1.7960E-04,1.3200E-04,1.0430E-04,8.6220E-05,6.4000E-05,5.0870E-05,3.3620E-05,2.5110E-05,1.6670E-05,1.2480E-05,9.9670E-06,8.3010E-06,6.2190E-06,4.9710E-06,3.3110E-06,2.4820E-06,1.6540E-06,1.2400E-06,9.9210E-07,8.2680E-07,6.2000E-07,4.9600E-07,3.3050E-07,2.4790E-07,1.6530E-07,1.2400E-07,9.9150E-08,8.2630E-08,6.1970E-08,4.9580E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {6.0830E+03,5.3330E+03,4.6760E+03,4.7730E+03,2.8450E+03,1.5620E+03,6.4140E+02,1.9950E+03,1.9940E+03,1.4490E+03,2.2550E+03,1.7860E+03,1.4160E+03,1.6410E+03,1.3220E+03,1.0860E+03,1.1530E+03,1.0560E+03,9.6660E+02,1.0080E+03,8.4880E+02,5.4500E+02,2.6850E+02,1.5390E+02,5.5750E+01,5.5440E+01,1.3030E+02,1.0320E+02,8.1830E+01,1.1370E+02,1.0830E+02,1.0310E+02,1.1870E+02,9.9330E+01,3.5500E+01,1.6930E+01,9.5240E+00,5.9600E+00,2.8710E+00,1.6550E+00,1.6100E+00,6.0890E+00,2.2940E+00,1.1410E+00,4.5780E-01,2.6010E-01,1.7800E-01,1.3580E-01,9.4430E-02,7.4510E-02,7.2920E-02,6.0870E-02,5.3760E-02,4.7210E-02,4.6860E-02,4.3240E-02,4.2830E-02,4.3580E-02,4.4790E-02,4.6190E-02,4.7690E-02,4.9250E-02,5.0770E-02,5.2280E-02,5.3740E-02,5.5160E-02,5.6530E-02,5.7860E-02,5.9110E-02,6.1400E-02,6.3510E-02,6.5460E-02,6.7280E-02,6.8970E-02,7.0510E-02,7.1990E-02,7.8030E-02,8.2650E-02,8.6300E-02,9.1720E-02,9.5560E-02,1.0180E-01,1.0550E-01,1.0980E-01,1.1230E-01,1.1400E-01,1.1520E-01,1.1680E-01,1.1780E-01,1.1930E-01,1.2010E-01,1.2100E-01,1.2140E-01,1.2180E-01,1.2200E-01,1.2220E-01,1.2240E-01,1.2270E-01,1.2280E-01,1.2290E-01,1.2300E-01,1.2300E-01,1.2310E-01,1.2310E-01,1.2310E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
