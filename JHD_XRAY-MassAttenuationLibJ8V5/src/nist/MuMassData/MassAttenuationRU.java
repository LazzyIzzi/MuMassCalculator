package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationRU {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.83800E-03,2.83801E-03,2.90200E-03,2.96700E-03,2.96701E-03,3.00000E-03,
			3.22400E-03,3.22410E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,2.21200E-02,
			2.21201E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,2.00000E-01,3.00000E-01,
			4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,
			3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,
			1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,
			3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,
			5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,
			8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {7.2750E+00,6.8760E+00,6.4410E+00,5.7110E+00,5.7110E+00,5.6560E+00,5.6010E+00,5.6010E+00,5.5740E+00,5.3920E+00,5.3920E+00,4.8080E+00,4.1730E+00,3.6570E+00,2.8980E+00,2.3710E+00,1.5330E+00,1.0530E+00,9.1760E-01,9.1760E-01,5.9280E-01,3.8680E-01,2.7160E-01,2.0040E-01,1.2230E-01,8.2760E-02,4.0090E-02,2.3550E-02,1.0900E-02,6.2620E-03,4.0530E-03,2.8350E-03,1.6080E-03,1.0330E-03,9.8970E-04,6.6320E-04,4.6120E-04,2.5980E-04,2.4880E-04,1.1560E-04,6.5070E-05,4.1650E-05,2.8930E-05,2.1250E-05,1.6270E-05,1.2860E-05,1.0420E-05,8.6100E-06,7.2330E-06,6.1610E-06,5.3140E-06,4.6290E-06,4.0680E-06,3.2150E-06,2.6040E-06,2.1520E-06,1.8080E-06,1.5410E-06,1.3290E-06,1.1570E-06,6.5130E-07,4.1660E-07,2.8930E-07,1.6270E-07,1.0420E-07,4.6290E-08,2.6040E-08,1.1570E-08,6.5070E-09,4.1660E-09,2.8930E-09,1.6270E-09,1.0420E-09,4.6290E-10,2.6040E-10,1.1570E-10,6.5070E-11,4.1660E-11,2.8930E-11,1.6270E-11,1.0420E-11,4.6290E-12,2.6040E-12,1.1570E-12,6.5070E-13,4.1660E-13,2.8930E-13,1.6270E-13,1.0420E-13};
	final static double[] Incoh= {5.7920E-03,1.0400E-02,1.4970E-02,2.2250E-02,2.2250E-02,2.2790E-02,2.3330E-02,2.3330E-02,2.3600E-02,2.5420E-02,2.5420E-02,3.1430E-02,3.8590E-02,4.5190E-02,5.6700E-02,6.5960E-02,8.2460E-02,9.3610E-02,9.7240E-02,9.7240E-02,1.0710E-01,1.1400E-01,1.1740E-01,1.1890E-01,1.1870E-01,1.1660E-01,1.0930E-01,1.0210E-01,9.0450E-02,8.1750E-02,7.5020E-02,6.9590E-02,6.1310E-02,5.5210E-02,5.4630E-02,4.9420E-02,4.4940E-02,3.8380E-02,3.7910E-02,3.0210E-02,2.5210E-02,2.1770E-02,1.9250E-02,1.7300E-02,1.5740E-02,1.4470E-02,1.3410E-02,1.2510E-02,1.1730E-02,1.1050E-02,1.0460E-02,9.9270E-03,9.4500E-03,8.6400E-03,7.9660E-03,7.4000E-03,6.9180E-03,6.4950E-03,6.1250E-03,5.8000E-03,4.6090E-03,3.8470E-03,3.3150E-03,2.6140E-03,2.1700E-03,1.5450E-03,1.2110E-03,8.5860E-04,6.7270E-04,5.5670E-04,4.7670E-04,3.7230E-04,3.0630E-04,2.1390E-04,1.6550E-04,1.1510E-04,8.8840E-05,7.2630E-05,6.1610E-05,4.7460E-05,3.8750E-05,2.6780E-05,2.0590E-05,1.4200E-05,1.0900E-05,8.8780E-06,7.5020E-06,5.7530E-06,4.6810E-06};
	final static double[] PE= {5.7110E+03,2.2340E+03,1.1130E+03,4.6480E+02,1.6380E+03,1.5400E+03,1.4470E+03,1.9690E+03,1.9570E+03,1.6320E+03,1.8690E+03,1.0900E+03,6.1250E+02,3.7940E+02,1.7550E+02,9.5570E+01,3.1080E+01,1.3850E+01,1.0420E+01,6.7750E+01,3.0700E+01,1.4010E+01,7.5310E+00,4.5030E+00,1.9740E+00,1.0330E+00,3.1530E-01,1.3610E-01,4.2700E-02,1.9410E-02,1.0850E-02,6.9060E-03,3.5560E-03,2.2180E-03,2.1100E-03,1.4230E-03,1.0210E-03,6.2320E-04,6.0180E-04,3.3270E-04,2.2140E-04,1.6430E-04,1.3000E-04,1.0730E-04,9.1160E-05,7.9190E-05,6.9950E-05,6.2620E-05,5.6660E-05,5.1720E-05,4.7570E-05,4.4030E-05,4.0980E-05,3.5980E-05,3.2060E-05,2.8900E-05,2.6310E-05,2.4150E-05,2.2310E-05,2.0740E-05,1.5310E-05,1.2140E-05,1.0050E-05,7.4780E-06,5.9530E-06,3.9430E-06,2.9480E-06,1.9590E-06,1.4670E-06,1.1730E-06,9.7660E-07,7.3170E-07,5.8510E-07,3.8980E-07,2.9230E-07,1.9480E-07,1.4600E-07,1.1680E-07,9.7360E-08,7.2990E-08,5.8400E-08,3.8930E-08,2.9200E-08,1.9470E-08,1.4600E-08,1.1680E-08,9.7300E-09,7.2990E-09,5.8400E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.4370E-04,6.7810E-04,2.3850E-03,2.5530E-03,6.2500E-03,9.7300E-03,1.2760E-02,1.5380E-02,1.7730E-02,1.9840E-02,2.1750E-02,2.3510E-02,2.5110E-02,2.6600E-02,2.7960E-02,2.9220E-02,3.0390E-02,3.1480E-02,3.3480E-02,3.5270E-02,3.6890E-02,3.8370E-02,3.9720E-02,4.0960E-02,4.2100E-02,4.6710E-02,5.0130E-02,5.2800E-02,5.6740E-02,5.9540E-02,6.3990E-02,6.6670E-02,6.9770E-02,7.1560E-02,7.2690E-02,7.3590E-02,7.4660E-02,7.5430E-02,7.6450E-02,7.7040E-02,7.7640E-02,7.8000E-02,7.8170E-02,7.8350E-02,7.8530E-02,7.8650E-02,7.8830E-02,7.8890E-02,7.9010E-02,7.9070E-02,7.9070E-02,7.9130E-02,7.9130E-02,7.9130E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0570E-05,4.3130E-05,8.5860E-05,1.3170E-04,1.7740E-04,2.2170E-04,2.6410E-04,3.0440E-04,3.4240E-04,3.7840E-04,4.1220E-04,4.4440E-04,4.7490E-04,5.0390E-04,5.5760E-04,6.0660E-04,6.5130E-04,6.9240E-04,7.3050E-04,7.6570E-04,7.9840E-04,9.3430E-04,1.0370E-03,1.1190E-03,1.2420E-03,1.3320E-03,1.4820E-03,1.5750E-03,1.6900E-03,1.7600E-03,1.8070E-03,1.8420E-03,1.8890E-03,1.9220E-03,1.9690E-03,1.9960E-03,2.0250E-03,2.0430E-03,2.0530E-03,2.0600E-03,2.0710E-03,2.0770E-03,2.0850E-03,2.0900E-03,2.0950E-03,2.0980E-03,2.1000E-03,2.1010E-03,2.1020E-03,2.1030E-03};
	final static double[] TotAttn= {5.7180E+03,2.2410E+03,1.1190E+03,4.7050E+02,1.6440E+03,1.5450E+03,1.4520E+03,1.9750E+03,1.9630E+03,1.6370E+03,1.8740E+03,1.0950E+03,6.1670E+02,3.8310E+02,1.7850E+02,9.8010E+01,3.2700E+01,1.4990E+01,1.1430E+01,6.8760E+01,3.1400E+01,1.4510E+01,7.9200E+00,4.8220E+00,2.2150E+00,1.2320E+00,4.6470E-01,2.6180E-01,1.4400E-01,1.0740E-01,8.9920E-02,7.9330E-02,6.6480E-02,5.8460E-02,5.7730E-02,5.1650E-02,4.7100E-02,4.1650E-02,4.1310E-02,3.6920E-02,3.5270E-02,3.4820E-02,3.4910E-02,3.5330E-02,3.5910E-02,3.6580E-02,3.7300E-02,3.8030E-02,3.8770E-02,3.9490E-02,4.0170E-02,4.0840E-02,4.1480E-02,4.2720E-02,4.3880E-02,4.4980E-02,4.6010E-02,4.6980E-02,4.7870E-02,4.8720E-02,5.2270E-02,5.5030E-02,5.7250E-02,6.0600E-02,6.3040E-02,6.7020E-02,6.9460E-02,7.2320E-02,7.3990E-02,7.5060E-02,7.5910E-02,7.6920E-02,7.7660E-02,7.8630E-02,7.9200E-02,7.9780E-02,8.0130E-02,8.0300E-02,8.0470E-02,8.0650E-02,8.0770E-02,8.0940E-02,8.1000E-02,8.1120E-02,8.1180E-02,8.1180E-02,8.1240E-02,8.1240E-02,8.1240E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
