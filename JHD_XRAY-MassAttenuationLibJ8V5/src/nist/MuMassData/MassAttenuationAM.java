package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationAM {

	final static double[] MeV= {1.00000E-03,1.06600E-03,1.13600E-03,1.13601E-03,1.26600E-03,1.41200E-03,1.41201E-03,1.50000E-03,1.61700E-03,
			1.61701E-03,2.00000E-03,3.00000E-03,3.88700E-03,3.88710E-03,4.00000E-03,4.09200E-03,4.09210E-03,4.37000E-03,4.66700E-03,
			4.66710E-03,5.00000E-03,5.71000E-03,5.71010E-03,6.00000E-03,6.12100E-03,6.12110E-03,8.00000E-03,1.00000E-02,1.50000E-02,
			1.85000E-02,1.85001E-02,2.00000E-02,2.29400E-02,2.29401E-02,2.33500E-02,2.37700E-02,2.37701E-02,3.00000E-02,4.00000E-02,
			5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.25000E-01,1.25001E-01,1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,
			5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,
			4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,
			1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,
			4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,
			6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,
			1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.4230E+01,1.4160E+01,1.4080E+01,1.4080E+01,1.3930E+01,1.3750E+01,1.3750E+01,1.3640E+01,1.3480E+01,1.3480E+01,1.2990E+01,1.1670E+01,1.0570E+01,1.0570E+01,1.0440E+01,1.0330E+01,1.0330E+01,1.0010E+01,9.6870E+00,9.6870E+00,9.3410E+00,8.6590E+00,8.6590E+00,8.4020E+00,8.2980E+00,8.2980E+00,6.9050E+00,5.7800E+00,3.9390E+00,3.1240E+00,3.1240E+00,2.8490E+00,2.4060E+00,2.4060E+00,2.3520E+00,2.2990E+00,2.2990E+00,1.6820E+00,1.1300E+00,8.1760E-01,6.1670E-01,3.8750E-01,2.6880E-01,1.8470E-01,1.8470E-01,1.3500E-01,8.0970E-02,3.8920E-02,2.2940E-02,1.5120E-02,1.0710E-02,6.1790E-03,4.0140E-03,3.8480E-03,2.6020E-03,1.8210E-03,1.0340E-03,9.9030E-04,4.6310E-04,2.6140E-04,1.6760E-04,1.1650E-04,8.5630E-05,6.5580E-05,5.1830E-05,4.2000E-05,3.4710E-05,2.9160E-05,2.4850E-05,2.1430E-05,1.8670E-05,1.6410E-05,1.2970E-05,1.0500E-05,8.6820E-06,7.2940E-06,6.2160E-06,5.3590E-06,4.6680E-06,2.6260E-06,1.6810E-06,1.1670E-06,6.5660E-07,4.2020E-07,1.8680E-07,1.0510E-07,4.6700E-08,2.6260E-08,1.6810E-08,1.1670E-08,6.5660E-09,4.2020E-09,1.8680E-09,1.0510E-09,4.6700E-10,2.6260E-10,1.6810E-10,1.1670E-10,6.5660E-11,4.2020E-11,1.8680E-11,1.0510E-11,4.6700E-12,2.6260E-12,1.6810E-12,1.1670E-12,6.5660E-13,4.2020E-13};
	final static double[] Incoh= {4.3280E-03,4.7060E-03,5.1090E-03,5.1090E-03,5.8440E-03,6.6600E-03,6.6600E-03,7.1630E-03,7.8320E-03,7.8320E-03,1.0000E-02,1.5480E-02,1.9970E-02,1.9970E-02,2.0510E-02,2.0960E-02,2.0960E-02,2.2270E-02,2.3630E-02,2.3630E-02,2.5120E-02,2.8120E-02,2.8120E-02,2.9290E-02,2.9780E-02,2.9780E-02,3.6720E-02,4.3280E-02,5.6640E-02,6.3670E-02,6.3670E-02,6.6230E-02,7.0610E-02,7.0610E-02,7.1160E-02,7.1700E-02,7.1700E-02,7.8490E-02,8.6000E-02,9.0680E-02,9.3460E-02,9.5710E-02,9.5740E-02,9.4370E-02,9.4370E-02,9.2290E-02,8.7580E-02,7.8790E-02,7.1780E-02,6.6200E-02,6.1640E-02,5.4530E-02,4.9230E-02,4.8730E-02,4.4150E-02,4.0190E-02,3.4360E-02,3.3940E-02,2.7080E-02,2.2610E-02,1.9530E-02,1.7270E-02,1.5520E-02,1.4130E-02,1.2990E-02,1.2040E-02,1.1230E-02,1.0530E-02,9.9200E-03,9.3850E-03,8.9100E-03,8.4860E-03,7.7550E-03,7.1530E-03,6.6420E-03,6.2060E-03,5.8300E-03,5.4980E-03,5.2080E-03,4.1380E-03,3.4540E-03,2.9760E-03,2.3470E-03,1.9480E-03,1.3870E-03,1.0880E-03,7.7100E-04,6.0380E-04,4.9970E-04,4.2790E-04,3.3420E-04,2.7500E-04,1.9200E-04,1.4860E-04,1.0330E-04,7.9780E-05,6.5210E-05,5.5300E-05,4.2620E-05,3.4790E-05,2.4040E-05,1.8480E-05,1.2750E-05,9.7870E-06,7.9710E-06,6.7370E-06,5.1660E-06,4.2020E-06};
	final static double[] PE= {7.3540E+03,6.5780E+03,5.8870E+03,6.2560E+03,5.0870E+03,4.1380E+03,4.1900E+03,3.7110E+03,3.1860E+03,3.2460E+03,2.0820E+03,8.5210E+02,4.7030E+02,1.1010E+03,1.0390E+03,9.7470E+02,1.3760E+03,1.1720E+03,9.9820E+02,1.1630E+03,9.8040E+02,6.9820E+02,7.4010E+02,6.5560E+02,6.2360E+02,6.4990E+02,3.3600E+02,1.9220E+02,6.8380E+01,3.9790E+01,9.3830E+01,7.6430E+01,5.2500E+01,7.5000E+01,7.1570E+01,6.8330E+01,7.8790E+01,4.3750E+01,2.0790E+01,1.1590E+01,7.1500E+00,3.3180E+00,1.8240E+00,1.0010E+00,4.0980E+00,2.5920E+00,1.2490E+00,4.4990E-01,2.2350E-01,1.3270E-01,8.8030E-02,4.7450E-02,3.0100E-02,2.8810E-02,1.9490E-02,1.3860E-02,8.3690E-03,8.0670E-03,4.3560E-03,2.8390E-03,2.0750E-03,1.6220E-03,1.3250E-03,1.1180E-03,9.6450E-04,8.4730E-04,7.5520E-04,6.8060E-04,6.1920E-04,5.6760E-04,5.2400E-04,4.8660E-04,4.2540E-04,3.7780E-04,3.3970E-04,3.0850E-04,2.8240E-04,2.6060E-04,2.4180E-04,1.7750E-04,1.4020E-04,1.1590E-04,8.5950E-05,6.8310E-05,4.5140E-05,3.3700E-05,2.2370E-05,1.6740E-05,1.3370E-05,1.1130E-05,8.3420E-06,6.6700E-06,4.4420E-06,3.3300E-06,2.2190E-06,1.6640E-06,1.3310E-06,1.1090E-06,8.3170E-07,6.6520E-07,4.4350E-07,3.3250E-07,2.2170E-07,1.6630E-07,1.3300E-07,1.1080E-07,8.3150E-08,6.6520E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {7.3680E+03,6.5920E+03,5.9010E+03,6.2700E+03,5.1010E+03,4.1510E+03,4.2030E+03,3.7250E+03,3.2000E+03,3.2590E+03,2.0950E+03,8.6370E+02,4.8080E+02,1.1110E+03,1.0490E+03,9.8500E+02,1.3860E+03,1.1820E+03,1.0080E+03,1.1730E+03,9.8980E+02,7.0690E+02,7.4880E+02,6.6400E+02,6.3190E+02,6.5820E+02,3.4290E+02,1.9800E+02,7.2380E+01,4.2980E+01,9.7020E+01,7.9350E+01,5.4980E+01,7.7470E+01,7.3990E+01,7.0700E+01,8.1160E+01,4.5520E+01,2.2010E+01,1.2490E+01,7.8610E+00,3.8010E+00,2.1880E+00,1.2800E+00,4.3770E+00,2.8190E+00,1.4180E+00,5.6760E-01,3.1830E-01,2.1400E-01,1.6040E-01,1.0820E-01,8.3350E-02,8.1400E-02,6.6720E-02,5.8220E-02,5.0620E-02,5.0230E-02,4.5970E-02,4.5300E-02,4.5990E-02,4.7150E-02,4.8610E-02,5.0170E-02,5.1800E-02,5.3430E-02,5.5030E-02,5.6590E-02,5.8100E-02,5.9570E-02,6.0980E-02,6.2300E-02,6.4780E-02,6.7040E-02,6.9150E-02,7.1120E-02,7.2930E-02,7.4610E-02,7.6170E-02,8.2700E-02,8.7660E-02,9.1560E-02,9.7390E-02,1.0160E-01,1.0820E-01,1.1210E-01,1.1680E-01,1.1950E-01,1.2130E-01,1.2260E-01,1.2430E-01,1.2530E-01,1.2690E-01,1.2780E-01,1.2870E-01,1.2930E-01,1.2960E-01,1.2980E-01,1.3010E-01,1.3030E-01,1.3050E-01,1.3070E-01,1.3080E-01,1.3090E-01,1.3100E-01,1.3100E-01,1.3100E-01,1.3100E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
