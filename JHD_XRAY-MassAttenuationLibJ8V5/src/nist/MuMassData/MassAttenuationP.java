package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationP {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.14500E-03,2.14501E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {2.6560E+00,2.4130E+00,2.1640E+00,2.0960E+00,2.0960E+00,1.7450E+00,1.4480E+00,1.2370E+00,1.0760E+00,8.3290E-01,6.5390E-01,3.8240E-01,2.5020E-01,1.3410E-01,8.4500E-02,5.8060E-02,4.2230E-02,2.5120E-02,1.6630E-02,7.7250E-03,4.4350E-03,2.0050E-03,1.1350E-03,7.2870E-04,5.0690E-04,2.8560E-04,1.8290E-04,1.7520E-04,1.1710E-04,8.1370E-05,4.5790E-05,4.3840E-05,2.0360E-05,1.1450E-05,7.3280E-06,5.0880E-06,3.7390E-06,2.8620E-06,2.2610E-06,1.8320E-06,1.5140E-06,1.2720E-06,1.0840E-06,9.3480E-07,8.1430E-07,7.1570E-07,5.6540E-07,4.5810E-07,3.7850E-07,3.1810E-07,2.7100E-07,2.3370E-07,2.0360E-07,1.1450E-07,7.3280E-08,5.0880E-08,2.8620E-08,1.8320E-08,8.1430E-09,4.5790E-09,2.0360E-09,1.1450E-09,7.3280E-10,5.0880E-10,2.8620E-10,1.8320E-10,8.1430E-11,4.5790E-11,2.0360E-11,1.1450E-11,7.3280E-12,5.0880E-12,2.8620E-12,1.8320E-12,8.1430E-13,4.5790E-13,2.0360E-13,1.1450E-13,7.3280E-14,5.0880E-14,2.8620E-14,1.8320E-14};
	final static double[] Incoh= {1.1130E-02,2.0800E-02,3.0250E-02,3.2860E-02,3.2860E-02,4.6370E-02,5.8850E-02,6.8790E-02,7.7190E-02,9.1340E-02,1.0300E-01,1.2330E-01,1.3460E-01,1.4460E-01,1.4800E-01,1.4850E-01,1.4750E-01,1.4360E-01,1.3870E-01,1.2700E-01,1.1720E-01,1.0250E-01,9.2020E-02,8.4150E-02,7.7890E-02,6.8480E-02,6.1590E-02,6.0950E-02,5.5080E-02,5.0080E-02,4.2740E-02,4.2210E-02,3.3640E-02,2.8060E-02,2.4230E-02,2.1410E-02,1.9250E-02,1.7520E-02,1.6100E-02,1.4920E-02,1.3920E-02,1.3050E-02,1.2290E-02,1.1630E-02,1.1040E-02,1.0510E-02,9.6110E-03,8.8620E-03,8.2320E-03,7.6920E-03,7.2230E-03,6.8150E-03,6.4510E-03,5.1270E-03,4.2790E-03,3.6880E-03,2.9090E-03,2.4150E-03,1.7190E-03,1.3480E-03,9.5520E-04,7.4820E-04,6.1930E-04,5.3020E-04,4.1410E-04,3.4060E-04,2.3800E-04,1.8420E-04,1.2800E-04,9.8850E-05,8.0800E-05,6.8540E-05,5.2790E-05,4.3100E-05,2.9790E-05,2.2900E-05,1.5800E-05,1.2130E-05,9.8750E-06,8.3470E-06,6.4010E-06,5.2070E-06};
	final static double[] PE= {1.9100E+03,6.5230E+02,2.9960E+02,2.4730E+02,2.4710E+03,1.1160E+03,5.2260E+02,2.8480E+02,1.7150E+02,7.5670E+01,3.9600E+01,1.1880E+01,4.9700E+00,1.4210E+00,5.7710E-01,2.8520E-01,1.5970E-01,6.3690E-02,3.1170E-02,8.5330E-03,3.4410E-03,9.9410E-04,4.3090E-04,2.3390E-04,1.4630E-04,7.4140E-05,4.6080E-05,4.3490E-05,2.9480E-05,2.1330E-05,1.3290E-05,1.2850E-05,7.3280E-06,4.9890E-06,3.7600E-06,3.0120E-06,2.5080E-06,2.1460E-06,1.8760E-06,1.6650E-06,1.4970E-06,1.3590E-06,1.2450E-06,1.1480E-06,1.0650E-06,9.9270E-07,8.7470E-07,7.8160E-07,7.0650E-07,6.4430E-07,5.9240E-07,5.4810E-07,5.1000E-07,3.7840E-07,3.0080E-07,2.4940E-07,1.8610E-07,1.4840E-07,9.8480E-08,7.3690E-08,4.9020E-08,3.6730E-08,2.9360E-08,2.4460E-08,1.8330E-08,1.4660E-08,9.7680E-09,7.3240E-09,4.8820E-09,3.6610E-09,2.9280E-09,2.4400E-09,1.8300E-09,1.4640E-09,9.7600E-10,7.3200E-10,4.8800E-10,3.6590E-10,2.9280E-10,2.4400E-10,1.8300E-10,1.4640E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,3.7000E-05,2.0010E-04,7.8630E-04,8.4730E-04,2.2300E-03,3.6010E-03,4.8180E-03,5.9090E-03,6.8770E-03,7.7520E-03,8.5430E-03,9.2610E-03,9.9120E-03,1.0510E-02,1.1060E-02,1.1580E-02,1.2060E-02,1.2510E-02,1.3340E-02,1.4080E-02,1.4750E-02,1.5360E-02,1.5920E-02,1.6430E-02,1.6900E-02,1.8870E-02,2.0340E-02,2.1480E-02,2.3200E-02,2.4420E-02,2.6400E-02,2.7610E-02,2.9050E-02,2.9900E-02,3.0450E-02,3.0860E-02,3.1400E-02,3.1750E-02,3.2270E-02,3.2550E-02,3.2860E-02,3.3010E-02,3.3130E-02,3.3190E-02,3.3290E-02,3.3340E-02,3.3440E-02,3.3480E-02,3.3520E-02,3.3560E-02,3.3580E-02,3.3580E-02,3.3600E-02,3.3600E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1770E-05,4.8040E-05,9.5740E-05,1.4700E-04,1.9810E-04,2.4790E-04,2.9550E-04,3.4080E-04,3.8380E-04,4.2440E-04,4.6290E-04,4.9950E-04,5.3430E-04,5.6730E-04,6.2880E-04,6.8500E-04,7.3670E-04,7.8430E-04,8.2860E-04,8.6990E-04,9.0840E-04,1.0690E-03,1.1940E-03,1.2940E-03,1.4470E-03,1.5610E-03,1.7540E-03,1.8790E-03,2.0360E-03,2.1330E-03,2.1990E-03,2.2500E-03,2.3200E-03,2.3660E-03,2.4380E-03,2.4770E-03,2.5220E-03,2.5490E-03,2.5640E-03,2.5760E-03,2.5920E-03,2.6010E-03,2.6150E-03,2.6230E-03,2.6290E-03,2.6340E-03,2.6360E-03,2.6380E-03,2.6400E-03,2.6420E-03};
	final static double[] TotAttn= {1.9130E+03,6.5470E+02,3.0180E+02,2.4940E+02,2.4730E+03,1.1180E+03,5.2410E+02,2.8610E+02,1.7260E+02,7.6600E+01,4.0360E+01,1.2390E+01,5.3540E+00,1.7000E+00,8.0950E-01,4.9180E-01,3.4940E-01,2.3240E-01,1.8650E-01,1.4320E-01,1.2500E-01,1.0550E-01,9.3590E-02,8.5110E-02,7.8540E-02,6.8840E-02,6.1820E-02,6.1170E-02,5.5260E-02,5.0390E-02,4.3580E-02,4.3110E-02,3.5910E-02,3.1720E-02,2.9150E-02,2.7470E-02,2.6330E-02,2.5520E-02,2.4950E-02,2.4520E-02,2.4210E-02,2.3990E-02,2.3820E-02,2.3710E-02,2.3640E-02,2.3600E-02,2.3580E-02,2.3630E-02,2.3720E-02,2.3830E-02,2.3970E-02,2.4110E-02,2.4260E-02,2.5070E-02,2.5810E-02,2.6470E-02,2.7550E-02,2.8400E-02,2.9880E-02,3.0840E-02,3.2040E-02,3.2780E-02,3.3270E-02,3.3640E-02,3.4130E-02,3.4460E-02,3.4950E-02,3.5210E-02,3.5510E-02,3.5660E-02,3.5780E-02,3.5830E-02,3.5930E-02,3.5990E-02,3.6090E-02,3.6130E-02,3.6160E-02,3.6200E-02,3.6220E-02,3.6220E-02,3.6240E-02,3.6240E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
