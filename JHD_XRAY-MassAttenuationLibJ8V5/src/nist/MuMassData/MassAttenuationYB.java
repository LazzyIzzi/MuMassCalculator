package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationYB {

	final static double[] MeV= {1.00000E-03,1.50000E-03,1.52800E-03,1.52801E-03,1.55200E-03,1.57600E-03,1.57601E-03,1.75300E-03,1.95000E-03,
			1.95001E-03,2.00000E-03,2.17300E-03,2.17301E-03,2.28300E-03,2.39800E-03,2.39801E-03,3.00000E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,8.94400E-03,8.94410E-03,9.44700E-03,9.97800E-03,9.97810E-03,1.00000E-02,1.04900E-02,1.04901E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,6.13300E-02,6.13310E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {1.0850E+01,1.0390E+01,1.0370E+01,1.0370E+01,1.0340E+01,1.0320E+01,1.0320E+01,1.0150E+01,9.9600E+00,9.9600E+00,9.9120E+00,9.7340E+00,9.7340E+00,9.6220E+00,9.5080E+00,9.5080E+00,8.9270E+00,7.9630E+00,7.0860E+00,6.3100E+00,5.0600E+00,4.5870E+00,4.5870E+00,4.3430E+00,4.1340E+00,4.1340E+00,4.1280E+00,3.9400E+00,3.9400E+00,2.6590E+00,1.8810E+00,1.1110E+00,7.2810E-01,5.1470E-01,3.8600E-01,3.7270E-01,3.7270E-01,2.4220E-01,1.6580E-01,8.0910E-02,4.8170E-02,2.2810E-02,1.3240E-02,8.6270E-03,6.0660E-03,3.4620E-03,2.2350E-03,2.1410E-03,1.4390E-03,1.0030E-03,5.6660E-04,5.4260E-04,2.5260E-04,1.4230E-04,9.1110E-05,6.3270E-05,4.6500E-05,3.5600E-05,2.8130E-05,2.2790E-05,1.8830E-05,1.5830E-05,1.3490E-05,1.1630E-05,1.0130E-05,8.9060E-06,7.0370E-06,5.7010E-06,4.7090E-06,3.9570E-06,3.3720E-06,2.9080E-06,2.5330E-06,1.4250E-06,9.1180E-07,6.3340E-07,3.5640E-07,2.2800E-07,1.0130E-07,5.7010E-08,2.5330E-08,1.4250E-08,9.1180E-09,6.3300E-09,3.5600E-09,2.2800E-09,1.0130E-09,5.7010E-10,2.5330E-10,1.4250E-10,9.1180E-11,6.3300E-11,3.5600E-11,2.2800E-11,1.0130E-11,5.7010E-12,2.5330E-12,1.4250E-12,9.1180E-13,6.3300E-13,3.5600E-13,2.2800E-13};
	final static double[] Incoh= {4.7540E-03,7.8970E-03,8.0710E-03,8.0710E-03,8.2210E-03,8.3730E-03,8.3730E-03,9.4690E-03,1.0690E-02,1.0690E-02,1.1000E-02,1.2080E-02,1.2080E-02,1.2760E-02,1.3480E-02,1.3480E-02,1.7190E-02,2.3040E-02,2.8450E-02,3.3390E-02,4.1970E-02,4.5520E-02,4.5520E-02,4.7080E-02,4.9140E-02,4.9140E-02,4.9240E-02,5.0850E-02,5.0850E-02,6.3720E-02,7.4580E-02,8.8640E-02,9.6230E-02,1.0040E-01,1.0260E-01,1.0280E-01,1.0280E-01,1.0400E-01,1.0330E-01,9.8350E-02,9.2640E-02,8.2720E-02,7.5100E-02,6.9120E-02,6.4240E-02,5.6730E-02,5.1120E-02,5.0600E-02,4.5800E-02,4.1690E-02,3.5640E-02,3.5180E-02,2.8060E-02,2.3410E-02,2.0220E-02,1.7880E-02,1.6070E-02,1.4630E-02,1.3450E-02,1.2460E-02,1.1620E-02,1.0900E-02,1.0270E-02,9.7130E-03,9.2230E-03,8.7840E-03,8.0290E-03,7.4020E-03,6.8770E-03,6.4240E-03,6.0350E-03,5.6900E-03,5.3910E-03,4.2840E-03,3.5740E-03,3.0800E-03,2.4290E-03,2.0160E-03,1.4360E-03,1.1260E-03,7.9800E-04,6.2500E-04,5.1720E-04,4.4300E-04,3.4590E-04,2.8460E-04,1.9880E-04,1.5380E-04,1.0690E-04,8.2550E-05,6.7520E-05,5.7250E-05,4.4090E-05,3.6020E-05,2.4880E-05,1.9130E-05,1.3190E-05,1.0130E-05,8.2480E-06,6.9710E-06,5.3460E-06,4.3500E-06};
	final static double[] PE= {3.0070E+03,1.3400E+03,1.2900E+03,1.9370E+03,2.7450E+03,3.8940E+03,4.5280E+03,3.9720E+03,3.4870E+03,4.0440E+03,3.7860E+03,3.1190E+03,3.3140E+03,2.9600E+03,2.6440E+03,2.7600E+03,1.6320E+03,8.1120E+02,4.6460E+02,2.9240E+02,1.3930E+02,1.0420E+02,2.7780E+02,2.4070E+02,2.0870E+02,2.9380E+02,2.9020E+02,2.5370E+02,2.9330E+02,1.1660E+02,5.4330E+01,1.8120E+01,8.2170E+00,4.4230E+00,2.6590E+00,2.5000E+00,1.3180E+01,6.5640E+00,3.6120E+00,1.1990E+00,5.4530E-01,1.8260E-01,8.6520E-02,4.9700E-02,3.2220E-02,1.6910E-02,1.0610E-02,1.0160E-02,6.8490E-03,4.8860E-03,2.9610E-03,2.8550E-03,1.5560E-03,1.0230E-03,7.5210E-04,5.9090E-04,4.8480E-04,4.1030E-04,3.5500E-04,3.1270E-04,2.7920E-04,2.5210E-04,2.2970E-04,2.1090E-04,1.9490E-04,1.8110E-04,1.5870E-04,1.4110E-04,1.2700E-04,1.1550E-04,1.0590E-04,9.7720E-05,9.0730E-05,6.6790E-05,5.2830E-05,4.3710E-05,3.2460E-05,2.5820E-05,1.7080E-05,1.2760E-05,8.4740E-06,6.3440E-06,5.0710E-06,4.2210E-06,3.1620E-06,2.5290E-06,1.6840E-06,1.2630E-06,8.4150E-07,6.3100E-07,5.0460E-07,4.2080E-07,3.1540E-07,2.5230E-07,1.6820E-07,1.2620E-07,8.4080E-08,6.3060E-08,5.0460E-08,4.2040E-08,3.1530E-08,2.5230E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {};
	final static double[] TotAttn= {3.0170E+03,1.3500E+03,1.3000E+03,1.9480E+03,2.7560E+03,3.9050E+03,4.5380E+03,3.9820E+03,3.4970E+03,4.0540E+03,3.7960E+03,3.1280E+03,3.3240E+03,2.9690E+03,2.6530E+03,2.7690E+03,1.6400E+03,8.1920E+02,4.7170E+02,2.9880E+02,1.4440E+02,1.0880E+02,2.8240E+02,2.4510E+02,2.1290E+02,2.9800E+02,2.9440E+02,2.5770E+02,2.9730E+02,1.1930E+02,5.6280E+01,1.9320E+01,9.0410E+00,5.0380E+00,3.1470E+00,2.9750E+00,1.3650E+01,6.9100E+00,3.8820E+00,1.3780E+00,6.8620E-01,2.8820E-01,1.7490E-01,1.2740E-01,1.0250E-01,7.7100E-02,6.3970E-02,6.2900E-02,5.4380E-02,4.8950E-02,4.3470E-02,4.3160E-02,3.9890E-02,3.9440E-02,4.0020E-02,4.1010E-02,4.2200E-02,4.3470E-02,4.4780E-02,4.6090E-02,4.7380E-02,4.8650E-02,4.9870E-02,5.1060E-02,5.2180E-02,5.3250E-02,5.5200E-02,5.7000E-02,5.8690E-02,6.0220E-02,6.1690E-02,6.3010E-02,6.4260E-02,6.9520E-02,7.3510E-02,7.6700E-02,8.1440E-02,8.4850E-02,9.0310E-02,9.3590E-02,9.7420E-02,9.9630E-02,1.0110E-01,1.0220E-01,1.0350E-01,1.0440E-01,1.0570E-01,1.0650E-01,1.0730E-01,1.0770E-01,1.0790E-01,1.0810E-01,1.0830E-01,1.0850E-01,1.0870E-01,1.0880E-01,1.0900E-01,1.0900E-01,1.0910E-01,1.0910E-01,1.0910E-01,1.0910E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
