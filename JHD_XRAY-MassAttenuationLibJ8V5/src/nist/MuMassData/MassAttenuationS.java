package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationS {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.47200E-03,2.47201E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {2.9470E+00,2.6950E+00,2.4260E+00,2.1820E+00,2.1820E+00,1.9490E+00,1.6000E+00,1.3530E+00,1.1720E+00,9.1090E-01,7.2290E-01,4.3010E-01,2.8210E-01,1.5120E-01,9.5440E-02,6.5790E-02,4.7970E-02,2.8600E-02,1.8950E-02,8.8230E-03,5.0710E-03,2.2950E-03,1.3000E-03,8.3520E-04,5.8110E-04,3.2750E-04,2.0980E-04,2.0100E-04,1.3430E-04,9.3320E-05,5.2510E-05,5.0280E-05,2.3340E-05,1.3130E-05,8.4040E-06,5.8370E-06,4.2880E-06,3.2830E-06,2.5940E-06,2.1020E-06,1.7360E-06,1.4590E-06,1.2430E-06,1.0720E-06,9.3380E-07,8.2070E-07,6.4850E-07,5.2530E-07,4.3420E-07,3.6470E-07,3.1080E-07,2.6800E-07,2.3340E-07,1.3130E-07,8.4040E-08,5.8370E-08,3.2830E-08,2.1020E-08,9.3380E-09,5.2530E-09,2.3340E-09,1.3130E-09,8.4040E-10,5.8350E-10,3.2830E-10,2.1020E-10,9.3380E-11,5.2530E-11,2.3340E-11,1.3130E-11,8.4040E-12,5.8350E-12,3.2830E-12,2.1020E-12,9.3380E-13,5.2530E-13,2.3340E-13,1.3130E-13,8.4040E-14,5.8350E-14,3.2830E-14,2.1020E-14};
	final static double[] Incoh= {1.0110E-02,1.9510E-02,2.9170E-02,3.7710E-02,3.7710E-02,4.6370E-02,6.0020E-02,7.0730E-02,7.9460E-02,9.3580E-02,1.0500E-01,1.2540E-01,1.3720E-01,1.4790E-01,1.5150E-01,1.5210E-01,1.5120E-01,1.4740E-01,1.4250E-01,1.3060E-01,1.2060E-01,1.0550E-01,9.4780E-02,8.6670E-02,8.0250E-02,7.0560E-02,6.3460E-02,6.2780E-02,5.6750E-02,5.1590E-02,4.4040E-02,4.3500E-02,3.4650E-02,2.8900E-02,2.4960E-02,2.2070E-02,1.9830E-02,1.8050E-02,1.6590E-02,1.5370E-02,1.4340E-02,1.3450E-02,1.2670E-02,1.1980E-02,1.1380E-02,1.0830E-02,9.9030E-03,9.1310E-03,8.4810E-03,7.9250E-03,7.4430E-03,7.0200E-03,6.6480E-03,5.2830E-03,4.4100E-03,3.7990E-03,2.9950E-03,2.4870E-03,1.7710E-03,1.3890E-03,9.8430E-04,7.7070E-04,6.3820E-04,5.4630E-04,4.2670E-04,3.5100E-04,2.4510E-04,1.8970E-04,1.3190E-04,1.0180E-04,8.3250E-05,7.0600E-05,5.4390E-05,4.4420E-05,3.0690E-05,2.3590E-05,1.6270E-05,1.2490E-05,1.0170E-05,8.6000E-06,6.5940E-06,5.3660E-06};
	final static double[] PE= {2.4260E+03,8.3140E+02,3.8270E+02,2.1470E+02,2.0680E+03,1.3370E+03,6.3210E+02,3.4730E+02,2.1030E+02,9.3640E+01,4.9300E+01,1.4950E+01,6.2900E+00,1.8140E+00,7.4030E-01,3.6700E-01,2.0600E-01,8.2560E-02,4.0510E-02,1.1140E-02,4.5070E-03,1.3060E-03,5.6720E-04,3.0820E-04,1.9290E-04,9.7770E-05,6.0770E-05,5.7410E-05,3.8890E-05,2.8150E-05,1.7510E-05,1.6930E-05,9.6400E-06,6.5540E-06,4.9390E-06,3.9510E-06,3.2900E-06,2.8150E-06,2.4600E-06,2.1820E-06,1.9630E-06,1.7810E-06,1.6310E-06,1.5030E-06,1.3950E-06,1.3010E-06,1.1460E-06,1.0240E-06,9.2490E-07,8.4380E-07,7.7540E-07,7.1760E-07,6.6760E-07,4.9520E-07,3.9350E-07,3.2640E-07,2.4340E-07,1.9420E-07,1.2880E-07,9.6400E-08,6.4120E-08,4.8040E-08,3.8410E-08,3.1980E-08,2.3980E-08,1.9170E-08,1.2780E-08,9.5800E-09,6.3850E-09,4.7890E-09,3.8310E-09,3.1930E-09,2.3950E-09,1.9160E-09,1.2770E-09,9.5740E-10,6.3830E-10,4.7870E-10,3.8290E-10,3.1910E-10,2.3930E-10,1.9160E-10};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,4.1090E-05,2.2100E-04,8.6650E-04,9.3400E-04,2.4550E-03,3.9590E-03,5.2940E-03,6.4910E-03,7.5550E-03,8.5130E-03,9.3810E-03,1.0170E-02,1.0880E-02,1.1540E-02,1.2150E-02,1.2710E-02,1.3240E-02,1.3730E-02,1.4640E-02,1.5450E-02,1.6180E-02,1.6850E-02,1.7460E-02,1.8020E-02,1.8540E-02,2.0700E-02,2.2290E-02,2.3550E-02,2.5410E-02,2.6740E-02,2.8920E-02,3.0240E-02,3.1810E-02,3.2730E-02,3.3340E-02,3.3790E-02,3.4370E-02,3.4740E-02,3.5310E-02,3.5630E-02,3.5950E-02,3.6130E-02,3.6250E-02,3.6320E-02,3.6430E-02,3.6490E-02,3.6580E-02,3.6620E-02,3.6680E-02,3.6720E-02,3.6730E-02,3.6730E-02,3.6750E-02,3.6750E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.2120E-05,4.9510E-05,9.8630E-05,1.5150E-04,2.0410E-04,2.5540E-04,3.0440E-04,3.5120E-04,3.9550E-04,4.3720E-04,4.7680E-04,5.1460E-04,5.5030E-04,5.8430E-04,6.4750E-04,7.0540E-04,7.5850E-04,8.0770E-04,8.5320E-04,8.9550E-04,9.3510E-04,1.1010E-03,1.2280E-03,1.3310E-03,1.4880E-03,1.6050E-03,1.8030E-03,1.9310E-03,2.0900E-03,2.1900E-03,2.2590E-03,2.3100E-03,2.3810E-03,2.4280E-03,2.5000E-03,2.5410E-03,2.5860E-03,2.6120E-03,2.6270E-03,2.6390E-03,2.6540E-03,2.6650E-03,2.6780E-03,2.6860E-03,2.6930E-03,2.6970E-03,2.7010E-03,2.7030E-03,2.7040E-03,2.7060E-03};
	final static double[] TotAttn= {2.4290E+03,8.3410E+02,3.8520E+02,2.1690E+02,2.0700E+03,1.3390E+03,6.3380E+02,3.4870E+02,2.1160E+02,9.4640E+01,5.0130E+01,1.5500E+01,6.7090E+00,2.1130E+00,9.8720E-01,5.8490E-01,4.0520E-01,2.5860E-01,2.0200E-01,1.5060E-01,1.3020E-01,1.0910E-01,9.6650E-02,8.7820E-02,8.1020E-02,7.0980E-02,6.3730E-02,6.3040E-02,5.6970E-02,5.1930E-02,4.4980E-02,4.4500E-02,3.7150E-02,3.2930E-02,3.0370E-02,2.8720E-02,2.7600E-02,2.6820E-02,2.6280E-02,2.5900E-02,2.5620E-02,2.5420E-02,2.5290E-02,2.5210E-02,2.5170E-02,2.5150E-02,2.5190E-02,2.5290E-02,2.5420E-02,2.5580E-02,2.5760E-02,2.5940E-02,2.6130E-02,2.7080E-02,2.7930E-02,2.8680E-02,2.9890E-02,3.0830E-02,3.2500E-02,3.3560E-02,3.4890E-02,3.5690E-02,3.6230E-02,3.6640E-02,3.7180E-02,3.7520E-02,3.8050E-02,3.8360E-02,3.8660E-02,3.8850E-02,3.8960E-02,3.9030E-02,3.9140E-02,3.9200E-02,3.9290E-02,3.9330E-02,3.9390E-02,3.9430E-02,3.9450E-02,3.9450E-02,3.9460E-02,3.9460E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
