package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationGE {

	final static double[] MeV= {1.00000E-03,1.10300E-03,1.21700E-03,1.21701E-03,1.23200E-03,1.24800E-03,1.24801E-03,1.32800E-03,1.41400E-03,
			1.41401E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,8.00000E-03,1.00000E-02,1.11000E-02,
			1.11001E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,1.50000E-01,
			2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,1.50000E+00,
			2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,1.00000E+01,
			1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,2.40000E+01,
			2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,2.00000E+02,
			3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,4.00000E+03,
			5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,6.00000E+04,
			8.00000E+04,1.00000E+05};
	final static double[] Coh= {5.3390E+00,5.2770E+00,5.2090E+00,5.2090E+00,5.2000E+00,5.1900E+00,5.1900E+00,5.1430E+00,5.0920E+00,5.0920E+00,5.0360E+00,4.7130E+00,4.1040E+00,3.5770E+00,3.1230E+00,2.7270E+00,2.0920E+00,1.6360E+00,1.4460E+00,1.4460E+00,9.8780E-01,6.7670E-01,3.8040E-01,2.4110E-01,1.6640E-01,1.2230E-01,7.4680E-02,5.0450E-02,2.4080E-02,1.4000E-02,6.4330E-03,3.6750E-03,2.3720E-03,1.6550E-03,9.3640E-04,6.0060E-04,5.7520E-04,3.8510E-04,2.6760E-04,1.5070E-04,1.4430E-04,6.7010E-05,3.7700E-05,2.4130E-05,1.6760E-05,1.2320E-05,9.4300E-06,7.4500E-06,6.0350E-06,4.9870E-06,4.1910E-06,3.5700E-06,3.0790E-06,2.6820E-06,2.3570E-06,1.8630E-06,1.5090E-06,1.2470E-06,1.0480E-06,8.9240E-07,7.6970E-07,6.7060E-07,3.7720E-07,2.4130E-07,1.6760E-07,9.4300E-08,6.0350E-08,2.6820E-08,1.5090E-08,6.7050E-09,3.7710E-09,2.4130E-09,1.6760E-09,9.4300E-10,6.0350E-10,2.6820E-10,1.5090E-10,6.7050E-11,3.7710E-11,2.4130E-11,1.6760E-11,9.4300E-12,6.0350E-12,2.6820E-12,1.5090E-12,6.7050E-13,3.7710E-13,2.4130E-13,1.6760E-13,9.4300E-14,6.0350E-14};
	final static double[] Incoh= {6.1860E-03,7.2300E-03,8.4270E-03,8.4270E-03,8.5910E-03,8.7580E-03,8.7580E-03,9.6220E-03,1.0540E-02,1.0540E-02,1.1450E-02,1.6650E-02,2.6030E-02,3.4220E-02,4.1680E-02,4.8570E-02,6.0780E-02,7.1150E-02,7.6140E-02,7.6140E-02,9.0490E-02,1.0270E-01,1.1610E-01,1.2230E-01,1.2480E-01,1.2540E-01,1.2390E-01,1.2100E-01,1.1250E-01,1.0480E-01,9.2310E-02,8.3190E-02,7.6200E-02,7.0630E-02,6.2180E-02,5.5960E-02,5.5370E-02,5.0080E-02,4.5530E-02,3.8870E-02,3.8390E-02,3.0600E-02,2.5520E-02,2.2040E-02,1.9480E-02,1.7520E-02,1.5940E-02,1.4660E-02,1.3580E-02,1.2660E-02,1.1880E-02,1.1190E-02,1.0580E-02,1.0050E-02,9.5710E-03,8.7420E-03,8.0650E-03,7.4910E-03,7.0000E-03,6.5730E-03,6.2000E-03,5.8710E-03,4.6660E-03,3.8950E-03,3.3560E-03,2.6470E-03,2.1960E-03,1.5640E-03,1.2270E-03,8.6920E-04,6.8080E-04,5.6360E-04,4.8250E-04,3.7690E-04,3.1000E-04,2.1660E-04,1.6760E-04,1.1650E-04,8.9900E-05,7.3540E-05,6.2360E-05,4.8050E-05,3.9230E-05,2.7110E-05,2.0840E-05,1.4370E-05,1.1040E-05,8.9820E-06,7.5960E-06,5.8250E-06,4.7390E-06};
	final static double[] PE= {1.8870E+03,1.4950E+03,1.1850E+03,4.3560E+03,4.6510E+03,4.9660E+03,6.6500E+03,6.0740E+03,5.5490E+03,6.2820E+03,5.4700E+03,2.7060E+03,9.5710E+02,4.4610E+02,2.4410E+02,1.4810E+02,6.6750E+01,3.5710E+01,2.6590E+01,1.9660E+02,9.0400E+01,4.1440E+01,1.3350E+01,5.8430E+00,3.0440E+00,1.7750E+00,7.5150E-01,3.8350E-01,1.1250E-01,4.7320E-02,1.4370E-02,6.4120E-03,3.5410E-03,2.2380E-03,1.1440E-03,7.1200E-04,6.7660E-04,4.5720E-04,3.2910E-04,2.0210E-04,1.9520E-04,1.0900E-04,7.3090E-05,5.4540E-05,4.3340E-05,3.5870E-05,3.0560E-05,2.6610E-05,2.3550E-05,2.1110E-05,1.9130E-05,1.7480E-05,1.6090E-05,1.4900E-05,1.3880E-05,1.2200E-05,1.0880E-05,9.8200E-06,8.9490E-06,8.2180E-06,7.5970E-06,7.0630E-06,5.2250E-06,4.1450E-06,3.4350E-06,2.5590E-06,2.0380E-06,1.3510E-06,1.0100E-06,6.7160E-07,5.0300E-07,4.0210E-07,3.3480E-07,2.5100E-07,2.0070E-07,1.3370E-07,1.0030E-07,6.6810E-08,5.0100E-08,4.0080E-08,3.3400E-08,2.5050E-08,2.0040E-08,1.3360E-08,1.0020E-08,6.6780E-09,5.0090E-09,4.0070E-09,3.3390E-09,2.5040E-09,2.0040E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,8.8990E-05,4.4120E-04,1.6350E-03,1.7550E-03,4.4600E-03,7.0710E-03,9.3720E-03,1.1400E-02,1.3200E-02,1.4830E-02,1.6310E-02,1.7640E-02,1.8860E-02,1.9970E-02,2.1010E-02,2.1960E-02,2.2850E-02,2.3690E-02,2.5210E-02,2.6580E-02,2.7820E-02,2.8950E-02,2.9970E-02,3.0920E-02,3.1790E-02,3.5350E-02,3.7990E-02,4.0070E-02,4.3140E-02,4.5320E-02,4.8790E-02,5.0870E-02,5.3290E-02,5.4670E-02,5.5590E-02,5.6240E-02,5.7110E-02,5.7680E-02,5.8490E-02,5.8940E-02,5.9420E-02,5.9670E-02,5.9840E-02,5.9950E-02,6.0100E-02,6.0190E-02,6.0320E-02,6.0390E-02,6.0460E-02,6.0500E-02,6.0520E-02,6.0540E-02,6.0560E-02,6.0570E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0710E-05,4.3700E-05,8.7000E-05,1.3360E-04,1.8000E-04,2.2500E-04,2.6810E-04,3.0900E-04,3.4780E-04,3.8450E-04,4.1900E-04,4.5190E-04,4.8310E-04,5.1270E-04,5.6780E-04,6.1790E-04,6.6380E-04,7.0620E-04,7.4540E-04,7.8170E-04,8.1560E-04,9.5630E-04,1.0640E-03,1.1500E-03,1.2790E-03,1.3730E-03,1.5310E-03,1.6310E-03,1.7520E-03,1.8250E-03,1.8760E-03,1.9130E-03,1.9640E-03,1.9980E-03,2.0490E-03,2.0780E-03,2.1090E-03,2.1270E-03,2.1390E-03,2.1470E-03,2.1570E-03,2.1640E-03,2.1730E-03,2.1790E-03,2.1840E-03,2.1870E-03,2.1890E-03,2.1900E-03,2.1910E-03,2.1920E-03};
	final static double[] TotAttn= {1.8920E+03,1.5010E+03,1.1900E+03,4.3610E+03,4.6560E+03,4.9720E+03,6.6550E+03,6.0790E+03,5.5540E+03,6.2870E+03,5.4750E+03,2.7110E+03,9.6120E+02,4.4970E+02,2.4730E+02,1.5090E+02,6.8900E+01,3.7420E+01,2.8110E+01,1.9820E+02,9.1480E+01,4.2220E+01,1.3850E+01,6.2060E+00,3.3350E+00,2.0230E+00,9.5010E-01,5.5500E-01,2.4910E-01,1.6610E-01,1.1310E-01,9.3270E-02,8.2120E-02,7.4520E-02,6.4260E-02,5.7270E-02,5.6620E-02,5.1010E-02,4.6570E-02,4.0860E-02,4.0490E-02,3.5240E-02,3.2750E-02,3.1580E-02,3.1070E-02,3.0950E-02,3.1040E-02,3.1260E-02,3.1560E-02,3.1900E-02,3.2260E-02,3.2640E-02,3.3020E-02,3.3400E-02,3.3790E-02,3.4540E-02,3.5280E-02,3.5980E-02,3.6660E-02,3.7300E-02,3.7910E-02,3.8480E-02,4.0980E-02,4.2960E-02,4.4580E-02,4.7060E-02,4.8890E-02,5.1890E-02,5.3730E-02,5.5910E-02,5.7180E-02,5.8030E-02,5.8640E-02,5.9450E-02,5.9980E-02,6.0750E-02,6.1180E-02,6.1640E-02,6.1890E-02,6.2050E-02,6.2160E-02,6.2300E-02,6.2390E-02,6.2520E-02,6.2590E-02,6.2660E-02,6.2700E-02,6.2720E-02,6.2730E-02,6.2760E-02,6.2770E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
