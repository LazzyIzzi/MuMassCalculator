package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationI {

	final static double[] MeV= {1.00000E-03,1.03500E-03,1.07200E-03,1.07201E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,4.55700E-03,
			4.55710E-03,4.70200E-03,4.85200E-03,4.85210E-03,5.00000E-03,5.18800E-03,5.18810E-03,6.00000E-03,8.00000E-03,1.00000E-02,
			1.50000E-02,2.00000E-02,3.00000E-02,3.31700E-02,3.31710E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {8.4180E+00,8.3880E+00,8.3570E+00,8.3570E+00,7.9580E+00,7.4460E+00,6.4630E+00,5.6280E+00,5.2290E+00,5.2290E+00,5.1330E+00,5.0350E+00,5.0350E+00,4.9400E+00,4.8210E+00,4.8210E+00,4.3560E+00,3.4460E+00,2.7980E+00,1.8430E+00,1.3120E+00,7.4550E-01,6.4300E-01,6.4300E-01,4.8590E-01,3.4520E-01,2.5770E-01,1.5840E-01,1.0730E-01,5.2200E-02,3.0870E-02,1.4400E-02,8.2950E-03,5.3810E-03,3.7710E-03,2.1430E-03,1.3790E-03,1.3210E-03,8.8600E-04,6.1640E-04,3.4760E-04,3.3290E-04,1.5470E-04,8.7130E-05,5.5760E-05,3.8730E-05,2.8460E-05,2.1790E-05,1.7220E-05,1.3950E-05,1.1530E-05,9.6850E-06,8.2520E-06,7.1180E-06,6.1980E-06,5.4480E-06,4.3050E-06,3.4870E-06,2.8820E-06,2.4220E-06,2.0630E-06,1.7790E-06,1.5500E-06,8.7170E-07,5.5810E-07,3.8750E-07,2.1800E-07,1.3950E-07,6.1980E-08,3.4870E-08,1.5500E-08,8.7170E-09,5.5810E-09,3.8740E-09,2.1790E-09,1.3950E-09,6.1980E-10,3.4870E-10,1.5500E-10,8.7170E-11,5.5810E-11,3.8740E-11,2.1790E-11,1.3950E-11,6.1980E-12,3.4870E-12,1.5500E-12,8.7170E-13,5.5810E-13,3.8740E-13,2.1790E-13,1.3950E-13};
	final static double[] Incoh= {4.6880E-03,4.9720E-03,5.2720E-03,5.2720E-03,8.9690E-03,1.3420E-02,2.1900E-02,2.9320E-02,3.2960E-02,3.2960E-02,3.3870E-02,3.4790E-02,3.4790E-02,3.5680E-02,3.6790E-02,3.6790E-02,4.1290E-02,5.1060E-02,5.9550E-02,7.5780E-02,8.6460E-02,9.9080E-02,1.0160E-01,1.0160E-01,1.0570E-01,1.0930E-01,1.1100E-01,1.1150E-01,1.1000E-01,1.0360E-01,9.7090E-02,8.6270E-02,7.8110E-02,7.1750E-02,6.6630E-02,5.8750E-02,5.2910E-02,5.2340E-02,4.7370E-02,4.3090E-02,3.6810E-02,3.6350E-02,2.8980E-02,2.4180E-02,2.0880E-02,1.8460E-02,1.6590E-02,1.5100E-02,1.3890E-02,1.2860E-02,1.2000E-02,1.1250E-02,1.0600E-02,1.0030E-02,9.5240E-03,9.0680E-03,8.2850E-03,7.6400E-03,7.0990E-03,6.6340E-03,6.2310E-03,5.8750E-03,5.5620E-03,4.4210E-03,3.6910E-03,3.1800E-03,2.5080E-03,2.0820E-03,1.4820E-03,1.1620E-03,8.2380E-04,6.4540E-04,5.3390E-04,4.5730E-04,3.5710E-04,2.9380E-04,2.0520E-04,1.5880E-04,1.1040E-04,8.5230E-05,6.9710E-05,5.9080E-05,4.5530E-05,3.7180E-05,2.5690E-05,1.9750E-05,1.3620E-05,1.0460E-05,8.5180E-06,7.1990E-06,5.5190E-06,4.4910E-06};
	final static double[] PE= {9.0870E+03,8.4500E+03,7.8580E+03,8.1950E+03,3.9110E+03,1.9890E+03,7.3550E+02,3.5510E+02,2.5390E+02,7.4980E+02,7.0270E+02,6.5870E+02,8.8830E+02,8.3800E+02,7.6160E+02,8.7880E+02,6.1310E+02,2.8860E+02,1.5970E+02,5.3200E+01,2.4040E+01,7.7160E+00,5.8080E+00,3.5080E+01,2.1510E+01,1.1870E+01,7.2080E+00,3.2400E+00,1.7250E+00,5.4190E-01,2.3830E-01,7.6500E-02,3.5250E-02,1.9880E-02,1.2740E-02,6.5960E-03,4.1200E-03,3.9220E-03,2.6450E-03,1.8930E-03,1.1520E-03,1.1110E-03,6.1120E-04,4.0460E-04,2.9920E-04,2.3610E-04,1.9440E-04,1.6500E-04,1.4310E-04,1.2620E-04,1.1290E-04,1.0210E-04,9.3100E-05,8.5560E-05,7.9150E-05,7.3650E-05,6.4590E-05,5.7510E-05,5.1820E-05,4.7170E-05,4.3270E-05,3.9960E-05,3.7120E-05,2.7380E-05,2.1690E-05,1.7950E-05,1.3350E-05,1.0620E-05,7.0330E-06,5.2580E-06,3.4930E-06,2.6150E-06,2.0900E-06,1.7400E-06,1.3040E-06,1.0430E-06,6.9470E-07,5.2060E-07,3.4710E-07,2.6030E-07,2.0820E-07,1.7350E-07,1.3010E-07,1.0410E-07,6.9380E-08,5.2010E-08,3.4680E-08,2.6010E-08,2.0810E-08,1.7340E-08,1.3010E-08,1.0410E-08};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.8830E-04,8.7130E-04,2.9390E-03,3.1390E-03,7.4080E-03,1.1360E-02,1.4760E-02,1.7690E-02,2.0300E-02,2.2650E-02,2.4780E-02,2.6730E-02,2.8520E-02,3.0190E-02,3.1740E-02,3.3160E-02,3.4480E-02,3.5710E-02,3.7940E-02,3.9950E-02,4.1770E-02,4.3420E-02,4.4930E-02,4.6310E-02,4.7600E-02,5.2720E-02,5.6570E-02,5.9550E-02,6.3920E-02,6.7050E-02,7.2040E-02,7.5020E-02,7.8490E-02,8.0480E-02,8.1760E-02,8.2710E-02,8.3950E-02,8.4750E-02,8.5940E-02,8.6600E-02,8.7270E-02,8.7650E-02,8.7880E-02,8.8030E-02,8.8260E-02,8.8410E-02,8.8600E-02,8.8690E-02,8.8790E-02,8.8830E-02,8.8880E-02,8.8880E-02,8.8930E-02,8.8930E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.0140E-05,4.1340E-05,8.2290E-05,1.2620E-04,1.7000E-04,2.1230E-04,2.5280E-04,2.9130E-04,3.2760E-04,3.6190E-04,3.9420E-04,4.2490E-04,4.5390E-04,4.8170E-04,5.3240E-04,5.7890E-04,6.2160E-04,6.6060E-04,6.9660E-04,7.2980E-04,7.6120E-04,8.8930E-04,9.8660E-04,1.0640E-03,1.1800E-03,1.2640E-03,1.4040E-03,1.4910E-03,1.5990E-03,1.6630E-03,1.7070E-03,1.7390E-03,1.7840E-03,1.8130E-03,1.8570E-03,1.8820E-03,1.9090E-03,1.9240E-03,1.9340E-03,1.9410E-03,1.9500E-03,1.9560E-03,1.9630E-03,1.9680E-03,1.9720E-03,1.9750E-03,1.9760E-03,1.9770E-03,1.9790E-03,1.9800E-03};
	final static double[] TotAttn= {9.0960E+03,8.4580E+03,7.8670E+03,8.2040E+03,3.9190E+03,1.9970E+03,7.4200E+02,3.6080E+02,2.5910E+02,7.5500E+02,7.0790E+02,6.6370E+02,8.9340E+02,8.4300E+02,7.6650E+02,8.8370E+02,6.1750E+02,2.9210E+02,1.6260E+02,5.5110E+01,2.5430E+01,8.5610E+00,6.5530E+00,3.5830E+01,2.2100E+01,1.2320E+01,7.5770E+00,3.5100E+00,1.9420E+00,6.9780E-01,3.6630E-01,1.7720E-01,1.2170E-01,9.7010E-02,8.3130E-02,6.7490E-02,5.8410E-02,5.7590E-02,5.1090E-02,4.6470E-02,4.1240E-02,4.0940E-02,3.7160E-02,3.6070E-02,3.6080E-02,3.6550E-02,3.7290E-02,3.8150E-02,3.9070E-02,4.0020E-02,4.0970E-02,4.1920E-02,4.2830E-02,4.3710E-02,4.4550E-02,4.5340E-02,4.6830E-02,4.8230E-02,4.9540E-02,5.0760E-02,5.1900E-02,5.2950E-02,5.3960E-02,5.8060E-02,6.1270E-02,6.3820E-02,6.7620E-02,7.0410E-02,7.4930E-02,7.7680E-02,8.0920E-02,8.2790E-02,8.4010E-02,8.4910E-02,8.6090E-02,8.6860E-02,8.8000E-02,8.8640E-02,8.9290E-02,8.9660E-02,8.9890E-02,9.0030E-02,9.0260E-02,9.0400E-02,9.0590E-02,9.0680E-02,9.0770E-02,9.0820E-02,9.0870E-02,9.0870E-02,9.0910E-02,9.0910E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
