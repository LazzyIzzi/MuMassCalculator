package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationCO {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,3.00000E-03,4.00000E-03,5.00000E-03,6.00000E-03,7.70900E-03,7.70910E-03,
			8.00000E-03,1.00000E-02,1.50000E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};
	final static double[] Coh= {4.6590E+00,4.3740E+00,4.0700E+00,3.4920E+00,2.9810E+00,2.5410E+00,2.1730E+00,1.6910E+00,1.6910E+00,1.6260E+00,1.2630E+00,7.7830E-01,5.3910E-01,2.9830E-01,1.8800E-01,1.3020E-01,9.5970E-02,5.8620E-02,3.9450E-02,1.8690E-02,1.0840E-02,4.9660E-03,2.8310E-03,1.8240E-03,1.2720E-03,7.1860E-04,4.6090E-04,4.4120E-04,2.9530E-04,2.0520E-04,1.1560E-04,1.1060E-04,5.1370E-05,2.8900E-05,1.8500E-05,1.2840E-05,9.4390E-06,7.2270E-06,5.7100E-06,4.6250E-06,3.8230E-06,3.2120E-06,2.7370E-06,2.3590E-06,2.0560E-06,1.8070E-06,1.4280E-06,1.1570E-06,9.5560E-07,8.0300E-07,6.8420E-07,5.8990E-07,5.1390E-07,2.8910E-07,1.8510E-07,1.2840E-07,7.2270E-08,4.6250E-08,2.0560E-08,1.1560E-08,5.1390E-09,2.8910E-09,1.8500E-09,1.2840E-09,7.2270E-10,4.6250E-10,2.0560E-10,1.1560E-10,5.1390E-11,2.8910E-11,1.8500E-11,1.2840E-11,7.2270E-12,4.6250E-12,2.0560E-12,1.1560E-12,5.1390E-13,2.8910E-13,1.8500E-13,1.2840E-13,7.2270E-14,4.6250E-14};
	final static double[] Incoh= {8.0410E-03,1.4170E-02,1.9830E-02,3.0200E-02,3.9880E-02,4.8810E-02,5.6930E-02,6.9070E-02,6.9070E-02,7.0930E-02,8.2280E-02,1.0160E-01,1.1320E-01,1.2570E-01,1.3100E-01,1.3280E-01,1.3280E-01,1.3070E-01,1.2730E-01,1.1790E-01,1.0940E-01,9.6260E-02,8.6660E-02,7.9340E-02,7.3510E-02,6.4680E-02,5.8210E-02,5.7590E-02,5.2070E-02,4.7340E-02,4.0410E-02,3.9920E-02,3.1810E-02,2.6540E-02,2.2920E-02,2.0250E-02,1.8210E-02,1.6570E-02,1.5240E-02,1.4110E-02,1.3160E-02,1.2340E-02,1.1630E-02,1.1010E-02,1.0440E-02,9.9480E-03,9.0910E-03,8.3840E-03,7.7880E-03,7.2770E-03,6.8330E-03,6.4460E-03,6.1040E-03,4.8510E-03,4.0490E-03,3.4890E-03,2.7510E-03,2.2840E-03,1.6260E-03,1.2750E-03,9.0370E-04,7.0770E-04,5.8580E-04,5.0160E-04,3.9180E-04,3.2230E-04,2.2510E-04,1.7420E-04,1.2110E-04,9.3500E-05,7.6450E-05,6.4830E-05,4.9950E-05,4.0780E-05,2.8180E-05,2.1660E-05,1.4940E-05,1.1480E-05,9.3420E-06,7.8970E-06,6.0550E-06,4.9260E-06};
	final static double[] PE= {9.7900E+03,3.6920E+03,1.7750E+03,6.0930E+02,2.8000E+02,1.5170E+02,9.1490E+01,4.5350E+01,3.5380E+02,3.2310E+02,1.8280E+02,6.1130E+01,2.7380E+01,8.5380E+00,3.6610E+00,1.8810E+00,1.0850E+00,4.5210E-01,2.2820E-01,6.5670E-02,2.7310E-02,8.1840E-03,3.6210E-03,1.9910E-03,1.2540E-03,6.3890E-04,3.9750E-04,3.7740E-04,2.5520E-04,1.8390E-04,1.1330E-04,1.0950E-04,6.1470E-05,4.1380E-05,3.0950E-05,2.4650E-05,2.0440E-05,1.7430E-05,1.5200E-05,1.3460E-05,1.2070E-05,1.0940E-05,1.0010E-05,9.2140E-06,8.5400E-06,7.9550E-06,6.9980E-06,6.2460E-06,5.6390E-06,5.1390E-06,4.7200E-06,4.3640E-06,4.0580E-06,3.0040E-06,2.3850E-06,1.9770E-06,1.4720E-06,1.1730E-06,7.7820E-07,5.8220E-07,3.8700E-07,2.8990E-07,2.3180E-07,1.9300E-07,1.4470E-07,1.1570E-07,7.7070E-08,5.7790E-08,3.8510E-08,2.8880E-08,2.3100E-08,1.9250E-08,1.4440E-08,1.1550E-08,7.7000E-09,5.7750E-09,3.8490E-09,2.8870E-09,2.3090E-09,1.9250E-09,1.4440E-09,1.1550E-09};
	final static double[] PrProdN= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,7.2860E-05,3.6920E-04,1.3990E-03,1.5050E-03,3.8710E-03,6.1750E-03,8.2100E-03,1.0020E-02,1.1630E-02,1.3080E-02,1.4390E-02,1.5570E-02,1.6660E-02,1.7640E-02,1.8550E-02,1.9410E-02,2.0190E-02,2.0940E-02,2.2310E-02,2.3520E-02,2.4630E-02,2.5630E-02,2.6550E-02,2.7390E-02,2.8160E-02,3.1320E-02,3.3680E-02,3.5540E-02,3.8300E-02,4.0270E-02,4.3440E-02,4.5340E-02,4.7570E-02,4.8860E-02,4.9700E-02,5.0320E-02,5.1120E-02,5.1640E-02,5.2410E-02,5.2820E-02,5.3270E-02,5.3510E-02,5.3670E-02,5.3770E-02,5.3910E-02,5.4010E-02,5.4120E-02,5.4190E-02,5.4250E-02,5.4290E-02,5.4310E-02,5.4330E-02,5.4350E-02,5.4360E-02};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,1.1130E-05,4.5440E-05,9.0520E-05,1.3900E-04,1.8730E-04,2.3410E-04,2.7900E-04,3.2170E-04,3.6200E-04,4.0030E-04,4.3630E-04,4.7070E-04,5.0320E-04,5.3410E-04,5.9160E-04,6.4400E-04,6.9210E-04,7.3640E-04,7.7740E-04,8.1550E-04,8.5100E-04,9.9920E-04,1.1130E-03,1.2040E-03,1.3420E-03,1.4430E-03,1.6120E-03,1.7210E-03,1.8540E-03,1.9340E-03,1.9900E-03,2.0300E-03,2.0870E-03,2.1250E-03,2.1820E-03,2.2140E-03,2.2490E-03,2.2710E-03,2.2830E-03,2.2920E-03,2.3040E-03,2.3110E-03,2.3230E-03,2.3280E-03,2.3340E-03,2.3380E-03,2.3400E-03,2.3410E-03,2.3430E-03,2.3440E-03};
	final static double[] TotAttn= {9.7950E+03,3.6960E+03,1.7790E+03,6.1290E+02,2.8300E+02,1.5430E+02,9.3720E+01,4.7110E+01,3.5550E+02,3.2480E+02,1.8420E+02,6.2010E+01,2.8030E+01,8.9620E+00,3.9800E+00,2.1440E+00,1.3140E+00,6.4140E-01,3.9500E-01,2.0230E-01,1.4760E-01,1.0940E-01,9.3120E-02,8.3150E-02,7.6040E-02,6.6040E-02,5.9060E-02,5.8410E-02,5.2700E-02,4.8100E-02,4.2040E-02,4.1650E-02,3.5810E-02,3.2830E-02,3.1270E-02,3.0450E-02,3.0060E-02,2.9910E-02,2.9920E-02,3.0020E-02,3.0200E-02,3.0400E-02,3.0620E-02,3.0890E-02,3.1150E-02,3.1430E-02,3.2000E-02,3.2560E-02,3.3110E-02,3.3650E-02,3.4160E-02,3.4650E-02,3.5120E-02,3.7170E-02,3.8840E-02,4.0230E-02,4.2390E-02,4.4000E-02,4.6680E-02,4.8340E-02,5.0330E-02,5.1500E-02,5.2280E-02,5.2850E-02,5.3600E-02,5.4090E-02,5.4820E-02,5.5210E-02,5.5640E-02,5.5880E-02,5.6030E-02,5.6130E-02,5.6270E-02,5.6360E-02,5.6470E-02,5.6540E-02,5.6600E-02,5.6640E-02,5.6660E-02,5.6680E-02,5.6700E-02,5.6710E-02};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
