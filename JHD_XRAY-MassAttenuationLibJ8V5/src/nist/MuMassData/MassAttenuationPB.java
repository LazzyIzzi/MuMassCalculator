package nist.MuMassData;
/**
 * @author John H Dunsmuir
 * @hidden
 */

import jhd.MathTools.Interpolation;


class MassAttenuationPB {

	final static double[] MeV= {1.00000E-03,1.50000E-03,2.00000E-03,2.48400E-03,2.48401E-03,2.53400E-03,2.58600E-03,2.58601E-03,3.00000E-03,
			3.06600E-03,3.06601E-03,3.30100E-03,3.55400E-03,3.55410E-03,3.69900E-03,3.85100E-03,3.85110E-03,4.00000E-03,5.00000E-03,
			6.00000E-03,8.00000E-03,1.00000E-02,1.30400E-02,1.30401E-02,1.50000E-02,1.52000E-02,1.52001E-02,1.55300E-02,1.58600E-02,
			1.58601E-02,2.00000E-02,3.00000E-02,4.00000E-02,5.00000E-02,6.00000E-02,8.00000E-02,8.80000E-02,8.80010E-02,1.00000E-01,
			1.50000E-01,2.00000E-01,3.00000E-01,4.00000E-01,5.00000E-01,6.00000E-01,8.00000E-01,1.00000E+00,1.02200E+00,1.25000E+00,
			1.50000E+00,2.00000E+00,2.04400E+00,3.00000E+00,4.00000E+00,5.00000E+00,6.00000E+00,7.00000E+00,8.00000E+00,9.00000E+00,
			1.00000E+01,1.10000E+01,1.20000E+01,1.30000E+01,1.40000E+01,1.50000E+01,1.60000E+01,1.80000E+01,2.00000E+01,2.20000E+01,
			2.40000E+01,2.60000E+01,2.80000E+01,3.00000E+01,4.00000E+01,5.00000E+01,6.00000E+01,8.00000E+01,1.00000E+02,1.50000E+02,
			2.00000E+02,3.00000E+02,4.00000E+02,5.00000E+02,6.00000E+02,8.00000E+02,1.00000E+03,1.50000E+03,2.00000E+03,3.00000E+03,
			4.00000E+03,5.00000E+03,6.00000E+03,8.00000E+03,1.00000E+04,1.50000E+04,2.00000E+04,3.00000E+04,4.00000E+04,5.00000E+04,
			6.00000E+04,8.00000E+04,1.00000E+05};

	final static double[] Coh= {1.2510E+01,1.2010E+01,1.1440E+01,1.0880E+01,1.0880E+01,1.0820E+01,1.0760E+01,1.0760E+01,1.0270E+01,1.0190E+01,1.0190E+01,9.9290E+00,9.6520E+00,9.6520E+00,9.4960E+00,9.3350E+00,9.3350E+00,9.1790E+00,8.2080E+00,7.3620E+00,6.0020E+00,4.9820E+00,3.8510E+00,3.8510E+00,3.3080E+00,3.2580E+00,3.2580E+00,3.1800E+00,3.1040E+00,3.1040E+00,2.3380E+00,1.3770E+00,9.2020E-01,6.5450E-01,4.9000E-01,3.0780E-01,2.6320E-01,2.6320E-01,2.1280E-01,1.0490E-01,6.2600E-02,2.9880E-02,1.7460E-02,1.1430E-02,8.0600E-03,4.6210E-03,2.9910E-03,2.8650E-03,1.9300E-03,1.3470E-03,7.6260E-04,7.3040E-04,3.4060E-04,1.9190E-04,1.2290E-04,8.5420E-05,6.2780E-05,4.8070E-05,3.7990E-05,3.0780E-05,2.5430E-05,2.1370E-05,1.8210E-05,1.5700E-05,1.3680E-05,1.2020E-05,9.5010E-06,7.6960E-06,6.3590E-06,5.3450E-06,4.5540E-06,3.9270E-06,3.4210E-06,1.9240E-06,1.2310E-06,8.5510E-07,4.8100E-07,3.0780E-07,1.3680E-07,7.6960E-08,3.4210E-08,1.9240E-08,1.2310E-08,8.5510E-09,4.8100E-09,3.0780E-09,1.3680E-09,7.6960E-10,3.4210E-10,1.9240E-10,1.2310E-10,8.5510E-11,4.8100E-11,3.0780E-11,1.3680E-11,7.6960E-12,3.4210E-12,1.9240E-12,1.2310E-12,8.5510E-13,4.8100E-13,3.0780E-13};
	final static double[] Incoh= {3.5870E-03,6.6010E-03,9.6200E-03,1.2400E-02,1.2400E-02,1.2680E-02,1.2970E-02,1.2970E-02,1.5250E-02,1.5600E-02,1.5600E-02,1.6840E-02,1.8130E-02,1.8130E-02,1.8870E-02,1.9630E-02,1.9630E-02,2.0370E-02,2.5160E-02,2.9700E-02,3.8070E-02,4.5400E-02,5.4350E-02,5.4350E-02,5.9200E-02,5.9640E-02,5.9640E-02,6.0370E-02,6.1120E-02,6.1120E-02,6.8970E-02,8.2280E-02,9.0190E-02,9.4780E-02,9.7340E-02,9.9230E-02,9.9280E-02,9.9280E-02,9.8940E-02,9.4840E-02,8.9660E-02,8.0360E-02,7.3100E-02,6.7340E-02,6.2630E-02,5.5370E-02,4.9930E-02,4.9440E-02,4.4760E-02,4.0750E-02,3.4820E-02,3.4410E-02,2.7440E-02,2.2900E-02,1.9780E-02,1.7490E-02,1.5720E-02,1.4310E-02,1.3150E-02,1.2190E-02,1.1370E-02,1.0660E-02,1.0040E-02,9.5040E-03,9.0220E-03,8.5910E-03,7.8530E-03,7.2430E-03,6.7250E-03,6.2870E-03,5.9030E-03,5.5690E-03,5.2720E-03,4.1880E-03,3.4960E-03,3.0140E-03,2.3760E-03,1.9720E-03,1.4050E-03,1.1010E-03,7.8070E-04,6.1120E-04,5.0600E-04,4.3330E-04,3.3830E-04,2.7840E-04,1.9440E-04,1.5050E-04,1.0460E-04,8.0770E-05,6.6030E-05,5.6010E-05,4.3130E-05,3.5230E-05,2.4340E-05,1.8720E-05,1.2910E-05,9.9080E-06,8.0680E-06,6.8210E-06,5.2320E-06,4.2550E-06};
	final static double[] PE= {5.1970E+03,2.3440E+03,1.2740E+03,7.9000E+02,1.3850E+03,1.6360E+03,1.9330E+03,2.4390E+03,1.9550E+03,1.8470E+03,2.1360E+03,1.7820E+03,1.4860E+03,1.5750E+03,1.4320E+03,1.3020E+03,1.3580E+03,1.2420E+03,7.2220E+02,4.5980E+02,2.2260E+02,1.2560E+02,6.3100E+01,1.5820E+02,1.0820E+02,1.0450E+02,1.4520E+02,1.3800E+02,1.3120E+02,1.5170E+02,8.3970E+01,2.8860E+01,1.3350E+01,7.2920E+00,4.4320E+00,2.0120E+00,1.5470E+00,7.3210E+00,5.2370E+00,1.8150E+00,8.4640E-01,2.9300E-01,1.4170E-01,8.2570E-02,5.4060E-02,2.8710E-02,1.8100E-02,1.7320E-02,1.1680E-02,8.3210E-03,5.0340E-03,4.8540E-03,2.6310E-03,1.7230E-03,1.2630E-03,9.8940E-04,8.1030E-04,6.8450E-04,5.9150E-04,5.2030E-04,4.6420E-04,4.1850E-04,3.8100E-04,3.4960E-04,3.2290E-04,2.9990E-04,2.6250E-04,2.3340E-04,2.0990E-04,1.9080E-04,1.7480E-04,1.6130E-04,1.4970E-04,1.1010E-04,8.6990E-05,7.1910E-05,5.3390E-05,4.2430E-05,2.8060E-05,2.0960E-05,1.3920E-05,1.0410E-05,8.3210E-06,6.9290E-06,5.1910E-06,4.1500E-06,2.7650E-06,2.0730E-06,1.3810E-06,1.0360E-06,8.2830E-07,6.9030E-07,5.1760E-07,4.1420E-07,2.7600E-07,2.0700E-07,1.3800E-07,1.0350E-07,8.2800E-08,6.9000E-08,5.1730E-08,4.1390E-08};
	final static double[] PrProdN= {};
	final static double[] PrProdE= {0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,0.0000E+00,9.5850E-06,3.9060E-05,7.7690E-05,1.1910E-04,1.6020E-04,2.0000E-04,2.3800E-04,2.7400E-04,3.0810E-04,3.4010E-04,3.7000E-04,3.9880E-04,4.2550E-04,4.5110E-04,4.9850E-04,5.4150E-04,5.8040E-04,6.1650E-04,6.4930E-04,6.7980E-04,7.0830E-04,8.2460E-04,9.1200E-04,9.8060E-04,1.0830E-03,1.1570E-03,1.2780E-03,1.3520E-03,1.4420E-03,1.4960E-03,1.5320E-03,1.5590E-03,1.5950E-03,1.6190E-03,1.6550E-03,1.6750E-03,1.6960E-03,1.7090E-03,1.7170E-03,1.7220E-03,1.7300E-03,1.7340E-03,1.7400E-03,1.7440E-03,1.7480E-03,1.7500E-03,1.7510E-03,1.7520E-03,1.7530E-03,1.7530E-03};
	final static double[] TotAttn= {5.2090E+03,2.3560E+03,1.2850E+03,8.0090E+02,1.3960E+03,1.6470E+03,1.9440E+03,2.4500E+03,1.9650E+03,1.8570E+03,2.1460E+03,1.7920E+03,1.4960E+03,1.5850E+03,1.4410E+03,1.3110E+03,1.3680E+03,1.2510E+03,7.3050E+02,4.6720E+02,2.2870E+02,1.3060E+02,6.7000E+01,1.6210E+02,1.1160E+02,1.0780E+02,1.4850E+02,1.4120E+02,1.3440E+02,1.5480E+02,8.6370E+01,3.0320E+01,1.4360E+01,8.0420E+00,5.0200E+00,2.4190E+00,1.9100E+00,7.6840E+00,5.5490E+00,2.0150E+00,9.9860E-01,4.0320E-01,2.3230E-01,1.6130E-01,1.2480E-01,8.8700E-02,7.1020E-02,6.9620E-02,5.8750E-02,5.2220E-02,4.6070E-02,4.5770E-02,4.2340E-02,4.1980E-02,4.2720E-02,4.3910E-02,4.5280E-02,4.6750E-02,4.8230E-02,4.9720E-02,5.1170E-02,5.2600E-02,5.3970E-02,5.5320E-02,5.6580E-02,5.7780E-02,6.0010E-02,6.2060E-02,6.3940E-02,6.5690E-02,6.7300E-02,6.8810E-02,7.0220E-02,7.6100E-02,8.0560E-02,8.4080E-02,8.9340E-02,9.3100E-02,9.9090E-02,1.0270E-01,1.0690E-01,1.0930E-01,1.1090E-01,1.1210E-01,1.1360E-01,1.1460E-01,1.1600E-01,1.1680E-01,1.1770E-01,1.1810E-01,1.1840E-01,1.1860E-01,1.1880E-01,1.1900E-01,1.1920E-01,1.1940E-01,1.1950E-01,1.1960E-01,1.1960E-01,1.1960E-01,1.1970E-01,1.1970E-01};

	//******************************************************************************

	/**
	 * @return The array of tabulated photon energies
	 */
	public double[] getMevArray()
	{
		return MeV;
	}

	//******************************************************************************

	public double getMuMass(double theMeV, String muMassType)
	{
		double[] muArr;
		double muMass;
		double muLo = 0;
		double muHi = 0;
		double mevLo = 0;
		double mevHi = 0;

		switch(muMassType)
		{
		case "TotAttn":
			muArr = TotAttn;
			break;
		case "Raleigh":
			muArr = Coh;
			break;
		case "Compton":
			muArr = Incoh;
			break;
		case "PhotoElectric":
			muArr = PE;
			break;
		case "PairProdN":
			muArr = PrProdN;
			break;
		case "PairProdE":
			muArr = PrProdE;
			break;
		default:
			muArr = TotAttn;
			break;
		}

		//Report the muMass at 100GeV for any energy at or above 100GeV
		if(theMeV >= 100000.0)
		{
			muMass = muArr[muArr.length - 1];
		}			
		else
		{
			//Look everywhere except the last point
			for(int i = 0; i< muArr.length - 1;i++)
			{
				if(MeV[i] <= theMeV && MeV[i + 1] > theMeV)
				{
					mevLo = MeV[i];
					mevHi = MeV[i+1];
					muLo = muArr[i];
					muHi = muArr[i + 1];
					break;
				}
			}
			if(muLo ==0) muMass = 0.0;
			else muMass = Interpolation.logTerp(mevLo, mevHi, theMeV, muLo, muHi);
		}
		return muMass;
	}		
}
